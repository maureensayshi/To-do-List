!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=9)}([function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){e.exports=n(23)()},function(e,t,n){"use strict";(function(e,r){var o,a=n(8);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var i=Object(a.a)(o);t.a=i}).call(this,n(20),n(21)(e))},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){i=r(n);for(var s=0;s<i.length;s++)a.call(n,i[s])&&(l[i[s]]=n[i[s]])}}return l}},function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,a,i,l,u){if(r(t),!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,o,a,i,l,u],f=0;(c=new Error(t.replace(/%s/g,function(){return s[f++]}))).name="Invariant Violation"}throw c.framesToPop=1,c}}},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){e.exports=n.p+"317a8ff11deabeb10b75b524044f2f05.png"},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=f(o),i=f(n(11)),l=n(19),u=f(n(22)),c=f(n(25)),s=f(n(27));n(28);f(n(7));function f(e){return e&&e.__esModule?e:{default:e}}console.log(l.createStore);var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={inputValue:"",todos:[],tabs:"All"},n.handleChange=n.handleChange.bind(n),n.handleSubmit=n.handleSubmit.bind(n),n.handleFinish=n.handleFinish.bind(n),n.handleDelete=n.handleDelete.bind(n),n.handleTabs=n.handleTabs.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"handleChange",value:function(e){e.preventDefault(),this.setState({inputValue:e.target.value})}},{key:"handleSubmit",value:function(e){e.preventDefault();var t={value:this.state.inputValue,done:!1},n=this.state.todos;n.push(t),this.setState({todos:n,inputValue:""})}},{key:"handleFinish",value:function(e){var t=this.state.todos;t[e].done=!t[e].done,this.setState({todos:t}),console.log(t)}},{key:"handleDelete",value:function(e,t){e.preventDefault();var n=this.state.todos;n.splice(t,1),this.setState({todos:n}),console.log(n)}},{key:"handleTabs",value:function(e){e.preventDefault(),this.setState({tabs:e.target.value})}},{key:"render",value:function(){return a.default.createElement("div",null,a.default.createElement("div",null,a.default.createElement("span",null),a.default.createElement("h1",null,"Make your Todolist")),a.default.createElement(u.default,{handleSubmit:this.handleSubmit,handleChange:this.handleChange,inputValue:this.state.inputValue}),a.default.createElement(s.default,{tabs:this.state.tabs,handleTabs:this.handleTabs}),a.default.createElement(c.default,{handleFinish:this.handleFinish,todos:this.state.todos,handleDelete:this.handleDelete,tabs:this.state.tabs}))}}]),t}();t.default=d,i.default.render(a.default.createElement(d,null),document.querySelector(".appContainer"))},function(e,t,n){"use strict";
/** @license React v16.4.2
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(3),o=n(4),a=n(5),i=n(6),l="function"==typeof Symbol&&Symbol.for,u=l?Symbol.for("react.element"):60103,c=l?Symbol.for("react.portal"):60106,s=l?Symbol.for("react.fragment"):60107,f=l?Symbol.for("react.strict_mode"):60108,d=l?Symbol.for("react.profiler"):60114,p=l?Symbol.for("react.provider"):60109,h=l?Symbol.for("react.context"):60110,m=l?Symbol.for("react.async_mode"):60111,v=l?Symbol.for("react.forward_ref"):60112;l&&Symbol.for("react.timeout");var y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);o(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function w(e,t,n){this.props=e,this.context=t,this.refs=a,this.updater=n||b}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=a,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=x.prototype=new k;E.constructor=x,r(E,w.prototype),E.isPureReactComponent=!0;var _={current:null},C=Object.prototype.hasOwnProperty,T={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r=void 0,o={},a=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(a=""+t.key),t)C.call(t,r)&&!T.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var c=Array(l),s=0;s<l;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:u,type:e,key:a,ref:i,props:o,_owner:_.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===u}var O=/\/+/g,N=[];function R(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function j(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function U(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case u:case c:a=!0}}if(a)return n(r,e,""===t?"."+I(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var i=0;i<e.length;i++){var l=t+I(o=e[i],i);a+=U(o,l,n,r)}else if(null===e||void 0===e?l=null:l="function"==typeof(l=y&&e[y]||e["@@iterator"])?l:null,"function"==typeof l)for(e=l.call(e),i=0;!(o=e.next()).done;)a+=U(o=o.value,l=t+I(o,i++),n,r);else"object"===o&&g("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return a}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function M(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,i.thatReturnsArgument):null!=e&&(P(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n,e={$$typeof:u,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function D(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(O,"$&/")+"/"),t=R(t,a,r,o),null==e||U(e,"",F,t),j(t)}var L={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=R(null,null,t,n),null==e||U(e,"",M,t),j(t)},count:function(e){return null==e?0:U(e,"",i.thatReturnsNull,null)},toArray:function(e){var t=[];return D(e,t,null,i.thatReturnsArgument),t},only:function(e){return P(e)||g("143"),e}},createRef:function(){return{current:null}},Component:w,PureComponent:x,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:h,_calculateChangedBits:t,_defaultValue:e,_currentValue:e,_currentValue2:e,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null}).Provider={$$typeof:p,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:v,render:e}},Fragment:s,StrictMode:f,unstable_AsyncMode:m,unstable_Profiler:d,createElement:S,cloneElement:function(e,t,n){(null===e||void 0===e)&&g("267",e);var o=void 0,a=r({},e.props),i=e.key,l=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,c=_.current),void 0!==t.key&&(i=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)C.call(t,o)&&!T.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:u,type:e.type,key:i,ref:l,props:a,_owner:c}},createFactory:function(e){var t=S.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.4.2",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:_,assign:r}},A={default:L},z=A&&L||A;e.exports=z.default?z.default:z},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(12)},function(e,t,n){"use strict";
/** @license React v16.4.2
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(4),o=n(0),a=n(13),i=n(3),l=n(6),u=n(14),c=n(15),s=n(16),f=n(5);function d(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=0;o<t;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);r(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}o||d("227");var p={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(e,t,n,r,o,a,i,l,u){(function(e,t,n,r,o,a,i,l,u){this._hasCaughtError=!1,this._caughtError=null;var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this._caughtError=e,this._hasCaughtError=!0}}).apply(p,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,a,i,l,u){if(p.invokeGuardedCallback.apply(this,arguments),p.hasCaughtError()){var c=p.clearCaughtError();p._hasRethrowError||(p._hasRethrowError=!0,p._rethrowError=c)}},rethrowCaughtError:function(){return function(){if(p._hasRethrowError){var e=p._rethrowError;throw p._rethrowError=null,p._hasRethrowError=!1,e}}.apply(p,arguments)},hasCaughtError:function(){return p._hasCaughtError},clearCaughtError:function(){if(p._hasCaughtError){var e=p._caughtError;return p._caughtError=null,p._hasCaughtError=!1,e}d("198")}};var h=null,m={};function v(){if(h)for(var e in m){var t=m[e],n=h.indexOf(e);if(-1<n||d("96",e),!g[n])for(var r in t.extractEvents||d("97",e),g[n]=t,n=t.eventTypes){var o=void 0,a=n[r],i=t,l=r;b.hasOwnProperty(l)&&d("99",l),b[l]=a;var u=a.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&y(u[o],i,l);o=!0}else a.registrationName?(y(a.registrationName,i,l),o=!0):o=!1;o||d("98",r,e)}}}function y(e,t,n){w[e]&&d("100",e),w[e]=t,k[e]=t.eventTypes[n].dependencies}var g=[],b={},w={},k={};function x(e){h&&d("101"),h=Array.prototype.slice.call(e),v()}function E(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&d("102",t),m[t]=r,n=!0)}n&&v()}var _={plugins:g,eventNameDispatchConfigs:b,registrationNameModules:w,registrationNameDependencies:k,possibleRegistrationNames:null,injectEventPluginOrder:x,injectEventPluginsByName:E},C=null,T=null,S=null;function P(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=S(r),p.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function O(e,t){return null==t&&d("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function N(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var R=null;function j(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)P(e,t,n[o],r[o]);else n&&P(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function U(e){return j(e,!0)}function I(e){return j(e,!1)}var M={injectEventPluginOrder:x,injectEventPluginsByName:E};function F(e,t){var n=e.stateNode;if(!n)return null;var r=C(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&d("231",t,typeof n),n)}function D(e,t){null!==e&&(R=O(R,e)),e=R,R=null,e&&(N(e,t?U:I),R&&d("95"),p.rethrowCaughtError())}function L(e,t,n,r){for(var o=null,a=0;a<g.length;a++){var i=g[a];i&&(i=i.extractEvents(e,t,n,r))&&(o=O(o,i))}D(o,!1)}var A={injection:M,getListener:F,runEventsInBatch:D,runExtractedEventsInBatch:L},z=Math.random().toString(36).slice(2),V="__reactInternalInstance$"+z,B="__reactEventHandlers$"+z;function W(e){if(e[V])return e[V];for(;!e[V];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[V]).tag||6===e.tag?e:null}function H(e){if(5===e.tag||6===e.tag)return e.stateNode;d("33")}function $(e){return e[B]||null}var q={precacheFiberNode:function(e,t){t[V]=e},getClosestInstanceFromNode:W,getInstanceFromNode:function(e){return!(e=e[V])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:H,getFiberCurrentPropsFromNode:$,updateFiberProps:function(e,t){e[B]=t}};function K(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Q(e,t,n){for(var r=[];e;)r.push(e),e=K(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function Y(e,t,n){(t=F(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function G(e){e&&e.dispatchConfig.phasedRegistrationNames&&Q(e._targetInst,Y,e)}function X(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;Q(t=t?K(t):null,Y,e)}}function J(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=F(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function Z(e){e&&e.dispatchConfig.registrationName&&J(e._targetInst,null,e)}function ee(e){N(e,G)}function te(e,t,n,r){if(n&&r)e:{for(var o=n,a=r,i=0,l=o;l;l=K(l))i++;l=0;for(var u=a;u;u=K(u))l++;for(;0<i-l;)o=K(o),i--;for(;0<l-i;)a=K(a),l--;for(;i--;){if(o===a||o===a.alternate)break e;o=K(o),a=K(a)}o=null}else o=null;for(a=o,o=[];n&&n!==a&&(null===(i=n.alternate)||i!==a);)o.push(n),n=K(n);for(n=[];r&&r!==a&&(null===(i=r.alternate)||i!==a);)n.push(r),r=K(r);for(r=0;r<o.length;r++)J(o[r],"bubbled",e);for(e=n.length;0<e--;)J(n[e],"captured",t)}var ne={accumulateTwoPhaseDispatches:ee,accumulateTwoPhaseDispatchesSkipTarget:function(e){N(e,X)},accumulateEnterLeaveDispatches:te,accumulateDirectDispatches:function(e){N(e,Z)}};function re(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var oe={animationend:re("Animation","AnimationEnd"),animationiteration:re("Animation","AnimationIteration"),animationstart:re("Animation","AnimationStart"),transitionend:re("Transition","TransitionEnd")},ae={},ie={};function le(e){if(ae[e])return ae[e];if(!oe[e])return e;var t,n=oe[e];for(t in n)if(n.hasOwnProperty(t)&&t in ie)return ae[e]=n[t];return e}a.canUseDOM&&(ie=document.createElement("div").style,"AnimationEvent"in window||(delete oe.animationend.animation,delete oe.animationiteration.animation,delete oe.animationstart.animation),"TransitionEvent"in window||delete oe.transitionend.transition);var ue=le("animationend"),ce=le("animationiteration"),se=le("animationstart"),fe=le("transitionend"),de="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),pe=null;function he(){return!pe&&a.canUseDOM&&(pe="textContent"in document.documentElement?"textContent":"innerText"),pe}var me={_root:null,_startText:null,_fallbackText:null};function ve(){if(me._fallbackText)return me._fallbackText;var e,t,n=me._startText,r=n.length,o=ye(),a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return me._fallbackText=o.slice(e,1<t?1-t:void 0),me._fallbackText}function ye(){return"value"in me._root?me._root.value:me._root[he()]}var ge="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),be={type:null,target:null,currentTarget:l.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function we(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?l.thatReturnsTrue:l.thatReturnsFalse,this.isPropagationStopped=l.thatReturnsFalse,this}function ke(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function xe(e){e instanceof this||d("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Ee(e){e.eventPool=[],e.getPooled=ke,e.release=xe}i(we.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=l.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=l.thatReturnsTrue)},persist:function(){this.isPersistent=l.thatReturnsTrue},isPersistent:l.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<ge.length;t++)this[ge[t]]=null}}),we.Interface=be,we.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,Ee(n),n},Ee(we);var _e=we.extend({data:null}),Ce=we.extend({data:null}),Te=[9,13,27,32],Se=a.canUseDOM&&"CompositionEvent"in window,Pe=null;a.canUseDOM&&"documentMode"in document&&(Pe=document.documentMode);var Oe=a.canUseDOM&&"TextEvent"in window&&!Pe,Ne=a.canUseDOM&&(!Se||Pe&&8<Pe&&11>=Pe),Re=String.fromCharCode(32),je={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Ue=!1;function Ie(e,t){switch(e){case"keyup":return-1!==Te.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Me(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Fe=!1;var De={eventTypes:je,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(Se)e:{switch(e){case"compositionstart":o=je.compositionStart;break e;case"compositionend":o=je.compositionEnd;break e;case"compositionupdate":o=je.compositionUpdate;break e}o=void 0}else Fe?Ie(e,n)&&(o=je.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=je.compositionStart);return o?(Ne&&(Fe||o!==je.compositionStart?o===je.compositionEnd&&Fe&&(a=ve()):(me._root=r,me._startText=ye(),Fe=!0)),o=_e.getPooled(o,t,n,r),a?o.data=a:null!==(a=Me(n))&&(o.data=a),ee(o),a=o):a=null,(e=Oe?function(e,t){switch(e){case"compositionend":return Me(t);case"keypress":return 32!==t.which?null:(Ue=!0,Re);case"textInput":return(e=t.data)===Re&&Ue?null:e;default:return null}}(e,n):function(e,t){if(Fe)return"compositionend"===e||!Se&&Ie(e,t)?(e=ve(),me._root=null,me._startText=null,me._fallbackText=null,Fe=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ne?null:t.data;default:return null}}(e,n))?((t=Ce.getPooled(je.beforeInput,t,n,r)).data=e,ee(t)):t=null,null===a?t:null===t?a:[a,t]}},Le=null,Ae={injectFiberControlledHostComponent:function(e){Le=e}},ze=null,Ve=null;function Be(e){if(e=T(e)){Le&&"function"==typeof Le.restoreControlledState||d("194");var t=C(e.stateNode);Le.restoreControlledState(e.stateNode,e.type,t)}}function We(e){ze?Ve?Ve.push(e):Ve=[e]:ze=e}function He(){return null!==ze||null!==Ve}function $e(){if(ze){var e=ze,t=Ve;if(Ve=ze=null,Be(e),t)for(e=0;e<t.length;e++)Be(t[e])}}var qe={injection:Ae,enqueueStateRestore:We,needsStateRestore:He,restoreStateIfNeeded:$e};function Ke(e,t){return e(t)}function Qe(e,t,n){return e(t,n)}function Ye(){}var Ge=!1;function Xe(e,t){if(Ge)return e(t);Ge=!0;try{return Ke(e,t)}finally{Ge=!1,He()&&(Ye(),$e())}}var Je={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Je[e.type]:"textarea"===t}function et(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function tt(e,t){return!(!a.canUseDOM||t&&!("addEventListener"in document))&&((t=(e="on"+e)in document)||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t)}function nt(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function rt(e){e._valueTracker||(e._valueTracker=function(e){var t=nt(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ot(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=nt(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var at=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,it="function"==typeof Symbol&&Symbol.for,lt=it?Symbol.for("react.element"):60103,ut=it?Symbol.for("react.portal"):60106,ct=it?Symbol.for("react.fragment"):60107,st=it?Symbol.for("react.strict_mode"):60108,ft=it?Symbol.for("react.profiler"):60114,dt=it?Symbol.for("react.provider"):60109,pt=it?Symbol.for("react.context"):60110,ht=it?Symbol.for("react.async_mode"):60111,mt=it?Symbol.for("react.forward_ref"):60112,vt=it?Symbol.for("react.timeout"):60113,yt="function"==typeof Symbol&&Symbol.iterator;function gt(e){return null===e||void 0===e?null:"function"==typeof(e=yt&&e[yt]||e["@@iterator"])?e:null}function bt(e){var t=e.type;if("function"==typeof t)return t.displayName||t.name;if("string"==typeof t)return t;switch(t){case ht:return"AsyncMode";case pt:return"Context.Consumer";case ct:return"ReactFragment";case ut:return"ReactPortal";case ft:return"Profiler("+e.pendingProps.id+")";case dt:return"Context.Provider";case st:return"StrictMode";case vt:return"Timeout"}if("object"==typeof t&&null!==t)switch(t.$$typeof){case mt:return""!==(e=t.render.displayName||t.render.name||"")?"ForwardRef("+e+")":"ForwardRef"}return null}function wt(e){var t="";do{e:switch(e.tag){case 0:case 1:case 2:case 5:var n=e._debugOwner,r=e._debugSource,o=bt(e),a=null;n&&(a=bt(n)),n=r,o="\n    in "+(o||"Unknown")+(n?" (at "+n.fileName.replace(/^.*[\\\/]/,"")+":"+n.lineNumber+")":a?" (created by "+a+")":"");break e;default:o=""}t+=o,e=e.return}while(e);return t}var kt=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,xt=Object.prototype.hasOwnProperty,Et={},_t={};function Ct(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var Tt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){Tt[e]=new Ct(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];Tt[t]=new Ct(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){Tt[e]=new Ct(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(e){Tt[e]=new Ct(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){Tt[e]=new Ct(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){Tt[e]=new Ct(e,3,!0,e.toLowerCase(),null)}),["capture","download"].forEach(function(e){Tt[e]=new Ct(e,4,!1,e.toLowerCase(),null)}),["cols","rows","size","span"].forEach(function(e){Tt[e]=new Ct(e,6,!1,e.toLowerCase(),null)}),["rowSpan","start"].forEach(function(e){Tt[e]=new Ct(e,5,!1,e.toLowerCase(),null)});var St=/[\-:]([a-z])/g;function Pt(e){return e[1].toUpperCase()}function Ot(e,t,n,r){var o=Tt.hasOwnProperty(t)?Tt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||void 0===t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!xt.call(_t,e)||!xt.call(Et,e)&&(kt.test(e)?_t[e]=!0:(Et[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Nt(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Rt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Ft(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function jt(e,t){null!=(t=t.checked)&&Ot(e,"checked",t,!1)}function Ut(e,t){jt(e,t);var n=Ft(t.value);null!=n&&("number"===t.type?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n)),t.hasOwnProperty("value")?Mt(e,t.type,n):t.hasOwnProperty("defaultValue")&&Mt(e,t.type,Ft(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function It(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){t=""+e._wrapperState.initialValue;var r=e.value;n||t===r||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==n&&(e.name=n)}function Mt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Ft(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(St,Pt);Tt[t]=new Ct(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(St,Pt);Tt[t]=new Ct(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(St,Pt);Tt[t]=new Ct(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),Tt.tabIndex=new Ct("tabIndex",1,!1,"tabindex",null);var Dt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Lt(e,t,n){return(e=we.getPooled(Dt.change,e,t,n)).type="change",We(n),ee(e),e}var At=null,zt=null;function Vt(e){D(e,!1)}function Bt(e){if(ot(H(e)))return e}function Wt(e,t){if("change"===e)return t}var Ht=!1;function $t(){At&&(At.detachEvent("onpropertychange",qt),zt=At=null)}function qt(e){"value"===e.propertyName&&Bt(zt)&&Xe(Vt,e=Lt(zt,e,et(e)))}function Kt(e,t,n){"focus"===e?($t(),zt=n,(At=t).attachEvent("onpropertychange",qt)):"blur"===e&&$t()}function Qt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Bt(zt)}function Yt(e,t){if("click"===e)return Bt(t)}function Gt(e,t){if("input"===e||"change"===e)return Bt(t)}a.canUseDOM&&(Ht=tt("input")&&(!document.documentMode||9<document.documentMode));var Xt={eventTypes:Dt,_isInputEventSupported:Ht,extractEvents:function(e,t,n,r){var o=t?H(t):window,a=void 0,i=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?a=Wt:Ze(o)?Ht?a=Gt:(a=Qt,i=Kt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Yt),a&&(a=a(e,t)))return Lt(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Mt(o,"number",o.value)}},Jt=we.extend({view:null,detail:null}),Zt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function en(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Zt[e])&&!!t[e]}function tn(){return en}var nn=Jt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:tn,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}}),rn=nn.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),on={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},an={eventTypes:on,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?W(t):null):a=null,a===t)return null;var i=void 0,l=void 0,u=void 0,c=void 0;return"mouseout"===e||"mouseover"===e?(i=nn,l=on.mouseLeave,u=on.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=rn,l=on.pointerLeave,u=on.pointerEnter,c="pointer"),e=null==a?o:H(a),o=null==t?o:H(t),(l=i.getPooled(l,a,n,r)).type=c+"leave",l.target=e,l.relatedTarget=o,(n=i.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=e,te(l,n,a,t),[l,n]}};function ln(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function un(e){2!==ln(e)&&d("188")}function cn(e){var t=e.alternate;if(!t)return 3===(t=ln(e))&&d("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var i=o.child;i;){if(i===n)return un(o),e;if(i===r)return un(o),t;i=i.sibling}d("188")}if(n.return!==r.return)n=o,r=a;else{i=!1;for(var l=o.child;l;){if(l===n){i=!0,n=o,r=a;break}if(l===r){i=!0,r=o,n=a;break}l=l.sibling}if(!i){for(l=a.child;l;){if(l===n){i=!0,n=a,r=o;break}if(l===r){i=!0,r=a,n=o;break}l=l.sibling}i||d("189")}}n.alternate!==r&&d("190")}return 3!==n.tag&&d("188"),n.stateNode.current===n?e:t}function sn(e){if(!(e=cn(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var fn=we.extend({animationName:null,elapsedTime:null,pseudoElement:null}),dn=we.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),pn=Jt.extend({relatedTarget:null});function hn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var mn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},vn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},yn=Jt.extend({key:function(e){if(e.key){var t=mn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=hn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?vn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:tn,charCode:function(e){return"keypress"===e.type?hn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?hn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),gn=nn.extend({dataTransfer:null}),bn=Jt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:tn}),wn=we.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),kn=nn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),xn=[["abort","abort"],[ue,"animationEnd"],[ce,"animationIteration"],[se,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[fe,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],En={},_n={};function Cn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},En[e]=t,_n[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){Cn(e,!0)}),xn.forEach(function(e){Cn(e,!1)});var Tn={eventTypes:En,isInteractiveTopLevelEventType:function(e){return void 0!==(e=_n[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=_n[e];if(!o)return null;switch(e){case"keypress":if(0===hn(n))return null;case"keydown":case"keyup":e=yn;break;case"blur":case"focus":e=pn;break;case"click":if(2===n.button)return null;case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=nn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=bn;break;case ue:case ce:case se:e=fn;break;case fe:e=wn;break;case"scroll":e=Jt;break;case"wheel":e=kn;break;case"copy":case"cut":case"paste":e=dn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=rn;break;default:e=we}return ee(t=e.getPooled(o,t,n,r)),t}},Sn=Tn.isInteractiveTopLevelEventType,Pn=[];function On(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=W(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],L(e.topLevelType,t,e.nativeEvent,et(e.nativeEvent))}var Nn=!0;function Rn(e){Nn=!!e}function jn(e,t){if(!t)return null;var n=(Sn(e)?In:Mn).bind(null,e);t.addEventListener(e,n,!1)}function Un(e,t){if(!t)return null;var n=(Sn(e)?In:Mn).bind(null,e);t.addEventListener(e,n,!0)}function In(e,t){Qe(Mn,e,t)}function Mn(e,t){if(Nn){var n=et(t);if(null===(n=W(n))||"number"!=typeof n.tag||2===ln(n)||(n=null),Pn.length){var r=Pn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Xe(On,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Pn.length&&Pn.push(e)}}}var Fn={get _enabled(){return Nn},setEnabled:Rn,isEnabled:function(){return Nn},trapBubbledEvent:jn,trapCapturedEvent:Un,dispatchEvent:Mn},Dn={},Ln=0,An="_reactListenersID"+(""+Math.random()).slice(2);function zn(e){return Object.prototype.hasOwnProperty.call(e,An)||(e[An]=Ln++,Dn[e[An]]={}),Dn[e[An]]}function Vn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Bn(e,t){var n,r=Vn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Vn(r)}}function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Hn=a.canUseDOM&&"documentMode"in document&&11>=document.documentMode,$n={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},qn=null,Kn=null,Qn=null,Yn=!1;function Gn(e,t){if(Yn||null==qn||qn!==u())return null;var n=qn;return"selectionStart"in n&&Wn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,Qn&&c(Qn,n)?null:(Qn=n,(e=we.getPooled($n.select,Kn,e,t)).type="select",e.target=qn,ee(e),e)}var Xn={eventTypes:$n,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=zn(a),o=k.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?H(t):window,e){case"focus":(Ze(a)||"true"===a.contentEditable)&&(qn=a,Kn=t,Qn=null);break;case"blur":Qn=Kn=qn=null;break;case"mousedown":Yn=!0;break;case"contextmenu":case"mouseup":return Yn=!1,Gn(n,r);case"selectionchange":if(Hn)break;case"keydown":case"keyup":return Gn(n,r)}return null}};M.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),C=q.getFiberCurrentPropsFromNode,T=q.getInstanceFromNode,S=q.getNodeFromInstance,M.injectEventPluginsByName({SimpleEventPlugin:Tn,EnterLeaveEventPlugin:an,ChangeEventPlugin:Xt,SelectEventPlugin:Xn,BeforeInputEventPlugin:De});var Jn="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,Zn=Date,er=setTimeout,tr=clearTimeout,nr=void 0;if("object"==typeof performance&&"function"==typeof performance.now){var rr=performance;nr=function(){return rr.now()}}else nr=function(){return Zn.now()};var or=void 0,ar=void 0;if(a.canUseDOM){var ir="function"==typeof Jn?Jn:function(){d("276")},lr=null,ur=null,cr=-1,sr=!1,fr=!1,dr=0,pr=33,hr=33,mr={didTimeout:!1,timeRemaining:function(){var e=dr-nr();return 0<e?e:0}},vr=function(e,t){var n=e.scheduledCallback,r=!1;try{n(t),r=!0}finally{ar(e),r||(sr=!0,window.postMessage(yr,"*"))}},yr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===yr&&(sr=!1,null!==lr)){if(null!==lr){var t=nr();if(!(-1===cr||cr>t)){e=-1;for(var n=[],r=lr;null!==r;){var o=r.timeoutTime;-1!==o&&o<=t?n.push(r):-1!==o&&(-1===e||o<e)&&(e=o),r=r.next}if(0<n.length)for(mr.didTimeout=!0,t=0,r=n.length;t<r;t++)vr(n[t],mr);cr=e}}for(e=nr();0<dr-e&&null!==lr;)e=lr,mr.didTimeout=!1,vr(e,mr),e=nr();null===lr||fr||(fr=!0,ir(gr))}},!1);var gr=function(e){fr=!1;var t=e-dr+hr;t<hr&&pr<hr?(8>t&&(t=8),hr=t<pr?pr:t):pr=t,dr=e+hr,sr||(sr=!0,window.postMessage(yr,"*"))};or=function(e,t){var n=-1;return null!=t&&"number"==typeof t.timeout&&(n=nr()+t.timeout),(-1===cr||-1!==n&&n<cr)&&(cr=n),e={scheduledCallback:e,timeoutTime:n,prev:null,next:null},null===lr?lr=e:null!==(t=e.prev=ur)&&(t.next=e),ur=e,fr||(fr=!0,ir(gr)),e},ar=function(e){if(null!==e.prev||lr===e){var t=e.next,n=e.prev;e.next=null,e.prev=null,null!==t?null!==n?(n.next=t,t.prev=n):(t.prev=null,lr=t):null!==n?(n.next=null,ur=n):ur=lr=null}}}else{var br=new Map;or=function(e){var t={scheduledCallback:e,timeoutTime:0,next:null,prev:null},n=er(function(){e({timeRemaining:function(){return 1/0},didTimeout:!1})});return br.set(e,n),t},ar=function(e){var t=br.get(e.scheduledCallback);br.delete(e),tr(t)}}function wr(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function kr(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function xr(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function Er(e,t){return null!=t.dangerouslySetInnerHTML&&d("91"),i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function _r(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&d("92"),Array.isArray(t)&&(1>=t.length||d("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function Cr(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function Tr(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var Sr={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Pr(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Or(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Pr(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Nr=void 0,Rr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Sr.svg||"innerHTML"in e)e.innerHTML=t;else{for((Nr=Nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=Nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function jr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var Ur={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ir=["Webkit","ms","Moz","O"];function Mr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,a=t[n];o=null==a||"boolean"==typeof a||""===a?"":r||"number"!=typeof a||0===a||Ur.hasOwnProperty(o)&&Ur[o]?(""+a).trim():a+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Ur).forEach(function(e){Ir.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Ur[t]=Ur[e]})});var Fr=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Dr(e,t,n){t&&(Fr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&d("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&d("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||d("61")),null!=t.style&&"object"!=typeof t.style&&d("62",n()))}function Lr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ar=l.thatReturns("");function zr(e,t){var n=zn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=k[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Un("scroll",e);break;case"focus":case"blur":Un("focus",e),Un("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":tt(o,!0)&&Un(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===de.indexOf(o)&&jn(o,e)}n[o]=!0}}}function Vr(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===Sr.html&&(r=Pr(e)),r===Sr.html?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function Br(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function Wr(e,t,n,r){var o=Lr(t,n);switch(t){case"iframe":case"object":jn("load",e);var a=n;break;case"video":case"audio":for(a=0;a<de.length;a++)jn(de[a],e);a=n;break;case"source":jn("error",e),a=n;break;case"img":case"image":case"link":jn("error",e),jn("load",e),a=n;break;case"form":jn("reset",e),jn("submit",e),a=n;break;case"details":jn("toggle",e),a=n;break;case"input":Rt(e,n),a=Nt(e,n),jn("invalid",e),zr(r,"onChange");break;case"option":a=wr(e,n);break;case"select":xr(e,n),a=i({},n,{value:void 0}),jn("invalid",e),zr(r,"onChange");break;case"textarea":_r(e,n),a=Er(e,n),jn("invalid",e),zr(r,"onChange");break;default:a=n}Dr(t,a,Ar);var u,c=a;for(u in c)if(c.hasOwnProperty(u)){var s=c[u];"style"===u?Mr(e,s):"dangerouslySetInnerHTML"===u?null!=(s=s?s.__html:void 0)&&Rr(e,s):"children"===u?"string"==typeof s?("textarea"!==t||""!==s)&&jr(e,s):"number"==typeof s&&jr(e,""+s):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(w.hasOwnProperty(u)?null!=s&&zr(r,u):null!=s&&Ot(e,u,s,o))}switch(t){case"input":rt(e),It(e,n,!1);break;case"textarea":rt(e),Tr(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?kr(e,!!n.multiple,t,!1):null!=n.defaultValue&&kr(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=l)}}function Hr(e,t,n,r,o){var a=null;switch(t){case"input":n=Nt(e,n),r=Nt(e,r),a=[];break;case"option":n=wr(e,n),r=wr(e,r),a=[];break;case"select":n=i({},n,{value:void 0}),r=i({},r,{value:void 0}),a=[];break;case"textarea":n=Er(e,n),r=Er(e,r),a=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=l)}Dr(t,r,Ar),t=e=void 0;var u=null;for(e in n)if(!r.hasOwnProperty(e)&&n.hasOwnProperty(e)&&null!=n[e])if("style"===e){var c=n[e];for(t in c)c.hasOwnProperty(t)&&(u||(u={}),u[t]="")}else"dangerouslySetInnerHTML"!==e&&"children"!==e&&"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&"autoFocus"!==e&&(w.hasOwnProperty(e)?a||(a=[]):(a=a||[]).push(e,null));for(e in r){var s=r[e];if(c=null!=n?n[e]:void 0,r.hasOwnProperty(e)&&s!==c&&(null!=s||null!=c))if("style"===e)if(c){for(t in c)!c.hasOwnProperty(t)||s&&s.hasOwnProperty(t)||(u||(u={}),u[t]="");for(t in s)s.hasOwnProperty(t)&&c[t]!==s[t]&&(u||(u={}),u[t]=s[t])}else u||(a||(a=[]),a.push(e,u)),u=s;else"dangerouslySetInnerHTML"===e?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(a=a||[]).push(e,""+s)):"children"===e?c===s||"string"!=typeof s&&"number"!=typeof s||(a=a||[]).push(e,""+s):"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&(w.hasOwnProperty(e)?(null!=s&&zr(o,e),a||c===s||(a=[])):(a=a||[]).push(e,s))}return u&&(a=a||[]).push("style",u),a}function $r(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&jt(e,o),Lr(n,r),r=Lr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?Mr(e,l):"dangerouslySetInnerHTML"===i?Rr(e,l):"children"===i?jr(e,l):Ot(e,i,l,r)}switch(n){case"input":Ut(e,o);break;case"textarea":Cr(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?kr(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?kr(e,!!o.multiple,o.defaultValue,!0):kr(e,!!o.multiple,o.multiple?[]:"",!1))}}function qr(e,t,n,r,o){switch(t){case"iframe":case"object":jn("load",e);break;case"video":case"audio":for(r=0;r<de.length;r++)jn(de[r],e);break;case"source":jn("error",e);break;case"img":case"image":case"link":jn("error",e),jn("load",e);break;case"form":jn("reset",e),jn("submit",e);break;case"details":jn("toggle",e);break;case"input":Rt(e,n),jn("invalid",e),zr(o,"onChange");break;case"select":xr(e,n),jn("invalid",e),zr(o,"onChange");break;case"textarea":_r(e,n),jn("invalid",e),zr(o,"onChange")}for(var a in Dr(t,n,Ar),r=null,n)if(n.hasOwnProperty(a)){var i=n[a];"children"===a?"string"==typeof i?e.textContent!==i&&(r=["children",i]):"number"==typeof i&&e.textContent!==""+i&&(r=["children",""+i]):w.hasOwnProperty(a)&&null!=i&&zr(o,a)}switch(t){case"input":rt(e),It(e,n,!0);break;case"textarea":rt(e),Tr(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=l)}return r}function Kr(e,t){return e.nodeValue!==t}var Qr={createElement:Vr,createTextNode:Br,setInitialProperties:Wr,diffProperties:Hr,updateProperties:$r,diffHydratedProperties:qr,diffHydratedText:Kr,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(Ut(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=$(r);o||d("90"),ot(r),Ut(r,o)}}}break;case"textarea":Cr(e,n);break;case"select":null!=(t=n.value)&&kr(e,!!n.multiple,t,!1)}}},Yr=null,Gr=null;function Xr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Jr(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html}var Zr=nr,eo=or,to=ar;function no(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function ro(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var oo=[],ao=-1;function io(e){return{current:e}}function lo(e){0>ao||(e.current=oo[ao],oo[ao]=null,ao--)}function uo(e,t){oo[++ao]=e.current,e.current=t}var co=io(f),so=io(!1),fo=f;function po(e){return mo(e)?fo:co.current}function ho(e,t){var n=e.type.contextTypes;if(!n)return f;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function mo(e){return 2===e.tag&&null!=e.type.childContextTypes}function vo(e){mo(e)&&(lo(so),lo(co))}function yo(e){lo(so),lo(co)}function go(e,t,n){co.current!==f&&d("168"),uo(co,t),uo(so,n)}function bo(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||d("108",bt(e)||"Unknown",o);return i({},t,n)}function wo(e){if(!mo(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||f,fo=co.current,uo(co,t),uo(so,so.current),!0}function ko(e,t){var n=e.stateNode;if(n||d("169"),t){var r=bo(e,fo);n.__reactInternalMemoizedMergedChildContext=r,lo(so),lo(co),uo(co,r)}else lo(so);uo(so,t)}function xo(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=null,this.index=0,this.ref=null,this.pendingProps=t,this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function Eo(e,t,n){var r=e.alternate;return null===r?((r=new xo(e.tag,t,e.key,e.mode)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function _o(e,t,n){var r=e.type,o=e.key;if(e=e.props,"function"==typeof r)var a=r.prototype&&r.prototype.isReactComponent?2:0;else if("string"==typeof r)a=5;else switch(r){case ct:return Co(e.children,t,n,o);case ht:a=11,t|=3;break;case st:a=11,t|=2;break;case ft:return(r=new xo(15,e,o,4|t)).type=ft,r.expirationTime=n,r;case vt:a=16,t|=2;break;default:e:{switch("object"==typeof r&&null!==r?r.$$typeof:null){case dt:a=13;break e;case pt:a=12;break e;case mt:a=14;break e;default:d("130",null==r?r:typeof r,"")}a=void 0}}return(t=new xo(a,e,o,t)).type=r,t.expirationTime=n,t}function Co(e,t,n,r){return(e=new xo(10,e,r,t)).expirationTime=n,e}function To(e,t,n){return(e=new xo(6,e,null,t)).expirationTime=n,e}function So(e,t,n){return(t=new xo(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Po(e,t,n){return e={current:t=new xo(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:n,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null},t.stateNode=e}var Oo=null,No=null;function Ro(e){return function(t){try{return e(t)}catch(e){}}}function jo(e){"function"==typeof Oo&&Oo(e)}function Uo(e){"function"==typeof No&&No(e)}var Io=!1;function Mo(e){return{expirationTime:0,baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Fo(e){return{expirationTime:e.expirationTime,baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Do(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Lo(e,t,n){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t),(0===e.expirationTime||e.expirationTime>n)&&(e.expirationTime=n)}function Ao(e,t,n){var r=e.alternate;if(null===r){var o=e.updateQueue,a=null;null===o&&(o=e.updateQueue=Mo(e.memoizedState))}else o=e.updateQueue,a=r.updateQueue,null===o?null===a?(o=e.updateQueue=Mo(e.memoizedState),a=r.updateQueue=Mo(r.memoizedState)):o=e.updateQueue=Fo(a):null===a&&(a=r.updateQueue=Fo(o));null===a||o===a?Lo(o,t,n):null===o.lastUpdate||null===a.lastUpdate?(Lo(o,t,n),Lo(a,t,n)):(Lo(o,t,n),a.lastUpdate=t)}function zo(e,t,n){var r=e.updateQueue;null===(r=null===r?e.updateQueue=Mo(e.memoizedState):Vo(e,r)).lastCapturedUpdate?r.firstCapturedUpdate=r.lastCapturedUpdate=t:(r.lastCapturedUpdate.next=t,r.lastCapturedUpdate=t),(0===r.expirationTime||r.expirationTime>n)&&(r.expirationTime=n)}function Vo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Fo(t)),t}function Bo(e,t,n,r,o,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,o):e;case 3:e.effectTag=-1025&e.effectTag|64;case 0:if(null===(o="function"==typeof(e=n.payload)?e.call(a,r,o):e)||void 0===o)break;return i({},r,o);case 2:Io=!0}return r}function Wo(e,t,n,r,o){if(Io=!1,!(0===t.expirationTime||t.expirationTime>o)){for(var a=(t=Vo(e,t)).baseState,i=null,l=0,u=t.firstUpdate,c=a;null!==u;){var s=u.expirationTime;s>o?(null===i&&(i=u,a=c),(0===l||l>s)&&(l=s)):(c=Bo(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f>o?(null===s&&(s=u,null===i&&(a=c)),(0===l||l>f)&&(l=f)):(c=Bo(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===s&&(a=c),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=s,t.expirationTime=l,e.memoizedState=c}}function Ho(e,t){"function"!=typeof e&&d("191",e),e.call(t)}function $o(e,t,n){for(null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),e=t.firstEffect,t.firstEffect=t.lastEffect=null;null!==e;){var r=e.callback;null!==r&&(e.callback=null,Ho(r,n)),e=e.nextEffect}for(e=t.firstCapturedEffect,t.firstCapturedEffect=t.lastCapturedEffect=null;null!==e;)null!==(t=e.callback)&&(e.callback=null,Ho(t,n)),e=e.nextEffect}function qo(e,t){return{value:e,source:t,stack:wt(t)}}var Ko=io(null),Qo=io(null),Yo=io(0);function Go(e){var t=e.type._context;uo(Yo,t._changedBits),uo(Qo,t._currentValue),uo(Ko,e),t._currentValue=e.pendingProps.value,t._changedBits=e.stateNode}function Xo(e){var t=Yo.current,n=Qo.current;lo(Ko),lo(Qo),lo(Yo),(e=e.type._context)._currentValue=n,e._changedBits=t}var Jo={},Zo=io(Jo),ea=io(Jo),ta=io(Jo);function na(e){return e===Jo&&d("174"),e}function ra(e,t){uo(ta,t),uo(ea,e),uo(Zo,Jo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Or(null,"");break;default:t=Or(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}lo(Zo),uo(Zo,t)}function oa(e){lo(Zo),lo(ea),lo(ta)}function aa(e){ea.current===e&&(lo(Zo),lo(ea))}function ia(e,t,n){var r=e.memoizedState;r=null===(t=t(n,r))||void 0===t?r:i({},r,t),e.memoizedState=r,null!==(e=e.updateQueue)&&0===e.expirationTime&&(e.baseState=r)}var la={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===ln(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=bi(),o=Do(r=yi(r,e));o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Ao(e,o,r),gi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=bi(),o=Do(r=yi(r,e));o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Ao(e,o,r),gi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=bi(),r=Do(n=yi(n,e));r.tag=2,void 0!==t&&null!==t&&(r.callback=t),Ao(e,r,n),gi(e,n)}};function ua(e,t,n,r,o,a){var i=e.stateNode;return e=e.type,"function"==typeof i.shouldComponentUpdate?i.shouldComponentUpdate(n,o,a):!e.prototype||!e.prototype.isPureReactComponent||(!c(t,n)||!c(r,o))}function ca(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&la.enqueueReplaceState(t,t.state,null)}function sa(e,t){var n=e.type,r=e.stateNode,o=e.pendingProps,a=po(e);r.props=o,r.state=e.memoizedState,r.refs=f,r.context=ho(e,a),null!==(a=e.updateQueue)&&(Wo(e,a,o,r,t),r.state=e.memoizedState),"function"==typeof(a=e.type.getDerivedStateFromProps)&&(ia(e,a,o),r.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof r.getSnapshotBeforeUpdate||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||(n=r.state,"function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),n!==r.state&&la.enqueueReplaceState(r,r.state,null),null!==(a=e.updateQueue)&&(Wo(e,a,o,r,t),r.state=e.memoizedState)),"function"==typeof r.componentDidMount&&(e.effectTag|=4)}var fa=Array.isArray;function da(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(2!==n.tag&&d("110"),r=n.stateNode),r||d("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs===f?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&d("148"),n._owner||d("254",e)}return e}function pa(e,t){"textarea"!==e.type&&d("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function ha(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Eo(e,t,n)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function i(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=To(n,e.mode,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function u(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=da(e,t,n),r.return=e,r):((r=_o(n,e.mode,r)).ref=da(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=So(n,e.mode,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function s(e,t,n,r,a){return null===t||10!==t.tag?((t=Co(n,e.mode,r,a)).return=e,t):((t=o(t,n,r)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=To(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case lt:return(n=_o(t,e.mode,n)).ref=da(e,null,t),n.return=e,n;case ut:return(t=So(t,e.mode,n)).return=e,t}if(fa(t)||gt(t))return(t=Co(t,e.mode,n,null)).return=e,t;pa(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case lt:return n.key===o?n.type===ct?s(e,t,n.props.children,r,o):u(e,t,n,r):null;case ut:return n.key===o?c(e,t,n,r):null}if(fa(n)||gt(n))return null!==o?null:s(e,t,n,r,null);pa(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case lt:return e=e.get(null===r.key?n:r.key)||null,r.type===ct?s(t,e,r.props.children,o,r.key):u(t,e,r,o);case ut:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(fa(r)||gt(r))return s(t,e=e.get(n)||null,r,o,null);pa(t,r)}return null}function m(o,i,l,u){for(var c=null,s=null,d=i,m=i=0,v=null;null!==d&&m<l.length;m++){d.index>m?(v=d,d=null):v=d.sibling;var y=p(o,d,l[m],u);if(null===y){null===d&&(d=v);break}e&&d&&null===y.alternate&&t(o,d),i=a(y,i,m),null===s?c=y:s.sibling=y,s=y,d=v}if(m===l.length)return n(o,d),c;if(null===d){for(;m<l.length;m++)(d=f(o,l[m],u))&&(i=a(d,i,m),null===s?c=d:s.sibling=d,s=d);return c}for(d=r(o,d);m<l.length;m++)(v=h(d,o,m,l[m],u))&&(e&&null!==v.alternate&&d.delete(null===v.key?m:v.key),i=a(v,i,m),null===s?c=v:s.sibling=v,s=v);return e&&d.forEach(function(e){return t(o,e)}),c}function v(o,i,l,u){var c=gt(l);"function"!=typeof c&&d("150"),null==(l=c.call(l))&&d("151");for(var s=c=null,m=i,v=i=0,y=null,g=l.next();null!==m&&!g.done;v++,g=l.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(o,m,g.value,u);if(null===b){m||(m=y);break}e&&m&&null===b.alternate&&t(o,m),i=a(b,i,v),null===s?c=b:s.sibling=b,s=b,m=y}if(g.done)return n(o,m),c;if(null===m){for(;!g.done;v++,g=l.next())null!==(g=f(o,g.value,u))&&(i=a(g,i,v),null===s?c=g:s.sibling=g,s=g);return c}for(m=r(o,m);!g.done;v++,g=l.next())null!==(g=h(m,o,v,g.value,u))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),i=a(g,i,v),null===s?c=g:s.sibling=g,s=g);return e&&m.forEach(function(e){return t(o,e)}),c}return function(e,r,a,l){var u="object"==typeof a&&null!==a&&a.type===ct&&null===a.key;u&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case lt:e:{for(c=a.key,u=r;null!==u;){if(u.key===c){if(10===u.tag?a.type===ct:u.type===a.type){n(e,u.sibling),(r=o(u,a.type===ct?a.props.children:a.props,l)).ref=da(e,u,a),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}a.type===ct?((r=Co(a.props.children,e.mode,l,a.key)).return=e,e=r):((l=_o(a,e.mode,l)).ref=da(e,r,a),l.return=e,e=l)}return i(e);case ut:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[],l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=So(a,e.mode,l)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a,l)).return=e,e=r):(n(e,r),(r=To(a,e.mode,l)).return=e,e=r),i(e);if(fa(a))return m(e,r,a,l);if(gt(a))return v(e,r,a,l);if(c&&pa(e,a),void 0===a&&!u)switch(e.tag){case 2:case 1:d("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var ma=ha(!0),va=ha(!1),ya=null,ga=null,ba=!1;function wa(e,t){var n=new xo(5,null,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ka(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function xa(e){if(ba){var t=ga;if(t){var n=t;if(!ka(e,t)){if(!(t=no(n))||!ka(e,t))return e.effectTag|=2,ba=!1,void(ya=e);wa(ya,n)}ya=e,ga=ro(t)}else e.effectTag|=2,ba=!1,ya=e}}function Ea(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;ya=e}function _a(e){if(e!==ya)return!1;if(!ba)return Ea(e),ba=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Jr(t,e.memoizedProps))for(t=ga;t;)wa(e,t),t=no(t);return Ea(e),ga=ya?no(e.stateNode):null,!0}function Ca(){ga=ya=null,ba=!1}function Ta(e,t,n){Sa(e,t,n,t.expirationTime)}function Sa(e,t,n,r){t.child=null===e?va(t,null,n,r):ma(t,e.child,n,r)}function Pa(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Oa(e,t,n,r,o){Pa(e,t);var a=0!=(64&t.effectTag);if(!n&&!a)return r&&ko(t,!1),ja(e,t);n=t.stateNode,at.current=t;var i=a?null:n.render();return t.effectTag|=1,a&&(Sa(e,t,null,o),t.child=null),Sa(e,t,i,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&ko(t,!0),t.child}function Na(e){var t=e.stateNode;t.pendingContext?go(0,t.pendingContext,t.pendingContext!==t.context):t.context&&go(0,t.context,!1),ra(e,t.containerInfo)}function Ra(e,t,n,r){var o=e.child;for(null!==o&&(o.return=e);null!==o;){switch(o.tag){case 12:var a=0|o.stateNode;if(o.type===t&&0!=(a&n)){for(a=o;null!==a;){var i=a.alternate;if(0===a.expirationTime||a.expirationTime>r)a.expirationTime=r,null!==i&&(0===i.expirationTime||i.expirationTime>r)&&(i.expirationTime=r);else{if(null===i||!(0===i.expirationTime||i.expirationTime>r))break;i.expirationTime=r}a=a.return}a=null}else a=o.child;break;case 13:a=o.type===e.type?null:o.child;break;default:a=o.child}if(null!==a)a.return=o;else for(a=o;null!==a;){if(a===e){a=null;break}if(null!==(o=a.sibling)){o.return=a.return,a=o;break}a=a.return}o=a}}function ja(e,t){if(null!==e&&t.child!==e.child&&d("153"),null!==t.child){var n=Eo(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Eo(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ua(e,t,n){if(0===t.expirationTime||t.expirationTime>n){switch(t.tag){case 3:Na(t);break;case 2:wo(t);break;case 4:ra(t,t.stateNode.containerInfo);break;case 13:Go(t)}return null}switch(t.tag){case 0:null!==e&&d("155");var r=t.type,o=t.pendingProps,a=po(t);return r=r(o,a=ho(t,a)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof?(a=t.type,t.tag=2,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,"function"==typeof(a=a.getDerivedStateFromProps)&&ia(t,a,o),o=wo(t),r.updater=la,t.stateNode=r,r._reactInternalFiber=t,sa(t,n),e=Oa(e,t,!0,o,n)):(t.tag=1,Ta(e,t,r),t.memoizedProps=o,e=t.child),e;case 1:return o=t.type,n=t.pendingProps,so.current||t.memoizedProps!==n?(o=o(n,r=ho(t,r=po(t))),t.effectTag|=1,Ta(e,t,o),t.memoizedProps=n,e=t.child):e=ja(e,t),e;case 2:if(o=wo(t),null===e)if(null===t.stateNode){var i=t.pendingProps,l=t.type;r=po(t);var u=2===t.tag&&null!=t.type.contextTypes;i=new l(i,a=u?ho(t,r):f),t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,i.updater=la,t.stateNode=i,i._reactInternalFiber=t,u&&((u=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,u.__reactInternalMemoizedMaskedChildContext=a),sa(t,n),r=!0}else{l=t.type,r=t.stateNode,u=t.memoizedProps,a=t.pendingProps,r.props=u;var c=r.context;i=ho(t,i=po(t));var s=l.getDerivedStateFromProps;(l="function"==typeof s||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(u!==a||c!==i)&&ca(t,r,a,i),Io=!1;var p=t.memoizedState;c=r.state=p;var h=t.updateQueue;null!==h&&(Wo(t,h,a,r,n),c=t.memoizedState),u!==a||p!==c||so.current||Io?("function"==typeof s&&(ia(t,s,a),c=t.memoizedState),(u=Io||ua(t,u,a,p,c,i))?(l||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||("function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount()),"function"==typeof r.componentDidMount&&(t.effectTag|=4)):("function"==typeof r.componentDidMount&&(t.effectTag|=4),t.memoizedProps=a,t.memoizedState=c),r.props=a,r.state=c,r.context=i,r=u):("function"==typeof r.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.type,r=t.stateNode,a=t.memoizedProps,u=t.pendingProps,r.props=a,c=r.context,i=ho(t,i=po(t)),(l="function"==typeof(s=l.getDerivedStateFromProps)||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(a!==u||c!==i)&&ca(t,r,u,i),Io=!1,c=t.memoizedState,p=r.state=c,null!==(h=t.updateQueue)&&(Wo(t,h,u,r,n),p=t.memoizedState),a!==u||c!==p||so.current||Io?("function"==typeof s&&(ia(t,s,u),p=t.memoizedState),(s=Io||ua(t,a,u,c,p,i))?(l||"function"!=typeof r.UNSAFE_componentWillUpdate&&"function"!=typeof r.componentWillUpdate||("function"==typeof r.componentWillUpdate&&r.componentWillUpdate(u,p,i),"function"==typeof r.UNSAFE_componentWillUpdate&&r.UNSAFE_componentWillUpdate(u,p,i)),"function"==typeof r.componentDidUpdate&&(t.effectTag|=4),"function"==typeof r.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof r.componentDidUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=u,t.memoizedState=p),r.props=u,r.state=p,r.context=i,r=s):("function"!=typeof r.componentDidUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),r=!1);return Oa(e,t,r,o,n);case 3:return Na(t),null!==(o=t.updateQueue)?(r=null!==(r=t.memoizedState)?r.element:null,Wo(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===r?(Ca(),e=ja(e,t)):(r=t.stateNode,(r=(null===e||null===e.child)&&r.hydrate)&&(ga=ro(t.stateNode.containerInfo),ya=t,r=ba=!0),r?(t.effectTag|=2,t.child=va(t,null,o,n)):(Ca(),Ta(e,t,o)),e=t.child)):(Ca(),e=ja(e,t)),e;case 5:return na(ta.current),(o=na(Zo.current))!==(r=Or(o,t.type))&&(uo(ea,t),uo(Zo,r)),null===e&&xa(t),o=t.type,u=t.memoizedProps,r=t.pendingProps,a=null!==e?e.memoizedProps:null,so.current||u!==r||((u=1&t.mode&&!!r.hidden)&&(t.expirationTime=1073741823),u&&1073741823===n)?(u=r.children,Jr(o,r)?u=null:a&&Jr(o,a)&&(t.effectTag|=16),Pa(e,t),1073741823!==n&&1&t.mode&&r.hidden?(t.expirationTime=1073741823,t.memoizedProps=r,e=null):(Ta(e,t,u),t.memoizedProps=r,e=t.child)):e=ja(e,t),e;case 6:return null===e&&xa(t),t.memoizedProps=t.pendingProps,null;case 16:return null;case 4:return ra(t,t.stateNode.containerInfo),o=t.pendingProps,so.current||t.memoizedProps!==o?(null===e?t.child=ma(t,null,o,n):Ta(e,t,o),t.memoizedProps=o,e=t.child):e=ja(e,t),e;case 14:return o=t.type.render,n=t.pendingProps,r=t.ref,so.current||t.memoizedProps!==n||r!==(null!==e?e.ref:null)?(Ta(e,t,o=o(n,r)),t.memoizedProps=n,e=t.child):e=ja(e,t),e;case 10:return n=t.pendingProps,so.current||t.memoizedProps!==n?(Ta(e,t,n),t.memoizedProps=n,e=t.child):e=ja(e,t),e;case 11:return n=t.pendingProps.children,so.current||null!==n&&t.memoizedProps!==n?(Ta(e,t,n),t.memoizedProps=n,e=t.child):e=ja(e,t),e;case 15:return n=t.pendingProps,t.memoizedProps===n?e=ja(e,t):(Ta(e,t,n.children),t.memoizedProps=n,e=t.child),e;case 13:return function(e,t,n){var r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=!0;if(so.current)i=!1;else if(a===o)return t.stateNode=0,Go(t),ja(e,t);var l=o.value;if(t.memoizedProps=o,null===a)l=1073741823;else if(a.value===o.value){if(a.children===o.children&&i)return t.stateNode=0,Go(t),ja(e,t);l=0}else{var u=a.value;if(u===l&&(0!==u||1/u==1/l)||u!=u&&l!=l){if(a.children===o.children&&i)return t.stateNode=0,Go(t),ja(e,t);l=0}else if(l="function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,l):1073741823,0==(l|=0)){if(a.children===o.children&&i)return t.stateNode=0,Go(t),ja(e,t)}else Ra(t,r,l,n)}return t.stateNode=l,Go(t),Ta(e,t,o.children),t.child}(e,t,n);case 12:e:if(r=t.type,a=t.pendingProps,u=t.memoizedProps,o=r._currentValue,i=r._changedBits,so.current||0!==i||u!==a){if(t.memoizedProps=a,void 0!==(l=a.unstable_observedBits)&&null!==l||(l=1073741823),t.stateNode=l,0!=(i&l))Ra(t,r,i,n);else if(u===a){e=ja(e,t);break e}n=(n=a.children)(o),t.effectTag|=1,Ta(e,t,n),e=t.child}else e=ja(e,t);return e;default:d("156")}}function Ia(e){e.effectTag|=4}var Ma=void 0,Fa=void 0,Da=void 0;function La(e,t){var n=t.pendingProps;switch(t.tag){case 1:return null;case 2:return vo(t),null;case 3:oa(),yo();var r=t.stateNode;return r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(_a(t),t.effectTag&=-3),Ma(t),null;case 5:aa(t),r=na(ta.current);var o=t.type;if(null!==e&&null!=t.stateNode){var a=e.memoizedProps,i=t.stateNode,l=na(Zo.current);i=Hr(i,o,a,n,r),Fa(e,t,i,o,a,n,r,l),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!n)return null===t.stateNode&&d("166"),null;if(e=na(Zo.current),_a(t))n=t.stateNode,o=t.type,a=t.memoizedProps,n[V]=t,n[B]=a,r=qr(n,o,a,e,r),t.updateQueue=r,null!==r&&Ia(t);else{(e=Vr(o,n,r,e))[V]=t,e[B]=n;e:for(a=t.child;null!==a;){if(5===a.tag||6===a.tag)e.appendChild(a.stateNode);else if(4!==a.tag&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}Wr(e,o,n,r),Xr(o,n)&&Ia(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Da(e,t,e.memoizedProps,n);else{if("string"!=typeof n)return null===t.stateNode&&d("166"),null;r=na(ta.current),na(Zo.current),_a(t)?(r=t.stateNode,n=t.memoizedProps,r[V]=t,Kr(r,n)&&Ia(t)):((r=Br(n,r))[V]=t,t.stateNode=r)}return null;case 14:case 16:case 10:case 11:case 15:return null;case 4:return oa(),Ma(t),null;case 13:return Xo(t),null;case 12:return null;case 0:d("167");default:d("156")}}function Aa(e,t){var n=t.source;null===t.stack&&null!==n&&wt(n),null!==n&&bt(n),t=t.value,null!==e&&2===e.tag&&bt(e);try{t&&t.suppressReactErrorLogging||console.error(t)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}}function za(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){mi(e,t)}else t.current=null}function Va(e){switch(Uo(e),e.tag){case 2:za(e);var t=e.stateNode;if("function"==typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){mi(e,t)}break;case 5:za(e);break;case 4:Ha(e)}}function Ba(e){return 5===e.tag||3===e.tag||4===e.tag}function Wa(e){e:{for(var t=e.return;null!==t;){if(Ba(t)){var n=t;break e}t=t.return}d("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:d("161")}16&n.effectTag&&(jr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Ba(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,i=o.stateNode,l=n;8===a.nodeType?a.parentNode.insertBefore(i,l):a.insertBefore(i,l)}else t.insertBefore(o.stateNode,n);else r?(a=t,i=o.stateNode,8===a.nodeType?a.parentNode.insertBefore(i,a):a.appendChild(i)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Ha(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&d("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,i=a;;)if(Va(i),null!==i.child&&4!==i.tag)i.child.return=i,i=i.child;else{if(i===a)break;for(;null===i.sibling;){if(null===i.return||i.return===a)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}o?(a=r,i=t.stateNode,8===a.nodeType?a.parentNode.removeChild(i):a.removeChild(i)):r.removeChild(t.stateNode)}else if(4===t.tag?r=t.stateNode.containerInfo:Va(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function $a(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&(n[B]=r,$r(n,a,o,e,r))}break;case 6:null===t.stateNode&&d("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 15:case 16:break;default:d("163")}}function qa(e,t,n){(n=Do(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ji(r),Aa(e,t)},n}function Ka(e,t,n){(n=Do(n)).tag=3;var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(n.callback=function(){null===si?si=new Set([this]):si.add(this);var n=t.value,r=t.stack;Aa(e,t),this.componentDidCatch(n,{componentStack:null!==r?r:""})}),n}function Qa(e,t,n,r,o,a){n.effectTag|=512,n.firstEffect=n.lastEffect=null,r=qo(r,n),e=t;do{switch(e.tag){case 3:return e.effectTag|=1024,void zo(e,r=qa(e,r,a),a);case 2:if(t=r,n=e.stateNode,0==(64&e.effectTag)&&null!==n&&"function"==typeof n.componentDidCatch&&(null===si||!si.has(n)))return e.effectTag|=1024,void zo(e,r=Ka(e,t,a),a)}e=e.return}while(null!==e)}function Ya(e){switch(e.tag){case 2:vo(e);var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return oa(),yo(),1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 5:return aa(e),null;case 16:return 1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 4:return oa(),null;case 13:return Xo(e),null;default:return null}}Ma=function(){},Fa=function(e,t,n){(t.updateQueue=n)&&Ia(t)},Da=function(e,t,n,r){n!==r&&Ia(t)};var Ga=Zr(),Xa=2,Ja=Ga,Za=0,ei=0,ti=!1,ni=null,ri=null,oi=0,ai=-1,ii=!1,li=null,ui=!1,ci=!1,si=null;function fi(){if(null!==ni)for(var e=ni.return;null!==e;){var t=e;switch(t.tag){case 2:vo(t);break;case 3:oa(),yo();break;case 5:aa(t);break;case 4:oa();break;case 13:Xo(t)}e=e.return}ri=null,oi=0,ai=-1,ii=!1,ni=null,ci=!1}function di(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(512&e.effectTag)){t=La(t,e);var o=e;if(1073741823===oi||1073741823!==o.expirationTime){var a=0;switch(o.tag){case 3:case 2:var i=o.updateQueue;null!==i&&(a=i.expirationTime)}for(i=o.child;null!==i;)0!==i.expirationTime&&(0===a||a>i.expirationTime)&&(a=i.expirationTime),i=i.sibling;o.expirationTime=a}if(null!==t)return t;if(null!==n&&0==(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){ci=!0;break}e=n}else{if(null!==(e=Ya(e)))return e.effectTag&=511,e;if(null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512),null!==r)return r;if(null===n)break;e=n}}return null}function pi(e){var t=Ua(e.alternate,e,oi);return null===t&&(t=di(e)),at.current=null,t}function hi(e,t,n){ti&&d("243"),ti=!0,t===oi&&e===ri&&null!==ni||(fi(),oi=t,ai=-1,ni=Eo((ri=e).current,null,oi),e.pendingCommitExpirationTime=0);var r=!1;for(ii=!n||oi<=Xa;;){try{if(n)for(;null!==ni&&!Xi();)ni=pi(ni);else for(;null!==ni;)ni=pi(ni)}catch(t){if(null===ni)r=!0,Ji(t);else{null===ni&&d("271");var o=(n=ni).return;if(null===o){r=!0,Ji(t);break}Qa(e,o,n,t,0,oi),ni=di(n)}}break}if(ti=!1,r)return null;if(null===ni){if(ci)return e.pendingCommitExpirationTime=t,e.current.alternate;ii&&d("262"),0<=ai&&setTimeout(function(){var t=e.current.expirationTime;0!==t&&(0===e.remainingExpirationTime||e.remainingExpirationTime<t)&&Bi(e,t)},ai),function(e){null===Si&&d("246"),Si.remainingExpirationTime=e}(e.current.expirationTime)}return null}function mi(e,t){var n;e:{for(ti&&!ui&&d("263"),n=e.return;null!==n;){switch(n.tag){case 2:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromCatch||"function"==typeof r.componentDidCatch&&(null===si||!si.has(r))){Ao(n,e=Ka(n,e=qo(t,e),1),1),gi(n,1),n=void 0;break e}break;case 3:Ao(n,e=qa(n,e=qo(t,e),1),1),gi(n,1),n=void 0;break e}n=n.return}3===e.tag&&(Ao(e,n=qa(e,n=qo(t,e),1),1),gi(e,1)),n=void 0}return n}function vi(){var e=2+25*(1+((bi()-2+500)/25|0));return e<=Za&&(e=Za+1),Za=e}function yi(e,t){return e=0!==ei?ei:ti?ui?1:oi:1&t.mode?Fi?2+10*(1+((e-2+15)/10|0)):2+25*(1+((e-2+500)/25|0)):1,Fi&&(0===Oi||e>Oi)&&(Oi=e),e}function gi(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!ti&&0!==oi&&t<oi&&fi();var r=n.current.expirationTime;ti&&!ui&&ri===n||Bi(n,r),Ai>Li&&d("185")}e=e.return}}function bi(){return Ja=Zr()-Ga,Xa=2+(Ja/10|0)}function wi(e){var t=ei;ei=2+25*(1+((bi()-2+500)/25|0));try{return e()}finally{ei=t}}function ki(e,t,n,r,o){var a=ei;ei=1;try{return e(t,n,r,o)}finally{ei=a}}var xi=null,Ei=null,_i=0,Ci=void 0,Ti=!1,Si=null,Pi=0,Oi=0,Ni=!1,Ri=!1,ji=null,Ui=null,Ii=!1,Mi=!1,Fi=!1,Di=null,Li=1e3,Ai=0,zi=1;function Vi(e){if(0!==_i){if(e>_i)return;null!==Ci&&to(Ci)}var t=Zr()-Ga;_i=e,Ci=eo(Hi,{timeout:10*(e-2)-t})}function Bi(e,t){if(null===e.nextScheduledRoot)e.remainingExpirationTime=t,null===Ei?(xi=Ei=e,e.nextScheduledRoot=e):(Ei=Ei.nextScheduledRoot=e).nextScheduledRoot=xi;else{var n=e.remainingExpirationTime;(0===n||t<n)&&(e.remainingExpirationTime=t)}Ti||(Ii?Mi&&(Si=e,Pi=1,Yi(e,1,!1)):1===t?$i():Vi(t))}function Wi(){var e=0,t=null;if(null!==Ei)for(var n=Ei,r=xi;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===Ei)&&d("244"),r===r.nextScheduledRoot){xi=Ei=r.nextScheduledRoot=null;break}if(r===xi)xi=o=r.nextScheduledRoot,Ei.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===Ei){(Ei=n).nextScheduledRoot=xi,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===Ei)break;n=r,r=r.nextScheduledRoot}}null!==(n=Si)&&n===t&&1===e?Ai++:Ai=0,Si=t,Pi=e}function Hi(e){qi(0,!0,e)}function $i(){qi(1,!1,null)}function qi(e,t,n){if(Ui=n,Wi(),t)for(;null!==Si&&0!==Pi&&(0===e||e>=Pi)&&(!Ni||bi()>=Pi);)bi(),Yi(Si,Pi,!Ni),Wi();else for(;null!==Si&&0!==Pi&&(0===e||e>=Pi);)Yi(Si,Pi,!1),Wi();null!==Ui&&(_i=0,Ci=null),0!==Pi&&Vi(Pi),Ui=null,Ni=!1,Qi()}function Ki(e,t){Ti&&d("253"),Si=e,Pi=t,Yi(e,t,!1),$i(),Qi()}function Qi(){if(Ai=0,null!==Di){var e=Di;Di=null;for(var t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){Ri||(Ri=!0,ji=e)}}}if(Ri)throw e=ji,ji=null,Ri=!1,e}function Yi(e,t,n){Ti&&d("245"),Ti=!0,n?null!==(n=e.finishedWork)?Gi(e,n,t):null!==(n=hi(e,t,!0))&&(Xi()?e.finishedWork=n:Gi(e,n,t)):null!==(n=e.finishedWork)?Gi(e,n,t):null!==(n=hi(e,t,!1))&&Gi(e,n,t),Ti=!1}function Gi(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime<=n&&(null===Di?Di=[r]:Di.push(r),r._defer))return e.finishedWork=t,void(e.remainingExpirationTime=0);if(e.finishedWork=null,ui=ti=!0,(n=t.stateNode).current===t&&d("177"),0===(r=n.pendingCommitExpirationTime)&&d("261"),n.pendingCommitExpirationTime=0,bi(),at.current=null,1<t.effectTag)if(null!==t.lastEffect){t.lastEffect.nextEffect=t;var o=t.firstEffect}else o=t;else o=t.firstEffect;Yr=Nn;var a=u();if(Wn(a)){if("selectionStart"in a)var i={start:a.selectionStart,end:a.selectionEnd};else e:{var l=window.getSelection&&window.getSelection();if(l&&0!==l.rangeCount){i=l.anchorNode;var c=l.anchorOffset,f=l.focusNode;l=l.focusOffset;try{i.nodeType,f.nodeType}catch(e){i=null;break e}var p=0,h=-1,m=-1,v=0,y=0,g=a,b=null;t:for(;;){for(var w;g!==i||0!==c&&3!==g.nodeType||(h=p+c),g!==f||0!==l&&3!==g.nodeType||(m=p+l),3===g.nodeType&&(p+=g.nodeValue.length),null!==(w=g.firstChild);)b=g,g=w;for(;;){if(g===a)break t;if(b===i&&++v===c&&(h=p),b===f&&++y===l&&(m=p),null!==(w=g.nextSibling))break;b=(g=b).parentNode}g=w}i=-1===h||-1===m?null:{start:h,end:m}}else i=null}i=i||{start:0,end:0}}else i=null;for(Gr={focusedElem:a,selectionRange:i},Rn(!1),li=o;null!==li;){a=!1,i=void 0;try{for(;null!==li;){if(256&li.effectTag){var k=li.alternate;switch((c=li).tag){case 2:if(256&c.effectTag&&null!==k){var x=k.memoizedProps,E=k.memoizedState,_=c.stateNode;_.props=c.memoizedProps,_.state=c.memoizedState;var C=_.getSnapshotBeforeUpdate(x,E);_.__reactInternalSnapshotBeforeUpdate=C}break;case 3:case 5:case 6:case 4:break;default:d("163")}}li=li.nextEffect}}catch(e){a=!0,i=e}a&&(null===li&&d("178"),mi(li,i),null!==li&&(li=li.nextEffect))}for(li=o;null!==li;){k=!1,x=void 0;try{for(;null!==li;){var T=li.effectTag;if(16&T&&jr(li.stateNode,""),128&T){var S=li.alternate;if(null!==S){var P=S.ref;null!==P&&("function"==typeof P?P(null):P.current=null)}}switch(14&T){case 2:Wa(li),li.effectTag&=-3;break;case 6:Wa(li),li.effectTag&=-3,$a(li.alternate,li);break;case 4:$a(li.alternate,li);break;case 8:Ha(E=li),E.return=null,E.child=null,E.alternate&&(E.alternate.child=null,E.alternate.return=null)}li=li.nextEffect}}catch(e){k=!0,x=e}k&&(null===li&&d("178"),mi(li,x),null!==li&&(li=li.nextEffect))}if(P=Gr,S=u(),T=P.focusedElem,k=P.selectionRange,S!==T&&s(document.documentElement,T)){null!==k&&Wn(T)&&(S=k.start,void 0===(P=k.end)&&(P=S),"selectionStart"in T?(T.selectionStart=S,T.selectionEnd=Math.min(P,T.value.length)):window.getSelection&&(S=window.getSelection(),x=T[he()].length,P=Math.min(k.start,x),k=void 0===k.end?P:Math.min(k.end,x),!S.extend&&P>k&&(x=k,k=P,P=x),x=Bn(T,P),E=Bn(T,k),x&&E&&(1!==S.rangeCount||S.anchorNode!==x.node||S.anchorOffset!==x.offset||S.focusNode!==E.node||S.focusOffset!==E.offset)&&((_=document.createRange()).setStart(x.node,x.offset),S.removeAllRanges(),P>k?(S.addRange(_),S.extend(E.node,E.offset)):(_.setEnd(E.node,E.offset),S.addRange(_))))),S=[];for(P=T;P=P.parentNode;)1===P.nodeType&&S.push({element:P,left:P.scrollLeft,top:P.scrollTop});for("function"==typeof T.focus&&T.focus(),T=0;T<S.length;T++)(P=S[T]).element.scrollLeft=P.left,P.element.scrollTop=P.top}for(Gr=null,Rn(Yr),Yr=null,n.current=t,li=o;null!==li;){o=!1,T=void 0;try{for(S=r;null!==li;){var O=li.effectTag;if(36&O){var N=li.alternate;switch(k=S,(P=li).tag){case 2:var R=P.stateNode;if(4&P.effectTag)if(null===N)R.props=P.memoizedProps,R.state=P.memoizedState,R.componentDidMount();else{var j=N.memoizedProps,U=N.memoizedState;R.props=P.memoizedProps,R.state=P.memoizedState,R.componentDidUpdate(j,U,R.__reactInternalSnapshotBeforeUpdate)}var I=P.updateQueue;null!==I&&(R.props=P.memoizedProps,R.state=P.memoizedState,$o(P,I,R));break;case 3:var M=P.updateQueue;if(null!==M){if(x=null,null!==P.child)switch(P.child.tag){case 5:x=P.child.stateNode;break;case 2:x=P.child.stateNode}$o(P,M,x)}break;case 5:var F=P.stateNode;null===N&&4&P.effectTag&&Xr(P.type,P.memoizedProps)&&F.focus();break;case 6:case 4:case 15:case 16:break;default:d("163")}}if(128&O){P=void 0;var D=li.ref;if(null!==D){var L=li.stateNode;switch(li.tag){case 5:P=L;break;default:P=L}"function"==typeof D?D(P):D.current=P}}var A=li.nextEffect;li.nextEffect=null,li=A}}catch(e){o=!0,T=e}o&&(null===li&&d("178"),mi(li,T),null!==li&&(li=li.nextEffect))}ti=ui=!1,jo(t.stateNode),0===(t=n.current.expirationTime)&&(si=null),e.remainingExpirationTime=t}function Xi(){return!(null===Ui||Ui.timeRemaining()>zi)&&(Ni=!0)}function Ji(e){null===Si&&d("246"),Si.remainingExpirationTime=0,Ri||(Ri=!0,ji=e)}function Zi(e,t){var n=Ii;Ii=!0;try{return e(t)}finally{(Ii=n)||Ti||$i()}}function el(e,t){if(Ii&&!Mi){Mi=!0;try{return e(t)}finally{Mi=!1}}return e(t)}function tl(e,t){Ti&&d("187");var n=Ii;Ii=!0;try{return ki(e,t)}finally{Ii=n,$i()}}function nl(e,t,n){if(Fi)return e(t,n);Ii||Ti||0===Oi||(qi(Oi,!1,null),Oi=0);var r=Fi,o=Ii;Ii=Fi=!0;try{return e(t,n)}finally{Fi=r,(Ii=o)||Ti||$i()}}function rl(e){var t=Ii;Ii=!0;try{ki(e)}finally{(Ii=t)||Ti||qi(1,!1,null)}}function ol(e,t,n,r,o){var a=t.current;if(n){var i;n=n._reactInternalFiber;e:{for(2===ln(n)&&2===n.tag||d("170"),i=n;3!==i.tag;){if(mo(i)){i=i.stateNode.__reactInternalMemoizedMergedChildContext;break e}(i=i.return)||d("171")}i=i.stateNode.context}n=mo(n)?bo(n,i):i}else n=f;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Do(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Ao(a,o,r),gi(a,r),r}function al(e){var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?d("188"):d("268",Object.keys(e))),null===(e=sn(t))?null:e.stateNode}function il(e,t,n,r){var o=t.current;return ol(e,t,n,o=yi(bi(),o),r)}function ll(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function ul(e){var t=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Oo=Ro(function(e){return t.onCommitFiberRoot(n,e)}),No=Ro(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(i({},e,{findHostInstanceByFiber:function(e){return null===(e=sn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}var cl=Zi,sl=nl,fl=function(){Ti||0===Oi||(qi(Oi,!1,null),Oi=0)};function dl(e){this._expirationTime=vi(),this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function pl(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function hl(e,t,n){this._internalRoot=Po(e,t,n)}function ml(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function vl(e,t,n,r,o){ml(n)||d("200");var a=n._reactRootContainer;if(a){if("function"==typeof o){var i=o;o=function(){var e=ll(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new hl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=ll(a._internalRoot);l.call(e)}}el(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return ll(a._internalRoot)}function yl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return ml(t)||d("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ut,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ae.injectFiberControlledHostComponent(Qr),dl.prototype.render=function(e){this._defer||d("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new pl;return ol(e,t,null,n,r._onCommit),r},dl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},dl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||d("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&d("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ki(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},dl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},pl.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},pl.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&d("191",n),n()}}},hl.prototype.render=function(e,t){var n=this._internalRoot,r=new pl;return null!==(t=void 0===t?null:t)&&r.then(t),il(e,n,null,r._onCommit),r},hl.prototype.unmount=function(e){var t=this._internalRoot,n=new pl;return null!==(e=void 0===e?null:e)&&n.then(e),il(null,t,null,n._onCommit),n},hl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new pl;return null!==(n=void 0===n?null:n)&&o.then(n),il(t,r,e,o._onCommit),o},hl.prototype.createBatch=function(){var e=new dl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ke=cl,Qe=sl,Ye=fl;var gl={createPortal:yl,findDOMNode:function(e){return null==e?null:1===e.nodeType?e:al(e)},hydrate:function(e,t,n){return vl(null,e,t,!0,n)},render:function(e,t,n){return vl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&d("38"),vl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return ml(e)||d("40"),!!e._reactRootContainer&&(el(function(){vl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return yl.apply(void 0,arguments)},unstable_batchedUpdates:Zi,unstable_deferredUpdates:wi,unstable_interactiveUpdates:nl,flushSync:tl,unstable_flushControlled:rl,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:A,EventPluginRegistry:_,EventPropagators:ne,ReactControlledComponent:qe,ReactDOMComponentTree:q,ReactDOMEventListener:Fn},unstable_createRoot:function(e,t){return new hl(e,!0,null!=t&&!0===t.hydrate)}};ul({findFiberByHostInstance:W,bundleType:0,version:"16.4.2",rendererPackageName:"react-dom"});var bl={default:gl},wl=bl&&gl||bl;e.exports=wl.default?wl.default:wl},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(var i=0;i<n.length;i++)if(!r.call(t,n[i])||!o(e[n[i]],t[n[i]]))return!1;return!0}},function(e,t,n){"use strict";var r=n(17);e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},function(e,t,n){"use strict";var r=n(18);e.exports=function(e){return r(e)&&3==e.nodeType}},function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},function(e,t,n){"use strict";n.r(t),n.d(t,"createStore",function(){return u}),n.d(t,"combineReducers",function(){return s}),n.d(t,"bindActionCreators",function(){return d}),n.d(t,"applyMiddleware",function(){return h}),n.d(t,"compose",function(){return p}),n.d(t,"__DO_NOT_USE__ActionTypes",function(){return o});var r=n(2),o={INIT:"@@redux/INIT"+Math.random().toString(36).substring(7).split("").join("."),REPLACE:"@@redux/REPLACE"+Math.random().toString(36).substring(7).split("").join(".")},a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function l(e){if("object"!==(void 0===e?"undefined":a(e))||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function u(e,t,n){var i;if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(u)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var c=e,s=t,f=[],d=f,p=!1;function h(){d===f&&(d=f.slice())}function m(){if(p)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return s}function v(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(p)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var t=!0;return h(),d.push(e),function(){if(t){if(p)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");t=!1,h();var n=d.indexOf(e);d.splice(n,1)}}}function y(e){if(!l(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(p)throw new Error("Reducers may not dispatch actions.");try{p=!0,s=c(s,e)}finally{p=!1}for(var t=f=d,n=0;n<t.length;n++){(0,t[n])()}return e}return y({type:o.INIT}),(i={dispatch:y,subscribe:v,getState:m,replaceReducer:function(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");c=e,y({type:o.REPLACE})}})[r.a]=function(){var e,t=v;return(e={subscribe:function(e){if("object"!==(void 0===e?"undefined":a(e))||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(m())}return n(),{unsubscribe:t(n)}}})[r.a]=function(){return this},e},i}function c(e,t){var n=t&&t.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function s(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var a=t[r];0,"function"==typeof e[a]&&(n[a]=e[a])}var i=Object.keys(n);var l=void 0;try{!function(e){Object.keys(e).forEach(function(t){var n=e[t];if(void 0===n(void 0,{type:o.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:"@@redux/PROBE_UNKNOWN_ACTION_"+Math.random().toString(36).substring(7).split("").join(".")}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+o.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')})}(n)}catch(e){l=e}return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];if(l)throw l;for(var r=!1,o={},a=0;a<i.length;a++){var u=i[a],s=n[u],f=e[u],d=s(f,t);if(void 0===d){var p=c(u,t);throw new Error(p)}o[u]=d,r=r||d!==f}return r?o:e}}function f(e,t){return function(){return t(e.apply(this,arguments))}}function d(e,t){if("function"==typeof e)return f(e,t);if("object"!==(void 0===e?"undefined":a(e))||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":void 0===e?"undefined":a(e))+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');for(var n=Object.keys(e),r={},o=0;o<n.length;o++){var i=n[o],l=e[i];"function"==typeof l&&(r[i]=f(l,t))}return r}function p(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce(function(e,t){return function(){return e(t.apply(void 0,arguments))}})}function h(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){for(var n=arguments.length,r=Array(n),o=0;o<n;o++)r[o]=arguments[o];var a=e.apply(void 0,r),l=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},u={getState:a.getState,dispatch:function(){return l.apply(void 0,arguments)}},c=t.map(function(e){return e(u)});return l=p.apply(void 0,c)(a.dispatch),i({},a,{dispatch:l})}}}},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o),i=l(n(1));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this;return a.default.createElement("div",{className:"formContainer"},a.default.createElement("form",{onSubmit:function(t){return e.props.handleSubmit(t)}},a.default.createElement("input",{type:"text",onChange:function(t){return e.props.handleChange(t)},value:this.props.inputValue,placeholder:"Enter your task here ......"}),a.default.createElement("input",{type:"submit",value:"＋"})))}}]),t}();u.propTypes={inputValue:i.default.string.isRequired,handleChange:i.default.func.isRequired,handleSubmit:i.default.func.isRequired},t.default=u},function(e,t,n){"use strict";var r=n(24);function o(){}e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o),i=u(n(1)),l=u(n(26));function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this;function t(e,t,n,r){return a.default.createElement(l.default,{key:e,index:e,handleFinish:t,todo:n,handleDelete:r})}return a.default.createElement("div",{className:"listContainer"},this.props.todos.map(function(n,r){return"All"===e.props.tabs?t(r,e.props.handleFinish,n,e.props.handleDelete):n.done===("Done"===e.props.tabs)?t(r,e.props.handleFinish,n,e.props.handleDelete):void 0}))}}]),t}();c.propTypes={todos:i.default.array.isRequired,handleFinish:i.default.func.isRequired,handleDelete:i.default.func.isRequired,tabs:i.default.string.isRequired},t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o),i=l(n(1));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this;return a.default.createElement("div",{className:"taskContainer"},a.default.createElement("input",{type:"checkbox",checked:this.props.todo.done,onChange:function(){return e.props.handleFinish(e.props.index)}}),a.default.createElement("span",{style:{textDecoration:this.props.todo.done?"line-through":"none"}},this.props.todo.value),a.default.createElement("button",{onClick:function(t){return e.props.handleDelete(t,e.props.index)}},"Delete"))}}]),t}();u.propTypes={todo:i.default.object.isRequired,handleFinish:i.default.func.isRequired,index:i.default.number.isRequired,handleDelete:i.default.func.isRequired},t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o),i=l(n(1));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this;return a.default.createElement("div",null,a.default.createElement("input",{type:"button",onClick:function(t){return e.props.handleTabs(t)},value:"All"}),a.default.createElement("input",{type:"button",onClick:function(t){return e.props.handleTabs(t)},value:"Undone"}),a.default.createElement("input",{type:"button",onClick:function(t){return e.props.handleTabs(t)},value:"Done"}))}}]),t}();u.propTypes={tabs:i.default.string.isRequired,handleTabs:i.default.func.isRequired},t.default=u},function(e,t,n){var r=n(29);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(32)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){var r=n(30);(e.exports=n(31)(!1)).push([e.i,'.appContainer {\r\n  background-image: linear-gradient(to top left, #957FEF, #E096FC, #F6C0FC, pink);\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 900px;\r\n}\r\n\r\n.appContainer > div {\r\n  flex: none;\r\n  width: 800px;\r\n  border: 1px solid red;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.appContainer > div > div {\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 20px;\r\n}\r\n\r\n.appContainer > div > div > span{ flex: none; width: 30%;}\r\n\r\n.appContainer > div > div > h1{ flex: none;  width: 70%;}\r\n\r\n.formContainer{\r\n  flex: none;\r\n  width: 100%;\r\n  margin: 3%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n}\r\n\r\n.formContainer > form {\r\n  flex: none;\r\n  width: 70%;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.formContainer > form > input[type="text"]{\r\n  width: 500px;\r\n  line-height: 3;\r\n  font-size: 18px;\r\n  padding-left: 10px;\r\n  border-radius: 5%;\r\n  border: none;\r\n  background-image:none;\r\n  background-color:rgba( 255, 255, 255, .1);\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n\r\n.formContainer > form > input[type="submit"]{\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-left: 15px; \r\n  font-size: 25px;\r\n  color: white;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  border-radius: 50%;\r\n  border: none;\r\n  background-image: url('+r(n(7))+");\r\n  background-color: #FF9C6A;\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n\r\n.listContainer {\r\n  flex: none;\r\n  width: 100%;\r\n  height: 600px;\r\n  background-color: #ffffff;\r\n}",""])},function(e,t){e.exports=function(e){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)?'"'+e.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':e)}},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([o]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];"number"==typeof a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];"number"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){var r={},o=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),a=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),i=null,l=0,u=[],c=n(33);function s(e,t){for(var n=0;n<e.length;n++){var o=e[n],a=r[o.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](o.parts[i]);for(;i<o.parts.length;i++)a.parts.push(v(o.parts[i],t))}else{var l=[];for(i=0;i<o.parts.length;i++)l.push(v(o.parts[i],t));r[o.id]={id:o.id,refs:1,parts:l}}}}function f(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],l={css:a[1],media:a[2],sourceMap:a[3]};r[i]?r[i].parts.push(l):n.push(r[i]={id:i,parts:[l]})}return n}function d(e,t){var n=a(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=u[u.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),u.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=a(e.insertAt.before,n);n.insertBefore(t,o)}}function p(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=u.indexOf(e);t>=0&&u.splice(t,1)}function h(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return m(t,e.attrs),d(e,t),t}function m(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function v(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a=t.transform(e.css)))return function(){};e.css=a}if(t.singleton){var u=l++;n=i||(i=h(t)),r=g.bind(null,n,u,!1),o=g.bind(null,n,u,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",m(t,e.attrs),d(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=c(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){p(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){p(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=o()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return s(n,t),function(e){for(var o=[],a=0;a<n.length;a++){var i=n[a];(l=r[i.id]).refs--,o.push(l)}e&&s(f(e,t),t);for(a=0;a<o.length;a++){var l;if(0===(l=o[a]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete r[l.id]}}}};var y=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function g(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=y(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlPYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5RnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltZy9hZGQucG5nIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvcG9ueWZpbGwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvQXBwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRBY3RpdmVFbGVtZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9zaGFsbG93RXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2NvbnRhaW5zTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNUZXh0Tm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNOb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9yZWR1eC5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9oYXJtb255LW1vZHVsZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9Gb3JtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvTGlzdC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9UYXNrLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9jb21wb25lbnRzL1RhYi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUuY3NzPzc1MjgiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvdXJsL2VzY2FwZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJyb290IiwiX3BvbnlmaWxsX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJzZWxmIiwid2luZG93IiwiZ2xvYmFsIiwicmVzdWx0IiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwibWFwIiwiam9pbiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwia2V5cyIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInNvdXJjZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJ2YWwiLCJ1bmRlZmluZWQiLCJUeXBlRXJyb3IiLCJ0b09iamVjdCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInZhbGlkYXRlRm9ybWF0IiwiZm9ybWF0IiwiY29uZGl0aW9uIiwiYSIsImIiLCJlIiwiZiIsImVycm9yIiwiRXJyb3IiLCJhcmdzIiwiYXJnSW5kZXgiLCJyZXBsYWNlIiwiZnJhbWVzVG9Qb3AiLCJtYWtlRW1wdHlGdW5jdGlvbiIsImFyZyIsImVtcHR5RnVuY3Rpb24iLCJ0aGF0UmV0dXJucyIsInRoYXRSZXR1cm5zRmFsc2UiLCJ0aGF0UmV0dXJuc1RydWUiLCJ0aGF0UmV0dXJuc051bGwiLCJ0aGF0UmV0dXJuc1RoaXMiLCJ0aGlzIiwidGhhdFJldHVybnNBcmd1bWVudCIsInN5bWJvbE9ic2VydmFibGVQb255ZmlsbCIsIm9ic2VydmFibGUiLCJfcmVhY3QiLCJfcmVkdXgiLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlU3RvcmUiLCJBcHAiLCJwcm9wcyIsIl9jbGFzc0NhbGxDaGVjayIsIl90aGlzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfX3Byb3RvX18iLCJnZXRQcm90b3R5cGVPZiIsInN0YXRlIiwiaW5wdXRWYWx1ZSIsInRvZG9zIiwidGFicyIsImhhbmRsZUNoYW5nZSIsImhhbmRsZVN1Ym1pdCIsImhhbmRsZUZpbmlzaCIsImhhbmRsZURlbGV0ZSIsImhhbmRsZVRhYnMiLCJDb21wb25lbnQiLCJwcmV2ZW50RGVmYXVsdCIsInNldFN0YXRlIiwibmV3VG9kbyIsImRvbmUiLCJwdXNoIiwiaW5kZXgiLCJzcGxpY2UiLCJfcmVhY3QyIiwiZGVmYXVsdCIsImNyZWF0ZUVsZW1lbnQiLCJfRm9ybTIiLCJfVGFiMiIsIl9MaXN0MiIsIlJlYWN0RE9NIiwicmVuZGVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiayIsInEiLCJmb3IiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJBIiwiQiIsIkMiLCJpdGVyYXRvciIsIkQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJFIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsIkYiLCJjb250ZXh0IiwicmVmcyIsInVwZGF0ZXIiLCJHIiwiSCIsImlzUmVhY3RDb21wb25lbnQiLCJmb3JjZVVwZGF0ZSIsIkkiLCJjb25zdHJ1Y3RvciIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSiIsImN1cnJlbnQiLCJLIiwiTCIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiTSIsImciLCJoIiwiY2hpbGRyZW4iLCJBcnJheSIsImRlZmF1bHRQcm9wcyIsIiQkdHlwZW9mIiwidHlwZSIsIl9vd25lciIsIk4iLCJPIiwiUCIsIlEiLCJwb3AiLCJrZXlQcmVmaXgiLCJmdW5jIiwiY291bnQiLCJSIiwiUyIsIlQiLCJpc0FycmF5IiwibmV4dCIsIj0iLCI6IiwiZXNjYXBlIiwidG9TdHJpbmciLCJVIiwiViIsIlciLCJYIiwiQ2hpbGRyZW4iLCJ0b0FycmF5Iiwib25seSIsImNyZWF0ZVJlZiIsIlB1cmVDb21wb25lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2RlZmF1bHRWYWx1ZSIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl9jaGFuZ2VkQml0cyIsIl9jaGFuZ2VkQml0czIiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJmb3J3YXJkUmVmIiwiRnJhZ21lbnQiLCJTdHJpY3RNb2RlIiwidW5zdGFibGVfQXN5bmNNb2RlIiwidW5zdGFibGVfUHJvZmlsZXIiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiaXNWYWxpZEVsZW1lbnQiLCJ2ZXJzaW9uIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnRPd25lciIsIlkiLCJaIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJhYSIsImJhIiwiZGEiLCJlYSIsImZhIiwiaGEiLCJfY2F1Z2h0RXJyb3IiLCJfaGFzQ2F1Z2h0RXJyb3IiLCJfcmV0aHJvd0Vycm9yIiwiX2hhc1JldGhyb3dFcnJvciIsImludm9rZUd1YXJkZWRDYWxsYmFjayIsInNsaWNlIiwiYXBwbHkiLCJpbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3IiLCJoYXNDYXVnaHRFcnJvciIsImNsZWFyQ2F1Z2h0RXJyb3IiLCJyZXRocm93Q2F1Z2h0RXJyb3IiLCJsYSIsIm1hIiwibmEiLCJpbmRleE9mIiwib2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInBhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJxYSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJyYSIsInNhIiwiZGVwZW5kZW5jaWVzIiwidGEiLCJ1YSIsInZhIiwicGx1Z2lucyIsImV2ZW50TmFtZURpc3BhdGNoQ29uZmlncyIsInJlZ2lzdHJhdGlvbk5hbWVNb2R1bGVzIiwicmVnaXN0cmF0aW9uTmFtZURlcGVuZGVuY2llcyIsInBvc3NpYmxlUmVnaXN0cmF0aW9uTmFtZXMiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwid2EiLCJ4YSIsInlhIiwiemEiLCJjdXJyZW50VGFyZ2V0IiwiQWEiLCJjb25jYXQiLCJCYSIsIkNhIiwiRGEiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJFYSIsIkZhIiwiR2EiLCJIYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiSWEiLCJKYSIsIkthIiwiaW5qZWN0aW9uIiwiZ2V0TGlzdGVuZXIiLCJydW5FdmVudHNJbkJhdGNoIiwicnVuRXh0cmFjdGVkRXZlbnRzSW5CYXRjaCIsIkxhIiwiTWF0aCIsInJhbmRvbSIsIk1hIiwiTmEiLCJwYXJlbnROb2RlIiwidGFnIiwiT2EiLCJQYSIsIlFhIiwicHJlY2FjaGVGaWJlck5vZGUiLCJnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZSIsImdldEluc3RhbmNlRnJvbU5vZGUiLCJnZXROb2RlRnJvbUluc3RhbmNlIiwiZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZSIsInVwZGF0ZUZpYmVyUHJvcHMiLCJyZXR1cm4iLCJSYSIsIlNhIiwiZGlzcGF0Y2hDb25maWciLCJUYSIsIl90YXJnZXRJbnN0IiwiVWEiLCJWYSIsIlhhIiwiWWEiLCJaYSIsImFsdGVybmF0ZSIsIiRhIiwiYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlcyIsImFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXNTa2lwVGFyZ2V0IiwiYWNjdW11bGF0ZUVudGVyTGVhdmVEaXNwYXRjaGVzIiwiYWNjdW11bGF0ZURpcmVjdERpc3BhdGNoZXMiLCJhYiIsInRvTG93ZXJDYXNlIiwiYmIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJjYiIsImRiIiwiZWIiLCJjYW5Vc2VET00iLCJzdHlsZSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJmYiIsImdiIiwiaGIiLCJpYiIsImpiIiwia2IiLCJsYiIsImRvY3VtZW50RWxlbWVudCIsIl9yb290IiwiX3N0YXJ0VGV4dCIsIl9mYWxsYmFja1RleHQiLCJtYiIsIm5iIiwib2IiLCJwYiIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJkZWZhdWx0UHJldmVudGVkIiwiaXNUcnVzdGVkIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsInJiIiwiZXZlbnRQb29sIiwic2IiLCJkZXN0cnVjdG9yIiwicWIiLCJnZXRQb29sZWQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXh0ZW5kIiwidGIiLCJkYXRhIiwidWIiLCJ2YiIsIndiIiwieGIiLCJkb2N1bWVudE1vZGUiLCJ5YiIsInpiIiwiQWIiLCJCYiIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJDYiIsIkRiIiwia2V5Q29kZSIsIkViIiwiZGV0YWlsIiwiRmIiLCJJYiIsIndoaWNoIiwiR2IiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJIYiIsIkpiIiwiS2IiLCJpbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50IiwiTGIiLCJNYiIsIk5iIiwicmVzdG9yZUNvbnRyb2xsZWRTdGF0ZSIsIk9iIiwiUGIiLCJRYiIsIlJiIiwiZW5xdWV1ZVN0YXRlUmVzdG9yZSIsIm5lZWRzU3RhdGVSZXN0b3JlIiwicmVzdG9yZVN0YXRlSWZOZWVkZWQiLCJTYiIsIlRiIiwiVWIiLCJWYiIsIldiIiwiWGIiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJZYiIsIm5vZGVOYW1lIiwiWmIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJub2RlVHlwZSIsIiRiIiwic2V0QXR0cmlidXRlIiwiYWMiLCJjYyIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJzZXQiLCJjb25maWd1cmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiYmMiLCJkYyIsImNoZWNrZWQiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJwYyIsInFjIiwicmMiLCJzYyIsInRjIiwidWMiLCJkaXNwbGF5TmFtZSIsInBlbmRpbmdQcm9wcyIsImlkIiwidmMiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsIndjIiwieGMiLCJ6YyIsIkFjIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsIkVjIiwiRmMiLCJ0b1VwcGVyQ2FzZSIsIkdjIiwiQ2MiLCJpc05hTiIsIkRjIiwidGVzdCIsIkJjIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJIYyIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiSWMiLCJKYyIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJLYyIsIkxjIiwiTWMiLCJOYyIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwidGFiSW5kZXgiLCJPYyIsImNoYW5nZSIsIlBjIiwiUWMiLCJSYyIsIlNjIiwiVGMiLCJVYyIsIlZjIiwiV2MiLCJkZXRhY2hFdmVudCIsIlhjIiwiWWMiLCJhdHRhY2hFdmVudCIsIlpjIiwiJGMiLCJhZCIsImJkIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsImNkIiwidmlldyIsImRkIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsImVkIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsImZkIiwiZ2QiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsImhkIiwicG9pbnRlcklkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiamQiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsImtkIiwiZWZmZWN0VGFnIiwibGQiLCJtZCIsImNoaWxkIiwic2libGluZyIsIm5kIiwicGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwicWQiLCJjbGlwYm9hcmREYXRhIiwicmQiLCJzZCIsImNoYXJDb2RlIiwidGQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwidWQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwidmQiLCJsb2NhdGlvbiIsInJlcGVhdCIsImxvY2FsZSIsIndkIiwiZGF0YVRyYW5zZmVyIiwieGQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwieWQiLCJ6ZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiQWQiLCJCZCIsIkNkIiwiRGQiLCJpc0ludGVyYWN0aXZlIiwiRWQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJGZCIsIkdkIiwiSGQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIklkIiwiS2QiLCJMZCIsIk1kIiwiYWRkRXZlbnRMaXN0ZW5lciIsIk5kIiwiT2QiLCJfZW5hYmxlZCIsInNldEVuYWJsZWQiLCJpc0VuYWJsZWQiLCJ0cmFwQnViYmxlZEV2ZW50IiwidHJhcENhcHR1cmVkRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiUGQiLCJRZCIsIlJkIiwiU2QiLCJUZCIsImZpcnN0Q2hpbGQiLCJVZCIsInRleHRDb250ZW50Iiwibm9kZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiVmQiLCJjb250ZW50RWRpdGFibGUiLCJXZCIsIlhkIiwic2VsZWN0IiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25FbmQiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JOb2RlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJjZSIsIm9uU2VsZWN0IiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsImRlIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZWUiLCJmZSIsInNldFRpbWVvdXQiLCJnZSIsImNsZWFyVGltZW91dCIsImhlIiwicGVyZm9ybWFuY2UiLCJpZSIsImplIiwia2UiLCJsZSIsIm1lIiwibmUiLCJvZSIsInBlIiwicWUiLCJyZSIsInNlIiwidGUiLCJkaWRUaW1lb3V0IiwidGltZVJlbWFpbmluZyIsInZlIiwic2NoZWR1bGVkQ2FsbGJhY2siLCJwb3N0TWVzc2FnZSIsInVlIiwidGltZW91dFRpbWUiLCJ3ZSIsInRpbWVvdXQiLCJwcmV2IiwieGUiLCJNYXAiLCJJbmZpbml0eSIsImRlbGV0ZSIsInplIiwieWUiLCJBZSIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsIkJlIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIkNlIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJEZSIsIkVlIiwiRmUiLCJHZSIsImh0bWwiLCJtYXRobWwiLCJzdmciLCJIZSIsIkllIiwiSmUiLCJLZSIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTGUiLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJNZSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIk5lIiwiT2UiLCJ0cmltIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJQZSIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIlFlIiwiUmUiLCJpcyIsIlNlIiwiVGUiLCJibHVyIiwiZm9jdXMiLCJVZSIsImNyZWF0ZUVsZW1lbnROUyIsIlZlIiwiY3JlYXRlVGV4dE5vZGUiLCJXZSIsIl9faHRtbCIsIm9uQ2xpY2siLCJvbmNsaWNrIiwiWGUiLCJZZSIsIlplIiwiJGUiLCJhZiIsInNldEluaXRpYWxQcm9wZXJ0aWVzIiwiZGlmZlByb3BlcnRpZXMiLCJ1cGRhdGVQcm9wZXJ0aWVzIiwiZGlmZkh5ZHJhdGVkUHJvcGVydGllcyIsImRpZmZIeWRyYXRlZFRleHQiLCJ3YXJuRm9yVW5tYXRjaGVkVGV4dCIsIndhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQiLCJ3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsIkpTT04iLCJzdHJpbmdpZnkiLCJmb3JtIiwiYmYiLCJjZiIsImRmIiwiYXV0b0ZvY3VzIiwiZWYiLCJmZiIsImdmIiwiaGYiLCJqZiIsImtmIiwiU2V0IiwibGYiLCJtZiIsIm5mIiwib2YiLCJwZiIsInFmIiwicmYiLCJzZiIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwidGYiLCJ1ZiIsInZmIiwid2YiLCJnZXRDaGlsZENvbnRleHQiLCJ4ZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwieWYiLCJ6ZiIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZXhwaXJhdGlvblRpbWUiLCJBZiIsIkJmIiwiQ2YiLCJEZiIsIkVmIiwicGVuZGluZ0NoaWxkcmVuIiwiaW1wbGVtZW50YXRpb24iLCJGZiIsImVhcmxpZXN0UGVuZGluZ1RpbWUiLCJsYXRlc3RQZW5kaW5nVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RQaW5nZWRUaW1lIiwicGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lIiwiZmluaXNoZWRXb3JrIiwicGVuZGluZ0NvbnRleHQiLCJoeWRyYXRlIiwicmVtYWluaW5nRXhwaXJhdGlvblRpbWUiLCJmaXJzdEJhdGNoIiwibmV4dFNjaGVkdWxlZFJvb3QiLCJHZiIsIkhmIiwiSWYiLCJLZiIsIkxmIiwiTWYiLCJOZiIsImJhc2VTdGF0ZSIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwiT2YiLCJQZiIsInBheWxvYWQiLCJjYWxsYmFjayIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJZZiIsInN0YWNrIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJqZyIsInRhZ05hbWUiLCJrZyIsImxnIiwibWciLCJxZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJuZyIsIm9nIiwicGciLCJyZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsInNnIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwidGciLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsInVnIiwidmciLCJfc3RyaW5nUmVmIiwid2ciLCJ4ZyIsIm5jIiwiSmQiLCJ5ZyIsInpnIiwiQWciLCJCZyIsIkNnIiwiRGciLCJFZyIsIkZnIiwiR2ciLCJIZyIsIklnIiwiSmciLCJLZyIsIkxnIiwiTWciLCJOZyIsIlNnIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZWxlbWVudCIsImhpZGRlbiIsIlJnIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiVGciLCJVZyIsIlZnIiwiV2ciLCJYZyIsIllnIiwic3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZyIsIlpnIiwiJGciLCJhaCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiYmgiLCJjaCIsImRoIiwiaW5zZXJ0QmVmb3JlIiwiZWgiLCJmaCIsImdoIiwiaGgiLCJjb21wb25lbnREaWRDYXRjaCIsImloIiwiYWRkIiwiY29tcG9uZW50U3RhY2siLCJqaCIsImhhcyIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUNhdGNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJfb25Db21wbGV0ZSIsImJpIiwiX2V4cGlyYXRpb25UaW1lIiwiX2RlZmVyIiwicmFuZ2VDb3VudCIsIldhIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImphIiwibmkiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiaWciLCJvYyIsImNhIiwieGkiLCJ5aSIsIk9nIiwiUGciLCJ6aSIsInljIiwiUWciLCJBaSIsImNpIiwiZGkiLCJlaSIsImZpIiwiZ2kiLCJoaSIsImlpIiwiamkiLCJraSIsImxpIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJKZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwibWkiLCJwaSIsIl9jYWxsYmFja3MiLCJfbmV4dCIsIl9oYXNDaGlsZHJlbiIsIl9kaWRDb21wbGV0ZSIsIl9jaGlsZHJlbiIsInFpIiwiX2RpZENvbW1pdCIsIl9vbkNvbW1pdCIsInJpIiwiX2ludGVybmFsUm9vdCIsInNpIiwidWkiLCJfcmVhY3RSb290Q29udGFpbmVyIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwidGkiLCJ2aSIsIm9pIiwidGhlbiIsImNvbW1pdCIsInVubW91bnQiLCJjcmVhdGVCYXRjaCIsIndpIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2RlZmVycmVkVXBkYXRlcyIsInVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlcyIsImZsdXNoU3luYyIsInVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZCIsIkV2ZW50UGx1Z2luSHViIiwiRXZlbnRQbHVnaW5SZWdpc3RyeSIsIkV2ZW50UHJvcGFnYXRvcnMiLCJSZWFjdENvbnRyb2xsZWRDb21wb25lbnQiLCJSZWFjdERPTUNvbXBvbmVudFRyZWUiLCJSZWFjdERPTUV2ZW50TGlzdGVuZXIiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJCaSIsIkNpIiwiRXhlY3V0aW9uRW52aXJvbm1lbnQiLCJjYW5Vc2VXb3JrZXJzIiwiV29ya2VyIiwiY2FuVXNlRXZlbnRMaXN0ZW5lcnMiLCJjYW5Vc2VWaWV3cG9ydCIsInNjcmVlbiIsImlzSW5Xb3JrZXIiLCJkb2MiLCJib2R5Iiwib2JqQSIsIm9iakIiLCJrZXlzQSIsImtleXNCIiwiaXNUZXh0Tm9kZSIsImNvbnRhaW5zTm9kZSIsIm91dGVyTm9kZSIsImlubmVyTm9kZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJpc05vZGUiLCJOb2RlIiwiQWN0aW9uVHlwZXMiLCJJTklUIiwiUkVQTEFDRSIsIl90eXBlb2YiLCJvYmoiLCJfZXh0ZW5kcyIsImlzUGxhaW5PYmplY3QiLCJwcm90byIsInJlZHVjZXIiLCJwcmVsb2FkZWRTdGF0ZSIsImVuaGFuY2VyIiwiX3JlZjIiLCJjdXJyZW50UmVkdWNlciIsImN1cnJlbnRTdGF0ZSIsImN1cnJlbnRMaXN0ZW5lcnMiLCJuZXh0TGlzdGVuZXJzIiwiaXNEaXNwYXRjaGluZyIsImVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMiLCJnZXRTdGF0ZSIsInN1YnNjcmliZSIsImxpc3RlbmVyIiwiaXNTdWJzY3JpYmVkIiwiZGlzcGF0Y2giLCJhY3Rpb24iLCJsaXN0ZW5lcnMiLCJyZXBsYWNlUmVkdWNlciIsIm5leHRSZWR1Y2VyIiwic3ltYm9sX29ic2VydmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9yZWYiLCJvdXRlclN1YnNjcmliZSIsIm9ic2VydmVyIiwib2JzZXJ2ZVN0YXRlIiwidW5zdWJzY3JpYmUiLCJnZXRVbmRlZmluZWRTdGF0ZUVycm9yTWVzc2FnZSIsImFjdGlvblR5cGUiLCJjb21iaW5lUmVkdWNlcnMiLCJyZWR1Y2VycyIsInJlZHVjZXJLZXlzIiwiZmluYWxSZWR1Y2VycyIsImZpbmFsUmVkdWNlcktleXMiLCJzaGFwZUFzc2VydGlvbkVycm9yIiwiYXNzZXJ0UmVkdWNlclNoYXBlIiwiaGFzQ2hhbmdlZCIsIm5leHRTdGF0ZSIsIl9pIiwiX2tleSIsInByZXZpb3VzU3RhdGVGb3JLZXkiLCJuZXh0U3RhdGVGb3JLZXkiLCJlcnJvck1lc3NhZ2UiLCJiaW5kQWN0aW9uQ3JlYXRvciIsImFjdGlvbkNyZWF0b3IiLCJiaW5kQWN0aW9uQ3JlYXRvcnMiLCJhY3Rpb25DcmVhdG9ycyIsImJvdW5kQWN0aW9uQ3JlYXRvcnMiLCJjb21wb3NlIiwiX2xlbiIsImZ1bmNzIiwicmVkdWNlIiwiYXBwbHlNaWRkbGV3YXJlIiwibWlkZGxld2FyZXMiLCJfbGVuMiIsIl9rZXkyIiwic3RvcmUiLCJfZGlzcGF0Y2giLCJtaWRkbGV3YXJlQVBJIiwiY2hhaW4iLCJtaWRkbGV3YXJlIiwiRnVuY3Rpb24iLCJldmFsIiwib3JpZ2luYWxNb2R1bGUiLCJ3ZWJwYWNrUG9seWZpbGwiLCJGb3JtIiwiX3RoaXMyIiwiY2xhc3NOYW1lIiwib25TdWJtaXQiLCJvbkNoYW5nZSIsInBsYWNlaG9sZGVyIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0Iiwic2hpbSIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIkxpc3QiLCJjcmVhdGVUYXNrIiwidG9kbyIsIl9UYXNrMiIsIlRhc2siLCJ0ZXh0RGVjb3JhdGlvbiIsIlRhYiIsImNvbnRlbnQiLCJobXIiLCJ0cmFuc2Zvcm0iLCJpbnNlcnRJbnRvIiwibG9jYWxzIiwidXNlU291cmNlTWFwIiwibGlzdCIsIml0ZW0iLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsInRvQ29tbWVudCIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsInN0eWxlc0luRG9tIiwiaXNPbGRJRSIsImZuIiwibWVtbyIsIm1lbW9pemUiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInBhcmVudCIsInN0eWxlVGFyZ2V0IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInN0eWxlc0luc2VydGVkQXRUb3AiLCJmaXhVcmxzIiwiYWRkU3R5bGVzVG9Eb20iLCJzdHlsZXMiLCJkb21TdHlsZSIsImoiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwicGFydCIsImNzcyIsIm1lZGlhIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwibGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsImJlZm9yZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsImlkeCIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImF0dHJzIiwibm9uY2UiLCJnZXROb25jZSIsImFkZEF0dHJzIiwiZWwiLCJ1cGRhdGUiLCJyZW1vdmUiLCJzdHlsZUluZGV4IiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInJldm9rZU9iamVjdFVSTCIsIkJsb2IiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsImF1dG9GaXhVcmxzIiwiY29udmVydFRvQWJzb2x1dGVVcmxzIiwiYmxvYiIsIm9sZFNyYyIsImhyZWYiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsIm5ld09iaiIsIkRFQlVHIiwibmV3TGlzdCIsIm1heVJlbW92ZSIsInJlcGxhY2VUZXh0IiwidGV4dFN0b3JlIiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiY3NzTm9kZSIsImNoaWxkTm9kZXMiLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJob3N0IiwiY3VycmVudERpciIsInBhdGhuYW1lIiwiZnVsbE1hdGNoIiwib3JpZ1VybCIsIm5ld1VybCIsInVucXVvdGVkT3JpZ1VybCIsIiQxIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxLQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLElBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsWUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsR0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLGFBQXdEQyxNQUFBLFdBRXhEUCxPQUFBQyxlQUFBYixFQUFBLGNBQWlEbUIsT0FBQSxLQVFqRHJCLEVBQUFzQixFQUFBLFNBQUFELEVBQUFFLEdBRUEsR0FEQSxFQUFBQSxJQUFBRixFQUFBckIsRUFBQXFCLElBQ0EsRUFBQUUsRUFBQSxPQUFBRixFQUNBLEtBQUFFLEdBQUEsaUJBQUFGLFFBQUFHLFdBQUEsT0FBQUgsRUFDQSxJQUFBSSxFQUFBWCxPQUFBWSxPQUFBLE1BR0EsR0FGQTFCLEVBQUFrQixFQUFBTyxHQUNBWCxPQUFBQyxlQUFBVSxFQUFBLFdBQXlDVCxZQUFBLEVBQUFLLFVBQ3pDLEVBQUFFLEdBQUEsaUJBQUFGLEVBQUEsUUFBQU0sS0FBQU4sRUFBQXJCLEVBQUFVLEVBQUFlLEVBQUFFLEVBQUEsU0FBQUEsR0FBZ0gsT0FBQU4sRUFBQU0sSUFBcUJDLEtBQUEsS0FBQUQsSUFDckksT0FBQUYsR0FJQXpCLEVBQUE2QixFQUFBLFNBQUExQixHQUNBLElBQUFTLEVBQUFULEtBQUFxQixXQUNBLFdBQTJCLE9BQUFyQixFQUFBLFNBQzNCLFdBQWlDLE9BQUFBLEdBRWpDLE9BREFILEVBQUFVLEVBQUFFLEVBQUEsSUFBQUEsR0FDQUEsR0FJQVosRUFBQWEsRUFBQSxTQUFBaUIsRUFBQUMsR0FBc0QsT0FBQWpCLE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQXVCLEVBQUFDLElBR3REL0IsRUFBQWtDLEVBQUEsR0FJQWxDLElBQUFtQyxFQUFBLGtDQy9FQWhDLEVBQUFELFFBQUFGLEVBQUEscUJDdUJBRyxFQUFBRCxRQUFBRixFQUFBLEdBQUFBLGdEQzFCQSxJQUdBb0MsRUFIQUMsRUFBQXJDLEVBQUEsR0FNQW9DLEVBREEsb0JBQUFFLEtBQ0FBLEtBQ0Msb0JBQUFDLE9BQ0RBLFlBQ0MsSUFBQUMsRUFDREEsRUFFQXJDLEVBS0EsSUFBQXNDLEVBQUEzQixPQUFBdUIsRUFBQSxFQUFBdkIsQ0FBQXNCLEdBQ0FNLEVBQUE7Ozs7O0VDVkEsSUFBQUMsRUFBQTdCLE9BQUE2QixzQkFDQVYsRUFBQW5CLE9BQUFrQixVQUFBQyxlQUNBVyxFQUFBOUIsT0FBQWtCLFVBQUFhLHFCQXNEQTFDLEVBQUFELFFBNUNBLFdBQ0EsSUFDQSxJQUFBWSxPQUFBZ0MsT0FDQSxTQU1BLElBQUFDLEVBQUEsSUFBQUMsT0FBQSxPQUVBLEdBREFELEVBQUEsUUFDQSxNQUFBakMsT0FBQW1DLG9CQUFBRixHQUFBLEdBQ0EsU0FLQSxJQURBLElBQUFHLEtBQ0E5QyxFQUFBLEVBQWlCQSxFQUFBLEdBQVFBLElBQ3pCOEMsRUFBQSxJQUFBRixPQUFBRyxhQUFBL0MsTUFLQSxrQkFIQVUsT0FBQW1DLG9CQUFBQyxHQUFBRSxJQUFBLFNBQUF2QixHQUNBLE9BQUFxQixFQUFBckIsS0FFQXdCLEtBQUEsSUFDQSxTQUlBLElBQUFDLEtBSUEsTUFIQSx1QkFBQUMsTUFBQSxJQUFBQyxRQUFBLFNBQUFDLEdBQ0FILEVBQUFHLE9BR0EseUJBREEzQyxPQUFBNEMsS0FBQTVDLE9BQUFnQyxVQUFrQ1EsSUFBQUQsS0FBQSxJQU1oQyxNQUFBTSxHQUVGLFVBSUFDLEdBQUE5QyxPQUFBZ0MsT0FBQSxTQUFBZSxFQUFBQyxHQUtBLElBSkEsSUFBQUMsRUFFQUMsRUFEQUMsRUF0REEsU0FBQUMsR0FDQSxVQUFBQSxRQUFBQyxJQUFBRCxFQUNBLFVBQUFFLFVBQUEseURBR0EsT0FBQXRELE9BQUFvRCxHQWlEQUcsQ0FBQVIsR0FHQTFCLEVBQUEsRUFBZ0JBLEVBQUFtQyxVQUFBQyxPQUFzQnBDLElBQUEsQ0FHdEMsUUFBQVIsS0FGQW9DLEVBQUFqRCxPQUFBd0QsVUFBQW5DLElBR0FGLEVBQUExQixLQUFBd0QsRUFBQXBDLEtBQ0FzQyxFQUFBdEMsR0FBQW9DLEVBQUFwQyxJQUlBLEdBQUFnQixFQUFBLENBQ0FxQixFQUFBckIsRUFBQW9CLEdBQ0EsUUFBQTNELEVBQUEsRUFBa0JBLEVBQUE0RCxFQUFBTyxPQUFvQm5FLElBQ3RDd0MsRUFBQXJDLEtBQUF3RCxFQUFBQyxFQUFBNUQsTUFDQTZELEVBQUFELEVBQUE1RCxJQUFBMkQsRUFBQUMsRUFBQTVELE1BTUEsT0FBQTZELGlDQ25FQSxJQUFBTyxFQUFBLFNBQUFDLEtBK0JBdEUsRUFBQUQsUUFyQkEsU0FBQXdFLEVBQUFELEVBQUFFLEVBQUFDLEVBQUFuRSxFQUFBQyxFQUFBbUUsRUFBQUMsR0FHQSxHQUZBTixFQUFBQyxJQUVBQyxFQUFBLENBQ0EsSUFBQUssRUFDQSxRQUFBWixJQUFBTSxFQUNBTSxFQUFBLElBQUFDLE1BQUEscUlBQ0ssQ0FDTCxJQUFBQyxHQUFBTixFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEVBQUFDLEdBQ0FJLEVBQUEsR0FDQUgsRUFBQSxJQUFBQyxNQUFBUCxFQUFBVSxRQUFBLGlCQUNBLE9BQUFGLEVBQUFDLFNBRUF2RSxLQUFBLHNCQUlBLE1BREFvRSxFQUFBSyxZQUFBLEVBQ0FMLGtDQ2hDQTVFLEVBQUFELHlDQ0xBLFNBQUFtRixFQUFBQyxHQUNBLGtCQUNBLE9BQUFBLEdBU0EsSUFBQUMsRUFBQSxhQUVBQSxFQUFBQyxZQUFBSCxFQUNBRSxFQUFBRSxpQkFBQUosR0FBQSxHQUNBRSxFQUFBRyxnQkFBQUwsR0FBQSxHQUNBRSxFQUFBSSxnQkFBQU4sRUFBQSxNQUNBRSxFQUFBSyxnQkFBQSxXQUNBLE9BQUFDLE1BRUFOLEVBQUFPLG9CQUFBLFNBQUFSLEdBQ0EsT0FBQUEsR0FHQW5GLEVBQUFELFFBQUFxRixtQkNuQ0FwRixFQUFBRCxRQUFBRixFQUFBa0MsRUFBQSxxRUNBQSxTQUFBNkQsRUFBQTNELEdBQ0EsSUFBQUssRUFDQXRCLEVBQUFpQixFQUFBakIsT0FhQSxNQVhBLG1CQUFBQSxFQUNBQSxFQUFBNkUsV0FDQXZELEVBQUF0QixFQUFBNkUsWUFFQXZELEVBQUF0QixFQUFBLGNBQ0FBLEVBQUE2RSxXQUFBdkQsR0FHQUEsRUFBQSxlQUdBQSwwV0NmQXdELEVBQUFqRyxFQUFBLGNBQ0FBLEVBQUEsS0FDQWtHLEVBQUFsRyxFQUFBLFFBRUFBLEVBQUEsU0FDQUEsRUFBQSxTQUNBQSxFQUFBLEtBQ0FBLEVBQUEsTUFDQUEsRUFBQSx1REFFQW1HLFFBQVFDLElBQUlDLG1CQUVOQyxjQUNKLFNBQUFBLEVBQVlDLGdHQUFPQyxDQUFBWCxLQUFBUyxHQUFBLElBQUFHLG1LQUFBQyxDQUFBYixNQUFBUyxFQUFBSyxXQUFBN0YsT0FBQThGLGVBQUFOLElBQUEvRixLQUFBc0YsS0FDWFUsSUFEVyxPQUVqQkUsRUFBS0ksT0FDSEMsV0FBWSxHQUNaQyxTQUlBQyxLQUFNLE9BRVJQLEVBQUtRLGFBQWVSLEVBQUtRLGFBQWFyRixLQUFsQjZFLEdBQ3BCQSxFQUFLUyxhQUFlVCxFQUFLUyxhQUFhdEYsS0FBbEI2RSxHQUNwQkEsRUFBS1UsYUFBZVYsRUFBS1UsYUFBYXZGLEtBQWxCNkUsR0FDcEJBLEVBQUtXLGFBQWVYLEVBQUtXLGFBQWF4RixLQUFsQjZFLEdBQ3BCQSxFQUFLWSxXQUFhWixFQUFLWSxXQUFXekYsS0FBaEI2RSxHQWREQSxxVUFESGEscURBaUJIekMsR0FDWEEsRUFBRTBDLGlCQUNGMUIsS0FBSzJCLFVBQVVWLFdBQVlqQyxFQUFFaEIsT0FBT3hDLDZDQUV6QndELEdBQ1hBLEVBQUUwQyxpQkFDRixJQUFNRSxHQUNKcEcsTUFBT3dFLEtBQUtnQixNQUFNQyxXQUNsQlksTUFBTSxHQUVGWCxFQUFRbEIsS0FBS2dCLE1BQU1FLE1BQ3pCQSxFQUFNWSxLQUFLRixHQUNYNUIsS0FBSzJCLFVBQVdULE1BQU9BLEVBQU9ELFdBQVksMENBRS9CYyxHQUNYLElBQU1iLEVBQVFsQixLQUFLZ0IsTUFBTUUsTUFFekJBLEVBQU1hLEdBQU9GLE1BQVFYLEVBQU1hLEdBQU9GLEtBQ2xDN0IsS0FBSzJCLFVBQVVULFVBQ2ZaLFFBQVFDLElBQUlXLHdDQUVEbEMsRUFBRytDLEdBQ2QvQyxFQUFFMEMsaUJBQ0YsSUFBTVIsRUFBUWxCLEtBQUtnQixNQUFNRSxNQUN6QkEsRUFBTWMsT0FBT0QsRUFBTyxHQUNwQi9CLEtBQUsyQixVQUFVVCxVQUNmWixRQUFRQyxJQUFJVyxzQ0FFSGxDLEdBQ1RBLEVBQUUwQyxpQkFDRjFCLEtBQUsyQixVQUFVUixLQUFNbkMsRUFBRWhCLE9BQU94Qyx5Q0FHOUIsT0FDRXlHLEVBQUFDLFFBQUFDLGNBQUEsV0FDRUYsRUFBQUMsUUFBQUMsY0FBQSxXQUNFRixFQUFBQyxRQUFBQyxjQUFBLGFBQ0FGLEVBQUFDLFFBQUFDLGNBQUEsaUNBRUZGLEVBQUFDLFFBQUFDLGNBQUNDLEVBQUFGLFNBQ0NiLGFBQWNyQixLQUFLcUIsYUFDbkJELGFBQWNwQixLQUFLb0IsYUFDbkJILFdBQVlqQixLQUFLZ0IsTUFBTUMsYUFFekJnQixFQUFBQyxRQUFBQyxjQUFDRSxFQUFBSCxTQUNDZixLQUFNbkIsS0FBS2dCLE1BQU1HLEtBQ2pCSyxXQUFZeEIsS0FBS3dCLGFBRW5CUyxFQUFBQyxRQUFBQyxjQUFDRyxFQUFBSixTQUNDWixhQUFjdEIsS0FBS3NCLGFBQ25CSixNQUFPbEIsS0FBS2dCLE1BQU1FLE1BQ2xCSyxhQUFjdkIsS0FBS3VCLGFBQ25CSixLQUFNbkIsS0FBS2dCLE1BQU1HLDJCQU1aVixFQUVmOEIsVUFBU0MsT0FBT1AsRUFBQUMsUUFBQUMsY0FBQzFCLEVBQUQsTUFBU2dDLFNBQVNDLGNBQWM7Ozs7Ozs7O0dDaEZuQyxJQUFBQyxFQUFBeEksRUFBQSxHQUFBNkIsRUFBQTdCLEVBQUEsR0FBQWtDLEVBQUFsQyxFQUFBLEdBQUF5SSxFQUFBekksRUFBQSxHQUFBa0IsRUFBQSxtQkFBQUMsZUFBQXVILElBQUFwSCxFQUFBSixFQUFBQyxPQUFBdUgsSUFBQSx1QkFBQUMsRUFBQXpILEVBQUFDLE9BQUF1SCxJQUFBLHNCQUFBRSxFQUFBMUgsRUFBQUMsT0FBQXVILElBQUEsd0JBQUFHLEVBQUEzSCxFQUFBQyxPQUFBdUgsSUFBQSwyQkFBQUksRUFBQTVILEVBQUFDLE9BQUF1SCxJQUFBLHdCQUFBSyxFQUFBN0gsRUFBQUMsT0FBQXVILElBQUEsd0JBQUFNLEVBQUE5SCxFQUFBQyxPQUFBdUgsSUFBQSx1QkFBQU8sRUFBQS9ILEVBQUFDLE9BQUF1SCxJQUFBLDBCQUFBUSxFQUNiaEksRUFBQUMsT0FBQXVILElBQUEsMkJBQXdDeEgsR0FBQUMsT0FBQXVILElBQUEsaUJBQStCLElBQUFTLEVBQUEsbUJBQUFoSSxlQUFBaUksU0FBa0QsU0FBQUMsRUFBQTFFLEdBQWMsUUFBQUMsRUFBQU4sVUFBQUMsT0FBQSxFQUFBTSxFQUFBLHlEQUFBRixFQUFBbEUsRUFBQSxFQUE4RkEsRUFBQW1FLEVBQUluRSxJQUFBb0UsR0FBQSxXQUFBeUUsbUJBQUFoRixVQUFBN0QsRUFBQSxJQUFxRG9CLEdBQUEsMkJBQUE4QyxFQUFBLDRIQUFrQ0UsR0FDaFUsSUFBQTBFLEdBQU9DLFVBQUEsV0FBcUIsVUFBU0MsbUJBQUEsYUFBZ0NDLG9CQUFBLGFBQWlDQyxnQkFBQSxjQUErQixTQUFBQyxFQUFBakYsRUFBQUMsRUFBQUMsR0FBa0JnQixLQUFBVSxNQUFBNUIsRUFBYWtCLEtBQUFnRSxRQUFBakYsRUFBZWlCLEtBQUFpRSxLQUFBNUgsRUFBWTJELEtBQUFrRSxRQUFBbEYsR0FBQTBFLEVBQXNTLFNBQUFTLEtBQzdjLFNBQUFDLEVBQUF0RixFQUFBQyxFQUFBQyxHQUFrQmdCLEtBQUFVLE1BQUE1QixFQUFha0IsS0FBQWdFLFFBQUFqRixFQUFlaUIsS0FBQWlFLEtBQUE1SCxFQUFZMkQsS0FBQWtFLFFBQUFsRixHQUFBMEUsRUFEK0hLLEVBQUE1SCxVQUFBa0ksb0JBQWdDTixFQUFBNUgsVUFBQXdGLFNBQUEsU0FBQTdDLEVBQUFDLEdBQW1DLGlCQUFBRCxHQUFBLG1CQUFBQSxHQUFBLE1BQUFBLEdBQUEwRSxFQUFBLE1BQW1FeEQsS0FBQWtFLFFBQUFKLGdCQUFBOUQsS0FBQWxCLEVBQUFDLEVBQUEsYUFBbURnRixFQUFBNUgsVUFBQW1JLFlBQUEsU0FBQXhGLEdBQW9Da0IsS0FBQWtFLFFBQUFOLG1CQUFBNUQsS0FBQWxCLEVBQUEsZ0JBQzlhcUYsRUFBQWhJLFVBQUE0SCxFQUFBNUgsVUFBb0csSUFBQW9JLEVBQUFILEVBQUFqSSxVQUFBLElBQUFnSSxFQUF3QkksRUFBQUMsWUFBQUosRUFBZ0J6QixFQUFBNEIsRUFBQVIsRUFBQTVILFdBQWlCb0ksRUFBQUUsc0JBQUEsRUFBMEIsSUFBQUMsR0FBT0MsUUFBQSxNQUFhQyxFQUFBM0osT0FBQWtCLFVBQUFDLGVBQUF5SSxHQUFzQy9JLEtBQUEsRUFBQWdKLEtBQUEsRUFBQUMsUUFBQSxFQUFBQyxVQUFBLEdBQ2pQLFNBQUFDLEVBQUFuRyxFQUFBQyxFQUFBQyxHQUFrQixJQUFBcEUsT0FBQSxFQUFBQyxLQUFpQnFLLEVBQUEsS0FBQUMsRUFBQSxLQUFlLFNBQUFwRyxFQUFBLElBQUFuRSxVQUFBLElBQUFtRSxFQUFBK0YsTUFBQUssRUFBQXBHLEVBQUErRixVQUFBLElBQUEvRixFQUFBakQsTUFBQW9KLEVBQUEsR0FBQW5HLEVBQUFqRCxLQUFBaUQsRUFBQTZGLEVBQUFsSyxLQUFBcUUsRUFBQW5FLEtBQUFpSyxFQUFBekksZUFBQXhCLEtBQUFDLEVBQUFELEdBQUFtRSxFQUFBbkUsSUFBNEgsSUFBQXFFLEVBQUFSLFVBQUFDLE9BQUEsRUFBeUIsT0FBQU8sRUFBQXBFLEVBQUF1SyxTQUFBcEcsT0FBc0IsS0FBQUMsRUFBQSxDQUFhLFFBQUF6RSxFQUFBNkssTUFBQXBHLEdBQUF0RSxFQUFBLEVBQXVCQSxFQUFBc0UsRUFBSXRFLElBQUFILEVBQUFHLEdBQUE4RCxVQUFBOUQsRUFBQSxHQUF3QkUsRUFBQXVLLFNBQUE1SyxFQUFhLEdBQUFzRSxLQUFBd0csYUFBQSxJQUFBMUssS0FBQXFFLEVBQUFILEVBQUF3RyxrQkFBQSxJQUFBekssRUFBQUQsS0FBQUMsRUFBQUQsR0FBQXFFLEVBQUFyRSxJQUE0RSxPQUFPMkssU0FBQTlKLEVBQUErSixLQUFBMUcsRUFBQWhELElBQUFvSixFQUFBSixJQUFBSyxFQUFBekUsTUFBQTdGLEVBQUE0SyxPQUFBZixFQUFBQyxTQUM3WCxTQUFBZSxFQUFBNUcsR0FBYyx1QkFBQUEsR0FBQSxPQUFBQSxLQUFBeUcsV0FBQTlKLEVBQTRKLElBQUFrSyxFQUFBLE9BQUFDLEtBQWtCLFNBQUFDLEVBQUEvRyxFQUFBQyxFQUFBQyxFQUFBcEUsR0FBb0IsR0FBQWdMLEVBQUFsSCxPQUFBLENBQWEsSUFBQTdELEVBQUErSyxFQUFBRSxNQUFzRSxPQUF4RGpMLEVBQUErQixPQUFBa0MsRUFBV2pFLEVBQUFrTCxVQUFBaEgsRUFBY2xFLEVBQUFtTCxLQUFBaEgsRUFBU25FLEVBQUFtSixRQUFBcEosRUFBWUMsRUFBQW9MLE1BQUEsRUFBVXBMLEVBQVMsT0FBTytCLE9BQUFrQyxFQUFBaUgsVUFBQWhILEVBQUFpSCxLQUFBaEgsRUFBQWdGLFFBQUFwSixFQUFBcUwsTUFBQSxHQUErQyxTQUFBQyxFQUFBcEgsR0FBY0EsRUFBQWxDLE9BQUEsS0FBY2tDLEVBQUFpSCxVQUFBLEtBQWlCakgsRUFBQWtILEtBQUEsS0FBWWxILEVBQUFrRixRQUFBLEtBQWVsRixFQUFBbUgsTUFBQSxFQUFVLEdBQUFMLEVBQUFsSCxRQUFBa0gsRUFBQTlELEtBQUFoRCxHQUNwYixTQUFBcUgsRUFBQXJILEVBQUFDLEVBQUFDLEVBQUFwRSxHQUFvQixJQUFBQyxTQUFBaUUsRUFBZSxjQUFBakUsR0FBQSxZQUFBQSxJQUFBaUUsRUFBQSxNQUF5QyxJQUFBb0csR0FBQSxFQUFTLFVBQUFwRyxFQUFBb0csR0FBQSxPQUFpQixPQUFBckssR0FBZSwwQkFBQXFLLEdBQUEsRUFBaUMsTUFBTSxvQkFBQXBHLEVBQUF5RyxVQUFpQyxLQUFBOUosRUFBQSxLQUFBcUgsRUFBQW9DLEdBQUEsR0FBb0IsR0FBQUEsRUFBQSxPQUFBbEcsRUFBQXBFLEVBQUFrRSxFQUFBLEtBQUFDLEVBQUEsSUFBQXFILEVBQUF0SCxFQUFBLEdBQUFDLEdBQUEsRUFBZ0UsR0FBdkJtRyxFQUFBLEVBQUluRyxFQUFBLEtBQUFBLEVBQUEsSUFBQUEsRUFBQSxJQUFtQnNHLE1BQUFnQixRQUFBdkgsR0FBQSxRQUFBcUcsRUFBQSxFQUFnQ0EsRUFBQXJHLEVBQUFKLE9BQVd5RyxJQUFBLENBQVksSUFBQWxHLEVBQUFGLEVBQUFxSCxFQUFQdkwsRUFBQWlFLEVBQUFxRyxHQUFPQSxHQUFlRCxHQUFBaUIsRUFBQXRMLEVBQUFvRSxFQUFBRCxFQUFBcEUsUUFBYyxVQUFBa0UsUUFBQSxJQUFBQSxFQUFBRyxFQUFBLEtBQUFBLEVBQUEsbUJBQUFBLEVBQUFxRSxHQUFBeEUsRUFBQXdFLElBQUF4RSxFQUFBLGVBQUFHLEVBQUEsd0JBQUFBLEVBQUEsSUFBQUgsRUFBQUcsRUFBQXZFLEtBQUFvRSxHQUNyV3FHLEVBQUEsSUFBSXRLLEVBQUFpRSxFQUFBd0gsUUFBQXpFLE1BQW1CcUQsR0FBQWlCLEVBQUF0TCxJQUFBVyxNQUFBeUQsRUFBQUYsRUFBQXFILEVBQUF2TCxFQUFBc0ssS0FBQW5HLEVBQUFwRSxPQUFzQyxXQUFBQyxHQUFBMkksRUFBQSwwQkFBQXhFLEVBQUEsR0FBQUYsR0FBQSxxQkFBMEU3RCxPQUFBNEMsS0FBQWlCLEdBQUF0QixLQUFBLFVBQThCd0IsRUFBQSxJQUFTLE9BQUFrRyxFQUFTLFNBQUFrQixFQUFBdEgsRUFBQUMsR0FBZ0IsdUJBQUFELEdBQUEsT0FBQUEsR0FBQSxNQUFBQSxFQUFBaEQsSUFGckksU0FBQWdELEdBQW1CLElBQUFDLEdBQU93SCxJQUFBLEtBQUFDLElBQUEsTUFBbUIsY0FBQTFILEdBQUFRLFFBQUEsaUJBQUFSLEdBQTZDLE9BQUFDLEVBQUFELEtBRTJDMkgsQ0FBQTNILEVBQUFoRCxLQUFBaUQsRUFBQTJILFNBQUEsSUFBOEUsU0FBQUMsRUFBQTdILEVBQUFDLEdBQWdCRCxFQUFBa0gsS0FBQXRMLEtBQUFvRSxFQUFBa0YsUUFBQWpGLEVBQUFELEVBQUFtSCxTQUNyUyxTQUFBVyxFQUFBOUgsRUFBQUMsRUFBQUMsR0FBa0IsSUFBQXBFLEVBQUFrRSxFQUFBbEMsT0FBQS9CLEVBQUFpRSxFQUFBaUgsVUFBNkJqSCxJQUFBa0gsS0FBQXRMLEtBQUFvRSxFQUFBa0YsUUFBQWpGLEVBQUFELEVBQUFtSCxTQUFxQ1osTUFBQWdCLFFBQUF2SCxHQUFBK0gsRUFBQS9ILEVBQUFsRSxFQUFBb0UsRUFBQTRELEVBQUEzQyxxQkFBQSxNQUFBbkIsSUFBQTRHLEVBQUE1RyxLQUFBQyxFQUFBbEUsSUFBQWlFLEVBQUFoRCxLQUFBaUQsS0FBQWpELE1BQUFnRCxFQUFBaEQsSUFBQSxPQUFBZ0QsRUFBQWhELEtBQUF3RCxRQUFBcUcsRUFBQSxZQUFBM0csRUFBQUYsR0FBd0l5RyxTQUFBOUosRUFBQStKLEtBQUExRyxFQUFBMEcsS0FBQTFKLElBQUFpRCxFQUFBK0YsSUFBQWhHLEVBQUFnRyxJQUFBcEUsTUFBQTVCLEVBQUE0QixNQUFBK0UsT0FBQTNHLEVBQUEyRyxTQUFxRTdLLEVBQUFrSCxLQUFBaEQsSUFBYSxTQUFBK0gsRUFBQS9ILEVBQUFDLEVBQUFDLEVBQUFwRSxFQUFBQyxHQUFzQixJQUFBcUssRUFBQSxHQUFTLE1BQUFsRyxJQUFBa0csR0FBQSxHQUFBbEcsR0FBQU0sUUFBQXFHLEVBQUEsWUFBeUM1RyxFQUFBOEcsRUFBQTlHLEVBQUFtRyxFQUFBdEssRUFBQUMsR0FBYSxNQUFBaUUsR0FBQXFILEVBQUFySCxFQUFBLEdBQUE4SCxFQUFBN0gsR0FBcUJtSCxFQUFBbkgsR0FDeFosSUFBQStILEdBQU9DLFVBQVV4SixJQUFBLFNBQUF1QixFQUFBQyxFQUFBQyxHQUFvQixTQUFBRixFQUFBLE9BQUFBLEVBQW9CLElBQUFsRSxLQUF5QixPQUFoQmlNLEVBQUEvSCxFQUFBbEUsRUFBQSxLQUFBbUUsRUFBQUMsR0FBZ0JwRSxHQUFTK0MsUUFBQSxTQUFBbUIsRUFBQUMsRUFBQUMsR0FBeUIsU0FBQUYsRUFBQSxPQUFBQSxFQUFvQkMsRUFBQThHLEVBQUEsVUFBQTlHLEVBQUFDLEdBQW1CLE1BQUFGLEdBQUFxSCxFQUFBckgsRUFBQSxHQUFBNkgsRUFBQTVILEdBQXFCbUgsRUFBQW5ILElBQUtrSCxNQUFBLFNBQUFuSCxHQUFtQixhQUFBQSxFQUFBLEVBQUFxSCxFQUFBckgsRUFBQSxHQUFBOEQsRUFBQTlDLGdCQUFBLE9BQWdEa0gsUUFBQSxTQUFBbEksR0FBcUIsSUFBQUMsS0FBMkMsT0FBbEM4SCxFQUFBL0gsRUFBQUMsRUFBQSxLQUFBNkQsRUFBQTNDLHFCQUFrQ2xCLEdBQVNrSSxLQUFBLFNBQUFuSSxHQUF1QyxPQUFyQjRHLEVBQUE1RyxJQUFBMEUsRUFBQSxPQUFxQjFFLElBQVVvSSxVQUFBLFdBQXNCLE9BQU92QyxRQUFBLE9BQWNsRCxVQUFBc0MsRUFBQW9ELGNBQUEvQyxFQUFBZ0QsY0FBQSxTQUFBdEksRUFBQUMsR0FDclAsWUFEOFMsSUFBQUEsTUFBQSxPQUFxQkQsR0FBR3lHLFNBQUFwQyxFQUM5ZWtFLHNCQUFBdEksRUFBQXVJLGNBQUF4SSxFQUFBeUksY0FBQXpJLEVBQUEwSSxlQUFBMUksRUFBQTJJLGFBQUEsRUFBQUMsY0FBQSxFQUFBQyxTQUFBLEtBQUFDLFNBQUEsT0FBcUlELFVBQVlwQyxTQUFBckMsRUFBQTJFLFNBQUEvSSxHQUF1QkEsRUFBQThJLFNBQUE5SSxHQUFvQmdKLFdBQUEsU0FBQWhKLEdBQXdCLE9BQU95RyxTQUFBbEMsRUFBQWIsT0FBQTFELElBQXFCaUosU0FBQWhGLEVBQUFpRixXQUFBaEYsRUFBQWlGLG1CQUFBN0UsRUFBQThFLGtCQUFBakYsRUFBQWQsY0FBQThDLEVBQUFrRCxhQUFBLFNBQUFySixFQUFBQyxFQUFBQyxJQUErRyxPQUFBRixRQUFBLElBQUFBLElBQUEwRSxFQUFBLE1BQUExRSxHQUF1QyxJQUFBbEUsT0FBQSxFQUFBQyxFQUFBOEgsS0FBbUI3RCxFQUFBNEIsT0FBQXdFLEVBQUFwRyxFQUFBaEQsSUFBQXFKLEVBQUFyRyxFQUFBZ0csSUFBQTdGLEVBQUFILEVBQUEyRyxPQUFxQyxTQUFBMUcsRUFBQSxNQUFZLElBQUFBLEVBQUErRixNQUFBSyxFQUFBcEcsRUFBQStGLElBQUE3RixFQUFBeUYsRUFBQUMsY0FBc0MsSUFDaGY1RixFQUFBakQsTUFBQW9KLEVBQUEsR0FBQW5HLEVBQUFqRCxLQUFvQixJQUFBdEIsT0FBQSxFQUFrRSxJQUFBSSxLQUFyRGtFLEVBQUEwRyxNQUFBMUcsRUFBQTBHLEtBQUFGLGVBQUE5SyxFQUFBc0UsRUFBQTBHLEtBQUFGLGNBQXFEdkcsRUFBQTZGLEVBQUFsSyxLQUFBcUUsRUFBQW5FLEtBQUFpSyxFQUFBekksZUFBQXhCLEtBQUFDLEVBQUFELFFBQUEsSUFBQW1FLEVBQUFuRSxTQUFBLElBQUFKLElBQUFJLEdBQUFtRSxFQUFBbkUsSUFBOEcsUUFBckJBLEVBQUE2RCxVQUFBQyxPQUFBLEdBQXFCN0QsRUFBQXVLLFNBQUFwRyxPQUFzQixLQUFBcEUsRUFBQSxDQUFhSixFQUFBNkssTUFBQXpLLEdBQVcsUUFBQUQsRUFBQSxFQUFZQSxFQUFBQyxFQUFJRCxJQUFBSCxFQUFBRyxHQUFBOEQsVUFBQTlELEVBQUEsR0FBd0JFLEVBQUF1SyxTQUFBNUssRUFBYSxPQUFPK0ssU0FBQTlKLEVBQUErSixLQUFBMUcsRUFBQTBHLEtBQUExSixJQUFBb0osRUFBQUosSUFBQUssRUFBQXpFLE1BQUE3RixFQUFBNEssT0FBQXhHLElBQXFEbUosY0FBQSxTQUFBdEosR0FBMkIsSUFBQUMsRUFBQWtHLEVBQUFsSixLQUFBLEtBQUErQyxHQUE4QixPQUFUQyxFQUFBeUcsS0FBQTFHLEVBQVNDLEdBQVNzSixlQUFBM0MsRUFBQTRDLFFBQUEsU0FBQUMsb0RBQXVGQyxrQkFBQTlELEVBQzVmekgsT0FBQTBGLElBQVU4RixHQUFJdkcsUUFBQTRFLEdBQVU0QixFQUFBRCxHQUFBM0IsR0FBQTJCLEVBQVduTyxFQUFBRCxRQUFBcU8sRUFBQXhHLFFBQUF3RyxFQUFBeEcsUUFBQXdHLGlDQ25CbkMsU0FBQUMsSUFFQSxHQUNBLG9CQUFBQyxnQ0FDQSxtQkFBQUEsK0JBQUFELFNBY0EsSUFFQUMsK0JBQUFELFlBQ0csTUFBQTdLLEdBR0h3QyxRQUFBcEIsTUFBQXBCLElBT0E2SyxHQUNBck8sRUFBQUQsUUFBQUYsRUFBQTs7Ozs7Ozs7R0N0QmEsSUFBQTBPLEVBQUExTyxFQUFBLEdBQUEyTyxFQUFBM08sRUFBQSxHQUFBUSxFQUFBUixFQUFBLElBQUFrQyxFQUFBbEMsRUFBQSxHQUFBNEksRUFBQTVJLEVBQUEsR0FBQTRPLEVBQUE1TyxFQUFBLElBQUE2TyxFQUFBN08sRUFBQSxJQUFBOE8sRUFBQTlPLEVBQUEsSUFBQStPLEVBQUEvTyxFQUFBLEdBQ2IsU0FBQWlKLEVBQUF0RSxHQUFjLFFBQUFDLEVBQUFOLFVBQUFDLE9BQUEsRUFBQTlELEVBQUEseURBQUFrRSxFQUFBakUsRUFBQSxFQUE4RkEsRUFBQWtFLEVBQUlsRSxJQUFBRCxHQUFBLFdBQUE2SSxtQkFBQWhGLFVBQUE1RCxFQUFBLElBQXFEZ08sR0FBQSwyQkFBQS9KLEVBQUEsNEhBQW1DbEUsR0FBNkhrTyxHQUFBMUYsRUFBQSxPQUVyVSxJQUFBQyxHQUFPOEYsYUFBQSxLQUFBQyxpQkFBQSxFQUFBQyxjQUFBLEtBQUFDLGtCQUFBLEVBQUFDLHNCQUFBLFNBQUF6SyxFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEVBQUFDLEVBQUFpRyxFQUFBQyxFQUFBeEMsSUFEUCxTQUFBN0QsRUFBQUMsRUFBQW5FLEVBQUFDLEVBQUFtRSxFQUFBQyxFQUFBaUcsRUFBQUMsRUFBQXhDLEdBQStCM0MsS0FBQW9KLGlCQUFBLEVBQXdCcEosS0FBQW1KLGFBQUEsS0FBdUIsSUFBQW5OLEVBQUFxSixNQUFBbEosVUFBQXFOLE1BQUE5TyxLQUFBK0QsVUFBQSxHQUE4QyxJQUFJTSxFQUFBMEssTUFBQTdPLEVBQUFvQixHQUFhLE1BQUFYLEdBQVMyRSxLQUFBbUosYUFBQTlOLEVBQUEyRSxLQUFBb0osaUJBQUEsS0FDakJLLE1BQUFwRyxFQUFBNUUsWUFBc0JpTCx3Q0FBQSxTQUFBNUssRUFBQUMsRUFBQW5FLEVBQUFDLEVBQUFtRSxFQUFBQyxFQUFBaUcsRUFBQUMsRUFBQXhDLEdBQW1ILEdBQTlDVSxFQUFBa0csc0JBQUFFLE1BQUF6SixLQUFBdkIsV0FBOEM0RSxFQUFBc0csaUJBQUEsQ0FBdUIsSUFBQTNOLEVBQUFxSCxFQUFBdUcsbUJBQTJCdkcsRUFBQWlHLG1CQUFBakcsRUFBQWlHLGtCQUFBLEVBQUFqRyxFQUFBZ0csY0FBQXJOLEtBQStENk4sbUJBQUEsV0FBK0IsT0FDbFYsV0FBYyxHQUFBeEcsRUFBQWlHLGlCQUFBLENBQXVCLElBQUF4SyxFQUFBdUUsRUFBQWdHLGNBQWlFLE1BQTNDaEcsRUFBQWdHLGNBQUEsS0FBcUJoRyxFQUFBaUcsa0JBQUEsRUFBc0J4SyxJQUQ0TzJLLE1BQUFwRyxFQUFBNUUsWUFBNkJrTCxlQUFBLFdBQTJCLE9BQUF0RyxFQUFBK0YsaUJBQXlCUSxpQkFBQSxXQUE2QixHQUFBdkcsRUFBQStGLGdCQUFBLENBQXNCLElBQUF0SyxFQUNsaUJ1RSxFQUFBOEYsYUFBd0QsT0FBekM5RixFQUFBOEYsYUFBQSxLQUFvQjlGLEVBQUErRixpQkFBQSxFQUFxQnRLLEVBQVNzRSxFQUFBLFNBQTJILElBQUEwRyxFQUFBLEtBQUFDLEtBQzVMLFNBQUFDLElBQWMsR0FBQUYsRUFBQSxRQUFBaEwsS0FBQWlMLEVBQUEsQ0FBdUIsSUFBQWhMLEVBQUFnTCxFQUFBakwsR0FBQWxFLEVBQUFrUCxFQUFBRyxRQUFBbkwsR0FBa0QsSUFBdEIsRUFBQWxFLEdBQUF3SSxFQUFBLEtBQUF0RSxJQUFzQm9MLEVBQUF0UCxHQUFtRSxRQUFBQyxLQUF4RGtFLEVBQUFvTCxlQUFBL0csRUFBQSxLQUFBdEUsR0FBaUNvTCxFQUFBdFAsR0FBQW1FLEVBQVFuRSxFQUFBbUUsRUFBQXFMLFdBQWUsQ0FBZ0IsSUFBQXBMLE9BQUEsRUFBYUMsRUFBQXJFLEVBQUFDLEdBQUFxSyxFQUFBbkcsRUFBQW9HLEVBQUF0SyxFQUFtQndQLEVBQUFqTyxlQUFBK0ksSUFBQS9CLEVBQUEsS0FBQStCLEdBQXNDa0YsRUFBQWxGLEdBQUFsRyxFQUFRLElBQUEwRCxFQUFBMUQsRUFBQXFMLHdCQUFnQyxHQUFBM0gsRUFBQSxDQUFNLElBQUEzRCxLQUFBMkQsSUFBQXZHLGVBQUE0QyxJQUFBdUwsRUFBQTVILEVBQUEzRCxHQUFBa0csRUFBQUMsR0FBNkNuRyxHQUFBLE9BQUtDLEVBQUF1TCxrQkFBQUQsRUFBQXRMLEVBQUF1TCxpQkFBQXRGLEVBQUFDLEdBQUFuRyxHQUFBLEdBQUFBLEdBQUEsRUFBK0RBLEdBQUFvRSxFQUFBLEtBQUF2SSxFQUFBaUUsS0FDL1ksU0FBQXlMLEVBQUF6TCxFQUFBQyxFQUFBbkUsR0FBbUI2UCxFQUFBM0wsSUFBQXNFLEVBQUEsTUFBQXRFLEdBQXdCMkwsRUFBQTNMLEdBQUFDLEVBQVEyTCxFQUFBNUwsR0FBQUMsRUFBQXFMLFdBQUF4UCxHQUFBK1AsYUFBbUMsSUFBQVQsS0FBQUcsS0FBZUksS0FBTUMsS0FBTyxTQUFBRSxFQUFBOUwsR0FBZWdMLEdBQUExRyxFQUFBLE9BQW1CMEcsRUFBQXpFLE1BQUFsSixVQUFBcU4sTUFBQTlPLEtBQUFvRSxHQUFpQ2tMLElBQUssU0FBQWEsRUFBQS9MLEdBQWUsSUFBQWxFLEVBQUFtRSxHQUFBLEVBQVcsSUFBQW5FLEtBQUFrRSxFQUFBLEdBQUFBLEVBQUExQyxlQUFBeEIsR0FBQSxDQUFtQyxJQUFBQyxFQUFBaUUsRUFBQWxFLEdBQVdtUCxFQUFBM04sZUFBQXhCLElBQUFtUCxFQUFBblAsS0FBQUMsSUFBQWtQLEVBQUFuUCxJQUFBd0ksRUFBQSxNQUFBeEksR0FBQW1QLEVBQUFuUCxHQUFBQyxFQUFBa0UsR0FBQSxHQUF3RUEsR0FBQWlMLElBQzFVLElBQUFjLEdBQVFDLFFBQUFiLEVBQUFjLHlCQUFBWCxFQUFBWSx3QkFBQVIsRUFBQVMsNkJBQUFSLEVBQUFTLDBCQUFBLEtBQUFDLHVCQUFBUixFQUFBUyx5QkFBQVIsR0FBdUxTLEVBQUEsS0FBQUMsRUFBQSxLQUFBQyxFQUFBLEtBQXlCLFNBQUFDLEVBQUEzTSxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBcUJrRSxFQUFBRCxFQUFBMEcsTUFBQSxnQkFBMEIxRyxFQUFBNE0sY0FBQUYsRUFBQTNRLEdBQXNCd0ksRUFBQXFHLHdDQUFBM0ssRUFBQW5FLE9BQUEsRUFBQWtFLEdBQXdEQSxFQUFBNE0sY0FBQSxLQUNyVixTQUFBQyxFQUFBN00sRUFBQUMsR0FBd0MsT0FBdkIsTUFBQUEsR0FBQXFFLEVBQUEsTUFBdUIsTUFBQXRFLEVBQUFDLEVBQW9Cc0csTUFBQWdCLFFBQUF2SCxHQUFxQnVHLE1BQUFnQixRQUFBdEgsSUFBQUQsRUFBQWdELEtBQUEySCxNQUFBM0ssRUFBQUMsR0FBQUQsSUFBK0NBLEVBQUFnRCxLQUFBL0MsR0FBVUQsR0FBU3VHLE1BQUFnQixRQUFBdEgsSUFBQUQsR0FBQThNLE9BQUE3TSxJQUFBRCxFQUFBQyxHQUE0QyxTQUFBOE0sRUFBQS9NLEVBQUFDLEVBQUFuRSxHQUFtQnlLLE1BQUFnQixRQUFBdkgsS0FBQW5CLFFBQUFvQixFQUFBbkUsR0FBQWtFLEdBQUFDLEVBQUFyRSxLQUFBRSxFQUFBa0UsR0FBK0MsSUFBQWdOLEVBQUEsS0FDalEsU0FBQUMsRUFBQWpOLEVBQUFDLEdBQWlCLEdBQUFELEVBQUEsQ0FBTSxJQUFBbEUsRUFBQWtFLEVBQUFrTixtQkFBQW5SLEVBQUFpRSxFQUFBbU4sbUJBQWtELEdBQUE1RyxNQUFBZ0IsUUFBQXpMLEdBQUEsUUFBQW9FLEVBQUEsRUFBZ0NBLEVBQUFwRSxFQUFBOEQsU0FBQUksRUFBQW9OLHVCQUFzQ2xOLElBQUF5TSxFQUFBM00sRUFBQUMsRUFBQW5FLEVBQUFvRSxHQUFBbkUsRUFBQW1FLFNBQXNCcEUsR0FBQTZRLEVBQUEzTSxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBb0JpRSxFQUFBa04sbUJBQUEsS0FBMEJsTixFQUFBbU4sbUJBQUEsS0FBMEJuTixFQUFBcU4sZ0JBQUFyTixFQUFBMEYsWUFBQTRILFFBQUF0TixJQUE0QyxTQUFBdU4sRUFBQXZOLEdBQWUsT0FBQWlOLEVBQUFqTixHQUFBLEdBQWdCLFNBQUF3TixFQUFBeE4sR0FBZSxPQUFBaU4sRUFBQWpOLEdBQUEsR0FBZ0IsSUFBQXlOLEdBQVFuQix1QkFBQVIsRUFBQVMseUJBQUFSLEdBQy9WLFNBQUEyQixFQUFBMU4sRUFBQUMsR0FBaUIsSUFBQW5FLEVBQUFrRSxFQUFBMk4sVUFBa0IsSUFBQTdSLEVBQUEsWUFBa0IsSUFBQUMsRUFBQXlRLEVBQUExUSxHQUFZLElBQUFDLEVBQUEsWUFBa0JELEVBQUFDLEVBQUFrRSxHQUFPRCxFQUFBLE9BQUFDLEdBQVksZ05BQUFsRSxLQUFBNlIsWUFBQTdSLElBQUEsWUFBQWlFLElBQUEwRyxPQUFBLFVBQUExRyxHQUFBLFdBQUFBLEdBQUEsYUFBQUEsSUFBa1RBLEdBQUFqRSxFQUFLLE1BQUFpRSxFQUFRLFFBQUFBLEdBQUEsRUFBYSxPQUFBQSxFQUFBLE1BQWlCbEUsR0FBQSxtQkFBQUEsR0FBQXdJLEVBQUEsTUFBQXJFLFNBQUFuRSxHQUNuY0EsR0FBUyxTQUFBK1IsRUFBQTdOLEVBQUFDLEdBQWlCLE9BQUFELElBQUFnTixFQUFBSCxFQUFBRyxFQUFBaE4sSUFBd0JBLEVBQUFnTixFQUFLQSxFQUFBLEtBQVFoTixJQUFBK00sRUFBQS9NLEVBQUFDLEVBQUFzTixFQUFBQyxHQUFBUixHQUFBMUksRUFBQSxNQUFBQyxFQUFBd0csc0JBQWtFLFNBQUErQyxFQUFBOU4sRUFBQUMsRUFBQW5FLEVBQUFDLEdBQXFCLFFBQUFtRSxFQUFBLEtBQUFDLEVBQUEsRUFBbUJBLEVBQUFpTCxFQUFBeEwsT0FBWU8sSUFBQSxDQUFLLElBQUFpRyxFQUFBZ0YsRUFBQWpMLEdBQVlpRyxRQUFBaUYsY0FBQXJMLEVBQUFDLEVBQUFuRSxFQUFBQyxNQUFBbUUsRUFBQTJNLEVBQUEzTSxFQUFBa0csSUFBNkN5SCxFQUFBM04sR0FBQSxHQUFTLElBQUE2TixHQUFRQyxVQUFBUCxFQUFBUSxZQUFBUCxFQUFBUSxpQkFBQUwsRUFBQU0sMEJBQUFMLEdBQTZFTSxFQUFBQyxLQUFBQyxTQUFBMUcsU0FBQSxJQUFBOEMsTUFBQSxHQUFBbEcsRUFBQSwyQkFBQTRKLEVBQUFHLEVBQUEsd0JBQUFILEVBQ2pWLFNBQUFJLEVBQUF4TyxHQUFlLEdBQUFBLEVBQUF3RSxHQUFBLE9BQUF4RSxFQUFBd0UsR0FBb0IsTUFBS3hFLEVBQUF3RSxJQUFNLEtBQUF4RSxFQUFBeU8sV0FBZ0MsWUFBaEN6TyxJQUFBeU8sV0FBd0QsWUFBUHpPLElBQUF3RSxJQUFPa0ssS0FBQSxJQUFBMU8sRUFBQTBPLElBQUExTyxFQUFBLEtBQW1DLFNBQUEyTyxFQUFBM08sR0FBZSxPQUFBQSxFQUFBME8sS0FBQSxJQUFBMU8sRUFBQTBPLElBQUEsT0FBQTFPLEVBQUEyTixVQUEyQ3JKLEVBQUEsTUFBUSxTQUFBc0ssRUFBQTVPLEdBQWUsT0FBQUEsRUFBQXVPLElBQUEsS0FBbUIsSUFBQU0sR0FBUUMsa0JBQUEsU0FBQTlPLEVBQUFDLEdBQWdDQSxFQUFBdUUsR0FBQXhFLEdBQU8rTywyQkFBQVAsRUFBQVEsb0JBQUEsU0FBQWhQLEdBQXNFLFFBQVBBLElBQUF3RSxLQUFPLElBQUF4RSxFQUFBME8sS0FBQSxJQUFBMU8sRUFBQTBPLElBQUEsS0FBQTFPLEdBQXNDaVAsb0JBQUFOLEVBQUFPLDZCQUFBTixFQUFBTyxpQkFBQSxTQUFBblAsRUFBQUMsR0FBdUZELEVBQUF1TyxHQUFBdE8sSUFDL2QsU0FBQWdGLEVBQUFqRixHQUFjLEdBQUFBLElBQUFvUCxhQUFjcFAsR0FBQSxJQUFBQSxFQUFBME8sS0FBb0IsT0FBQTFPLEdBQUEsS0FBZ0IsU0FBQXFQLEVBQUFyUCxFQUFBQyxFQUFBbkUsR0FBbUIsUUFBQUMsS0FBYWlFLEdBQUVqRSxFQUFBaUgsS0FBQWhELEtBQUFpRixFQUFBakYsR0FBa0IsSUFBQUEsRUFBQWpFLEVBQUE2RCxPQUFlLEVBQUFJLEtBQU1DLEVBQUFsRSxFQUFBaUUsR0FBQSxXQUFBbEUsR0FBc0IsSUFBQWtFLEVBQUEsRUFBUUEsRUFBQWpFLEVBQUE2RCxPQUFXSSxJQUFBQyxFQUFBbEUsRUFBQWlFLEdBQUEsVUFBQWxFLEdBQXdCLFNBQUF3VCxFQUFBdFAsRUFBQUMsRUFBQW5FLElBQW1CbUUsRUFBQXlOLEVBQUExTixFQUFBbEUsRUFBQXlULGVBQUEvRCx3QkFBQXZMLE9BQUFuRSxFQUFBb1IsbUJBQUFMLEVBQUEvUSxFQUFBb1IsbUJBQUFqTixHQUFBbkUsRUFBQXFSLG1CQUFBTixFQUFBL1EsRUFBQXFSLG1CQUFBbk4sSUFBdUosU0FBQXdQLEVBQUF4UCxHQUFlQSxLQUFBdVAsZUFBQS9ELHlCQUFBNkQsRUFBQXJQLEVBQUF5UCxZQUFBSCxFQUFBdFAsR0FDblksU0FBQTBQLEVBQUExUCxHQUFlLEdBQUFBLEtBQUF1UCxlQUFBL0Qsd0JBQUEsQ0FBZ0QsSUFBQXZMLEVBQUFELEVBQUF5UCxZQUFrQ0osRUFBZHBQLElBQUFnRixFQUFBaEYsR0FBQSxLQUFjcVAsRUFBQXRQLElBQVksU0FBQTJQLEVBQUEzUCxFQUFBQyxFQUFBbkUsR0FBbUJrRSxHQUFBbEUsS0FBQXlULGVBQUE3RCxtQkFBQXpMLEVBQUF5TixFQUFBMU4sRUFBQWxFLEVBQUF5VCxlQUFBN0QscUJBQUE1UCxFQUFBb1IsbUJBQUFMLEVBQUEvUSxFQUFBb1IsbUJBQUFqTixHQUFBbkUsRUFBQXFSLG1CQUFBTixFQUFBL1EsRUFBQXFSLG1CQUFBbk4sSUFBd0wsU0FBQTRQLEVBQUE1UCxHQUFlQSxLQUFBdVAsZUFBQTdELGtCQUFBaUUsRUFBQTNQLEVBQUF5UCxZQUFBLEtBQUF6UCxHQUErRCxTQUFBNlAsR0FBQTdQLEdBQWUrTSxFQUFBL00sRUFBQXdQLEdBQ3JaLFNBQUFNLEdBQUE5UCxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBcUIsR0FBQUQsR0FBQUMsRUFBQWlFLEVBQUEsQ0FBbUIsSUFBUixJQUFBRSxFQUFBcEUsRUFBUXFFLEVBQUFwRSxFQUFBcUssRUFBQSxFQUFBQyxFQUFBbkcsRUFBb0JtRyxFQUFFQSxFQUFBcEIsRUFBQW9CLEdBQUFELElBQVdDLEVBQUEsRUFBSSxRQUFBeEMsRUFBQTFELEVBQVkwRCxFQUFFQSxFQUFBb0IsRUFBQXBCLEdBQUF3QyxJQUFXLEtBQUssRUFBQUQsRUFBQUMsR0FBTW5HLEVBQUErRSxFQUFBL0UsR0FBQWtHLElBQVksS0FBSyxFQUFBQyxFQUFBRCxHQUFNakcsRUFBQThFLEVBQUE5RSxHQUFBa0csSUFBWSxLQUFLRCxLQUFJLENBQUUsR0FBQWxHLElBQUFDLEdBQUFELElBQUFDLEVBQUE0UCxVQUFBLE1BQUEvUCxFQUFrQ0UsRUFBQStFLEVBQUEvRSxHQUFPQyxFQUFBOEUsRUFBQTlFLEdBQU9ELEVBQUEsVUFBT0EsRUFBQSxLQUFnQixJQUFKQyxFQUFBRCxFQUFJQSxLQUFTcEUsT0FBQXFFLElBQXlCLFFBQWRpRyxFQUFBdEssRUFBQWlVLFlBQWMzSixJQUFBakcsSUFBeUJELEVBQUE4QyxLQUFBbEgsR0FBVUEsRUFBQW1KLEVBQUFuSixHQUFPLElBQUFBLEtBQVNDLE9BQUFvRSxJQUF5QixRQUFkaUcsRUFBQXJLLEVBQUFnVSxZQUFjM0osSUFBQWpHLElBQXlCckUsRUFBQWtILEtBQUFqSCxHQUFVQSxFQUFBa0osRUFBQWxKLEdBQU8sSUFBQUEsRUFBQSxFQUFRQSxFQUFBbUUsRUFBQU4sT0FBVzdELElBQUE0VCxFQUFBelAsRUFBQW5FLEdBQUEsVUFBQWlFLEdBQXlCLElBQUFBLEVBQUFsRSxFQUFBOEQsT0FBZSxFQUFBSSxLQUFNMlAsRUFBQTdULEVBQUFrRSxHQUFBLFdBQUFDLEdBQy9iLElBQUErUCxJQUFRQyw2QkFBQUosR0FBQUssdUNBQUEsU0FBQWxRLEdBQW1GK00sRUFBQS9NLEVBQUEwUCxJQUFTUywrQkFBQUwsR0FBQU0sMkJBQUEsU0FBQXBRLEdBQTBFK00sRUFBQS9NLEVBQUE0UCxLQUFXLFNBQUFTLEdBQUFyUSxFQUFBQyxHQUFpQixJQUFBbkUsS0FBc0ksT0FBN0hBLEVBQUFrRSxFQUFBc1EsZUFBQXJRLEVBQUFxUSxjQUFtQ3hVLEVBQUEsU0FBQWtFLEdBQUEsU0FBQUMsRUFBeUJuRSxFQUFBLE1BQUFrRSxHQUFBLE1BQUFDLEVBQW1CbkUsRUFBQSxLQUFBa0UsR0FBQSxLQUFBQyxFQUFpQm5FLEVBQUEsSUFBQWtFLEdBQUEsSUFBQUMsRUFBQXFRLGNBQTZCeFUsRUFDaFYsSUFBQXlVLElBQVFDLGFBQUFILEdBQUEsNEJBQUFJLG1CQUFBSixHQUFBLGtDQUFBSyxlQUFBTCxHQUFBLDhCQUFBTSxjQUFBTixHQUFBLCtCQUFtTU8sTUFBTUMsTUFDak4sU0FBQUMsR0FBQTlRLEdBQWUsR0FBQTRRLEdBQUE1USxHQUFBLE9BQUE0USxHQUFBNVEsR0FBc0IsSUFBQXVRLEdBQUF2USxHQUFBLE9BQUFBLEVBQW1CLElBQUFsRSxFQUFBbUUsRUFBQXNRLEdBQUF2USxHQUFjLElBQUFsRSxLQUFBbUUsRUFBQSxHQUFBQSxFQUFBM0MsZUFBQXhCLFNBQUErVSxHQUFBLE9BQUFELEdBQUE1USxHQUFBQyxFQUFBbkUsR0FBNkQsT0FBQWtFLEVBRHFGbkUsRUFBQWtWLFlBQUFGLEdBQUFsTixTQUFBTixjQUFBLE9BQUEyTixNQUFBLG1CQUFBcFQsZ0JBQUEyUyxHQUFBQyxhQUFBUyxpQkFBQVYsR0FBQUUsbUJBQUFRLGlCQUFBVixHQUFBRyxlQUFBTyxXQUFBLG9CQUFBclQsZUFBQTJTLEdBQUFJLGNBQUFPLFlBQzVFLElBQUFDLEdBQUFMLEdBQUEsZ0JBQUFNLEdBQUFOLEdBQUEsc0JBQUFPLEdBQUFQLEdBQUEsa0JBQUFRLEdBQUFSLEdBQUEsaUJBQUFTLEdBQUEsc05BQUEzUyxNQUFBLEtBQUE0UyxHQUFBLEtBQzVJLFNBQUFDLEtBQXdHLE9BQTFGRCxJQUFBM1YsRUFBQWtWLFlBQUFTLEdBQUEsZ0JBQUE3TixTQUFBK04sZ0JBQUEsMkJBQTBGRixHQUFVLElBQUFuTSxJQUFPc00sTUFBQSxLQUFBQyxXQUFBLEtBQUFDLGNBQUEsTUFBK0MsU0FBQUMsS0FBYyxHQUFBek0sR0FBQXdNLGNBQUEsT0FBQXhNLEdBQUF3TSxjQUEwQyxJQUFBN1IsRUFBQWpFLEVBQUFrRSxFQUFBb0YsR0FBQXVNLFdBQUE5VixFQUFBbUUsRUFBQUwsT0FBQU0sRUFBQTZSLEtBQUE1UixFQUFBRCxFQUFBTixPQUFvRCxJQUFBSSxFQUFBLEVBQVFBLEVBQUFsRSxHQUFBbUUsRUFBQUQsS0FBQUUsRUFBQUYsR0FBaUJBLEtBQUssSUFBQW9HLEVBQUF0SyxFQUFBa0UsRUFBVSxJQUFBakUsRUFBQSxFQUFRQSxHQUFBcUssR0FBQW5HLEVBQUFuRSxFQUFBQyxLQUFBbUUsRUFBQUMsRUFBQXBFLEdBQXNCQSxLQUErQyxPQUExQ3NKLEdBQUF3TSxjQUFBM1IsRUFBQXdLLE1BQUExSyxFQUFBLEVBQUFqRSxFQUFBLEVBQUFBLE9BQUEsR0FBMENzSixHQUFBd00sY0FBdUIsU0FBQUUsS0FBYyxnQkFBQTFNLEdBQUFzTSxNQUFBdE0sR0FBQXNNLE1BQUFqVixNQUFBMkksR0FBQXNNLE1BQUFGLE1BQzlhLElBQUFPLEdBQUEsdUhBQUFwVCxNQUFBLEtBQUFxVCxJQUE2SXZMLEtBQUEsS0FBQXhILE9BQUEsS0FBQTBOLGNBQUEzSSxFQUFBakQsZ0JBQUFrUixXQUFBLEtBQUFDLFFBQUEsS0FBQUMsV0FBQSxLQUFBQyxVQUFBLFNBQUFyUyxHQUF5SCxPQUFBQSxFQUFBcVMsV0FBQUMsS0FBQUMsT0FBK0JDLGlCQUFBLEtBQUFDLFVBQUEsTUFDclMsU0FBQW5OLEdBQUF0RixFQUFBQyxFQUFBbkUsRUFBQUMsR0FBNkcsUUFBQW1FLEtBQXpGZ0IsS0FBQXFPLGVBQUF2UCxFQUFzQmtCLEtBQUF1TyxZQUFBeFAsRUFBbUJpQixLQUFBd1IsWUFBQTVXLEVBQW1Ca0UsRUFBQWtCLEtBQUF3RSxZQUFBaU4sVUFBNkIzUyxFQUFBMUMsZUFBQTRDLE1BQUFELEVBQUFELEVBQUFFLElBQUFnQixLQUFBaEIsR0FBQUQsRUFBQW5FLEdBQUEsV0FBQW9FLEVBQUFnQixLQUFBaEMsT0FBQW5ELEVBQUFtRixLQUFBaEIsR0FBQXBFLEVBQUFvRSxJQUErUSxPQUEzS2dCLEtBQUEwUixvQkFBQSxNQUFBOVcsRUFBQTBXLGlCQUFBMVcsRUFBQTBXLGtCQUFBLElBQUExVyxFQUFBK1csYUFBQTVPLEVBQUFsRCxnQkFBQWtELEVBQUFuRCxpQkFBOEhJLEtBQUFrTSxxQkFBQW5KLEVBQUFuRCxpQkFBNkNJLEtBRzVYLFNBQUE0UixHQUFBOVMsRUFBQUMsRUFBQW5FLEVBQUFDLEdBQXFCLEdBQUFtRixLQUFBNlIsVUFBQW5ULE9BQUEsQ0FBMEIsSUFBQU0sRUFBQWdCLEtBQUE2UixVQUFBL0wsTUFBZ0QsT0FBckI5RixLQUFBdEYsS0FBQXNFLEVBQUFGLEVBQUFDLEVBQUFuRSxFQUFBQyxHQUFxQm1FLEVBQVMsV0FBQWdCLEtBQUFsQixFQUFBQyxFQUFBbkUsRUFBQUMsR0FBeUIsU0FBQWlYLEdBQUFoVCxHQUFlQSxhQUFBa0IsTUFBQW9ELEVBQUEsT0FBa0N0RSxFQUFBaVQsYUFBZSxHQUFBL1IsS0FBQTZSLFVBQUFuVCxRQUFBc0IsS0FBQTZSLFVBQUEvUCxLQUFBaEQsR0FBaUQsU0FBQWtULEdBQUFsVCxHQUFlQSxFQUFBK1MsYUFBZS9TLEVBQUFtVCxVQUFBTCxHQUFlOVMsRUFBQXNOLFFBQUEwRixHQUYvUnpWLEVBQUErSCxHQUFBakksV0FBZXVGLGVBQUEsV0FBMEIxQixLQUFBc1Isa0JBQUEsRUFBeUIsSUFBQXhTLEVBQUFrQixLQUFBd1IsWUFBdUIxUyxNQUFBNEMsZUFBQTVDLEVBQUE0QyxpQkFBQSxrQkFBQTVDLEVBQUE2UyxjQUFBN1MsRUFBQTZTLGFBQUEsR0FBQTNSLEtBQUEwUixtQkFBQTNPLEVBQUFsRCxrQkFBd0lxUyxnQkFBQSxXQUE0QixJQUFBcFQsRUFBQWtCLEtBQUF3UixZQUF1QjFTLE1BQUFvVCxnQkFBQXBULEVBQUFvVCxrQkFBQSxrQkFBQXBULEVBQUFxVCxlQUFBclQsRUFBQXFULGNBQUEsR0FBQW5TLEtBQUFrTSxxQkFBQW5KLEVBQUFsRCxrQkFBOEl1UyxRQUFBLFdBQW9CcFMsS0FBQW1NLGFBQUFwSixFQUFBbEQsaUJBQW9Dc00sYUFBQXBKLEVBQUFuRCxpQkFDMWRtUyxXQUFBLFdBQXNCLElBQUFoVCxFQUFBRCxFQUFBa0IsS0FBQXdFLFlBQUFpTixVQUFtQyxJQUFBMVMsS0FBQUQsRUFBQWtCLEtBQUFqQixHQUFBLEtBQXdCLElBQUFELEVBQUEsRUFBUUEsRUFBQWdTLEdBQUFwUyxPQUFZSSxJQUFBa0IsS0FBQThRLEdBQUFoUyxJQUFBLFFBQXdCc0YsR0FBQXFOLFVBQUFWLEdBQWUzTSxHQUFBaU8sT0FBQSxTQUFBdlQsR0FBcUIsU0FBQUMsS0FBYyxTQUFBbkUsSUFBYSxPQUFBQyxFQUFBNE8sTUFBQXpKLEtBQUF2QixXQUErQixJQUFBNUQsRUFBQW1GLEtBQVdqQixFQUFBNUMsVUFBQXRCLEVBQUFzQixVQUF3QixJQUFBNkMsRUFBQSxJQUFBRCxFQUE2SCxPQUFqSDFDLEVBQUEyQyxFQUFBcEUsRUFBQXVCLFdBQWlCdkIsRUFBQXVCLFVBQUE2QyxFQUFjcEUsRUFBQXVCLFVBQUFxSSxZQUFBNUosRUFBMEJBLEVBQUE2VyxVQUFBcFYsS0FBZ0J4QixFQUFBNFcsVUFBQTNTLEdBQWdCbEUsRUFBQXlYLE9BQUF4WCxFQUFBd1gsT0FBa0JMLEdBQUFwWCxHQUFNQSxHQUFVb1gsR0FBQTVOLElBQ3pGLElBQUFrTyxHQUFBbE8sR0FBQWlPLFFBQWlCRSxLQUFBLE9BQVVDLEdBQUFwTyxHQUFBaU8sUUFBZUUsS0FBQSxPQUFVRSxJQUFBLFlBQUFDLEdBQUEvWCxFQUFBa1YsV0FBQSxxQkFBQW5ULE9BQUFpVyxHQUFBLEtBQXNFaFksRUFBQWtWLFdBQUEsaUJBQUFwTixXQUFBa1EsR0FBQWxRLFNBQUFtUSxjQUN0YSxJQUFBQyxHQUFBbFksRUFBQWtWLFdBQUEsY0FBQW5ULFNBQUFpVyxHQUFBRyxHQUFBblksRUFBQWtWLGFBQUE2QyxJQUFBQyxJQUFBLEVBQUFBLElBQUEsSUFBQUEsSUFBQUksR0FBQTVWLE9BQUFHLGFBQUEsSUFBQTBWLElBQXFIQyxhQUFhM0kseUJBQXlCNEksUUFBQSxnQkFBQUMsU0FBQSx3QkFBd0R4SSxjQUFBLGtEQUFnRXlJLGdCQUFpQjlJLHlCQUF5QjRJLFFBQUEsbUJBQUFDLFNBQUEsMkJBQThEeEksYUFBQSx1REFBQWpOLE1BQUEsTUFBZ0YyVixrQkFBbUIvSSx5QkFBeUI0SSxRQUFBLHFCQUN2ZkMsU0FBQSw2QkFBcUN4SSxhQUFBLHlEQUFBak4sTUFBQSxNQUFrRjRWLG1CQUFvQmhKLHlCQUF5QjRJLFFBQUEsc0JBQUFDLFNBQUEsOEJBQW9FeEksYUFBQSwwREFBQWpOLE1BQUEsT0FBb0Y2VixJQUFBLEVBQzVULFNBQUFDLEdBQUExVSxFQUFBQyxHQUFpQixPQUFBRCxHQUFVLHVCQUFBMlQsR0FBQXhJLFFBQUFsTCxFQUFBMFUsU0FBOEMsMkJBQUExVSxFQUFBMFUsUUFBc0MsbURBQXNELGtCQUFrQixTQUFBQyxHQUFBNVUsR0FBMEIsdUJBQVhBLElBQUE2VSxTQUFXLFNBQUE3VSxJQUFBeVQsS0FBQSxLQUFrRCxJQUFBcUIsSUFBQSxFQUVuUSxJQUFBQyxJQUFRekosV0FBQTRJLEdBQUE3SSxjQUFBLFNBQUFyTCxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBOEMsSUFBQW1FLE9BQUEsRUFBYUMsT0FBQSxFQUFhLEdBQUF5VCxHQUFBM1QsRUFBQSxDQUFTLE9BQUFELEdBQVUsdUJBQUFFLEVBQUFnVSxHQUFBSyxpQkFBOEMsTUFBQXRVLEVBQVEscUJBQUFDLEVBQUFnVSxHQUFBSSxlQUEwQyxNQUFBclUsRUFBUSx3QkFBQUMsRUFBQWdVLEdBQUFNLGtCQUFnRCxNQUFBdlUsRUFBUUMsT0FBQSxPQUFTNFUsR0FBQUosR0FBQTFVLEVBQUFsRSxLQUFBb0UsRUFBQWdVLEdBQUFJLGdCQUFBLFlBQUF0VSxHQUFBLE1BQUFsRSxFQUFBNlksVUFBQXpVLEVBQUFnVSxHQUFBSyxrQkFDckksT0FEb09yVSxHQUFBOFQsS0FBQWMsSUFBQTVVLElBQUFnVSxHQUFBSyxpQkFBQXJVLElBQUFnVSxHQUFBSSxnQkFBQVEsS0FBQTNVLEVBQUEyUixPQUFBek0sR0FBQXNNLE1BQUE1VixFQUFBc0osR0FBQXVNLFdBQUFHLEtBQUErQyxJQUFBLElBQUE1VSxFQUFBc1QsR0FBQUwsVUFBQWpULEVBQUFELEVBQUFuRSxFQUFBQyxHQUFBb0UsRUFBQUQsRUFBQXVULEtBQzNXdFQsRUFBQSxRQUFBQSxFQUFBeVUsR0FBQTlZLE1BQUFvRSxFQUFBdVQsS0FBQXRULEdBQUEwUCxHQUFBM1AsR0FBQUMsRUFBQUQsR0FBQUMsRUFBQSxNQUFtREgsRUFBQStULEdBSDBOLFNBQUEvVCxFQUFBQyxHQUFpQixPQUFBRCxHQUFVLDRCQUFBNFUsR0FBQTNVLEdBQW1DLDJCQUFBQSxFQUFBK1UsTUFBQSxNQUE0Q1AsSUFBQSxFQUFNUixJQUFVLHVCQUFBalUsRUFBQUMsRUFBQXdULFFBQUFRLElBQUFRLEdBQUEsS0FBQXpVLEVBQW1ELHFCQUd2WWlWLENBQUFqVixFQUFBbEUsR0FGbkQsU0FBQWtFLEVBQUFDLEdBQWlCLEdBQUE2VSxHQUFBLHlCQUFBOVUsSUFBQTRULElBQUFjLEdBQUExVSxFQUFBQyxJQUFBRCxFQUFBOFIsS0FBQXpNLEdBQUFzTSxNQUFBLEtBQUF0TSxHQUFBdU0sV0FBQSxLQUFBdk0sR0FBQXdNLGNBQUEsS0FBQWlELElBQUEsRUFBQTlVLEdBQUEsS0FBeUgsT0FBQUEsR0FBVSx3QkFBeUIsb0JBQUFDLEVBQUFpVixTQUFBalYsRUFBQWtWLFFBQUFsVixFQUFBbVYsVUFBQW5WLEVBQUFpVixTQUFBalYsRUFBQWtWLE9BQUEsQ0FBMkUsR0FBQWxWLEVBQUFvVixNQUFBLEVBQUFwVixFQUFBb1YsS0FBQXpWLE9BQUEsT0FBQUssRUFBQW9WLEtBQXlDLEdBQUFwVixFQUFBK1UsTUFBQSxPQUFBM1csT0FBQUcsYUFBQXlCLEVBQUErVSxPQUErQyxZQUFZLDRCQUFBaEIsR0FBQSxLQUFBL1QsRUFBQXdULEtBQTRDLHFCQUVyVjZCLENBQUF0VixFQUFBbEUsTUFBQW1FLEVBQUF5VCxHQUFBUCxVQUFBZSxHQUFBQyxZQUFBbFUsRUFBQW5FLEVBQUFDLElBQUEwWCxLQUFBelQsRUFBQTZQLEdBQUE1UCxNQUFBLEtBQW9GLE9BQUFFLEVBQUFGLEVBQUEsT0FBQUEsRUFBQUUsS0FBQUYsS0FBb0NzVixHQUFBLEtBQUFDLElBQWFDLG1DQUFBLFNBQUF6VixHQUErQ3VWLEdBQUF2VixJQUFNMFYsR0FBQSxLQUFBQyxHQUFBLEtBQWlCLFNBQUFDLEdBQUE1VixHQUFlLEdBQUFBLEVBQUF5TSxFQUFBek0sR0FBQSxDQUFZdVYsSUFBQSxtQkFBQUEsR0FBQU0sd0JBQUF2UixFQUFBLE9BQWtFLElBQUFyRSxFQUFBdU0sRUFBQXhNLEVBQUEyTixXQUFzQjRILEdBQUFNLHVCQUFBN1YsRUFBQTJOLFVBQUEzTixFQUFBMEcsS0FBQXpHLElBQWlELFNBQUE2VixHQUFBOVYsR0FBZTBWLEdBQUFDLE1BQUEzUyxLQUFBaEQsR0FBQTJWLElBQUEzVixHQUFBMFYsR0FBQTFWLEVBQ2piLFNBQUErVixLQUFjLGNBQUFMLElBQUEsT0FBQUMsR0FBNEIsU0FBQUssS0FBYyxHQUFBTixHQUFBLENBQU8sSUFBQTFWLEVBQUEwVixHQUFBelYsRUFBQTBWLEdBQStCLEdBQWpCQSxHQUFBRCxHQUFBLEtBQVdFLEdBQUE1VixHQUFNQyxFQUFBLElBQUFELEVBQUEsRUFBYUEsRUFBQUMsRUFBQUwsT0FBV0ksSUFBQTRWLEdBQUEzVixFQUFBRCxLQUFjLElBQUFpVyxJQUFRakksVUFBQXdILEdBQUFVLG9CQUFBSixHQUFBSyxrQkFBQUosR0FBQUsscUJBQUFKLElBQWtGLFNBQUFLLEdBQUFyVyxFQUFBQyxHQUFpQixPQUFBRCxFQUFBQyxHQUFZLFNBQUFxVyxHQUFBdFcsRUFBQUMsRUFBQW5FLEdBQW1CLE9BQUFrRSxFQUFBQyxFQUFBbkUsR0FBYyxTQUFBeWEsTUFBZSxJQUFBQyxJQUFBLEVBQVUsU0FBQUMsR0FBQXpXLEVBQUFDLEdBQWlCLEdBQUF1VyxHQUFBLE9BQUF4VyxFQUFBQyxHQUFrQnVXLElBQUEsRUFBTSxJQUFJLE9BQUFILEdBQUFyVyxFQUFBQyxHQUFlLFFBQVF1VyxJQUFBLEVBQUFULE9BQUFRLEtBQUFQLE9BQ3pYLElBQUFVLElBQVFDLE9BQUEsRUFBQUMsTUFBQSxFQUFBQyxVQUFBLEVBQUFDLGtCQUFBLEVBQUFDLE9BQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLFVBQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLEtBQUEsRUFBQUMsTUFBQSxFQUFBQyxNQUFBLEVBQUFDLEtBQUEsRUFBQUMsTUFBQSxHQUFtSixTQUFBQyxHQUFBMVgsR0FBZSxJQUFBQyxFQUFBRCxLQUFBMlgsVUFBQTNYLEVBQUEyWCxTQUFBckgsY0FBOEMsZ0JBQUFyUSxJQUFBeVcsR0FBQTFXLEVBQUEwRyxNQUFBLGFBQUF6RyxFQUFvRCxTQUFBMlgsR0FBQTVYLEdBQXlHLE9BQTFGQSxJQUFBZCxRQUFBYyxFQUFBNlgsWUFBQWphLFFBQWlDa2EsMEJBQUE5WCxJQUFBOFgseUJBQXlELElBQUE5WCxFQUFBK1gsU0FBQS9YLEVBQUF5TyxXQUFBek8sRUFDclgsU0FBQWdZLEdBQUFoWSxFQUFBQyxHQUFpQixTQUFBcEUsRUFBQWtWLFdBQUE5USxLQUFBLHFCQUFBMEQsY0FBdUUxRCxHQUFURCxFQUFBLEtBQUFBLEtBQVMyRCxhQUFnQjFELEVBQUEwRCxTQUFBTixjQUFBLFFBQUE0VSxhQUFBalksRUFBQSxXQUE2REMsRUFBQSxtQkFBQUEsRUFBQUQsSUFBK0JDLEdBQVMsU0FBQWlZLEdBQUFsWSxHQUFlLElBQUFDLEVBQUFELEVBQUEwRyxLQUFhLE9BQUExRyxJQUFBMlgsV0FBQSxVQUFBM1gsRUFBQXNRLGdCQUFBLGFBQUFyUSxHQUFBLFVBQUFBLEdBRXJOLFNBQUFrWSxHQUFBblksR0FBZUEsRUFBQW9ZLGdCQUFBcFksRUFBQW9ZLGNBRG5DLFNBQUFwWSxHQUFlLElBQUFDLEVBQUFpWSxHQUFBbFksR0FBQSxrQkFBQWxFLEVBQUFLLE9BQUFrYyx5QkFBQXJZLEVBQUEwRixZQUFBckksVUFBQTRDLEdBQUFsRSxFQUFBLEdBQUFpRSxFQUFBQyxHQUFxRyxJQUFBRCxFQUFBMUMsZUFBQTJDLFNBQUEsSUFBQW5FLEdBQUEsbUJBQUFBLEVBQUFRLEtBQUEsbUJBQUFSLEVBQUF3YyxJQUFBLENBQXVHLElBQUFwWSxFQUFBcEUsRUFBQVEsSUFBQTZELEVBQUFyRSxFQUFBd2MsSUFBaU0sT0FBN0tuYyxPQUFBQyxlQUFBNEQsRUFBQUMsR0FBMkJzWSxjQUFBLEVBQUFqYyxJQUFBLFdBQStCLE9BQUE0RCxFQUFBdEUsS0FBQXNGLE9BQW9Cb1gsSUFBQSxTQUFBdFksR0FBaUJqRSxFQUFBLEdBQUFpRSxFQUFPRyxFQUFBdkUsS0FBQXNGLEtBQUFsQixNQUFrQjdELE9BQUFDLGVBQUE0RCxFQUFBQyxHQUEyQjVELFdBQUFQLEVBQUFPLGNBQWlDbWMsU0FBQSxXQUFvQixPQUFBemMsR0FBUzBjLFNBQUEsU0FBQXpZLEdBQXNCakUsRUFBQSxHQUFBaUUsR0FBTzBZLGFBQUEsV0FBeUIxWSxFQUFBb1ksY0FDdGYsWUFBS3BZLEVBQUFDLE1BQThCMFksQ0FBQTNZLElBQXlDLFNBQUE0WSxHQUFBNVksR0FBZSxJQUFBQSxFQUFBLFNBQWUsSUFBQUMsRUFBQUQsRUFBQW9ZLGNBQXNCLElBQUFuWSxFQUFBLFNBQWUsSUFBQW5FLEVBQUFtRSxFQUFBdVksV0FBbUJ6YyxFQUFBLEdBQTJELE9BQWxEaUUsSUFBQWpFLEVBQUFtYyxHQUFBbFksS0FBQTZZLFFBQUEsZUFBQTdZLEVBQUF0RCxRQUE4Q3NELEVBQUFqRSxLQUFJRCxJQUFBbUUsRUFBQXdZLFNBQUF6WSxJQUFBLEdBQzdOLElBQUE4WSxHQUFBOU8sRUFBQVAsbURBQUFDLGtCQUFBcVAsR0FBQSxtQkFBQXZjLGVBQUF1SCxJQUFBaVYsR0FBQUQsR0FBQXZjLE9BQUF1SCxJQUFBLHVCQUFBa1YsR0FBQUYsR0FBQXZjLE9BQUF1SCxJQUFBLHNCQUFBbVYsR0FBQUgsR0FBQXZjLE9BQUF1SCxJQUFBLHdCQUFBb1YsR0FBQUosR0FBQXZjLE9BQUF1SCxJQUFBLDJCQUFBcVYsR0FBQUwsR0FBQXZjLE9BQUF1SCxJQUFBLHdCQUFBc1YsR0FBQU4sR0FBQXZjLE9BQUF1SCxJQUFBLHdCQUFBdVYsR0FBQVAsR0FBQXZjLE9BQUF1SCxJQUFBLHVCQUFBd1YsR0FBQVIsR0FBQXZjLE9BQUF1SCxJQUFBLDBCQUFBeVYsR0FBQVQsR0FBQXZjLE9BQUF1SCxJQUFBLDJCQUFBMFYsR0FBQVYsR0FBQXZjLE9BQUF1SCxJQUFBLGlCQUNBLE1BQUEyVixHQUFBLG1CQUFBbGQsZUFBQWlJLFNBQXFELFNBQUFrVixHQUFBM1osR0FBZSxjQUFBQSxRQUFBLElBQUFBLEVBQUEsS0FBNkUsbUJBQTdCQSxFQUFBMFosSUFBQTFaLEVBQUEwWixLQUFBMVosRUFBQSxlQUE2QkEsRUFBQSxLQUNqSixTQUFBNFosR0FBQTVaLEdBQWUsSUFBQUMsRUFBQUQsRUFBQTBHLEtBQWEsc0JBQUF6RyxFQUFBLE9BQUFBLEVBQUE0WixhQUFBNVosRUFBQWpFLEtBQXNELG9CQUFBaUUsRUFBQSxPQUFBQSxFQUFnQyxPQUFBQSxHQUFVLEtBQUFzWixHQUFBLGtCQUEwQixLQUFBRCxHQUFBLHlCQUFpQyxLQUFBSixHQUFBLHNCQUE4QixLQUFBRCxHQUFBLG9CQUE0QixLQUFBRyxHQUFBLGtCQUFBcFosRUFBQThaLGFBQUFDLEdBQUEsSUFBZ0QsS0FBQVYsR0FBQSx5QkFBaUMsS0FBQUYsR0FBQSxtQkFBMkIsS0FBQU0sR0FBQSxnQkFBd0Isb0JBQUF4WixHQUFBLE9BQUFBLEVBQUEsT0FBQUEsRUFBQXdHLFVBQW9ELEtBQUErUyxHQUFBLFlBQUF4WixFQUFBQyxFQUFBeUQsT0FBQW1XLGFBQUE1WixFQUFBeUQsT0FBQTFILE1BQUEsa0JBQ3phZ0UsRUFBQSxpQkFBbUIsWUFBWSxTQUFBZ2EsR0FBQWhhLEdBQWUsSUFBQUMsRUFBQSxHQUFTLEdBQUdELEVBQUEsT0FBQUEsRUFBQTBPLEtBQWdCLGdDQUFBNVMsRUFBQWtFLEVBQUFpYSxZQUFBbGUsRUFBQWlFLEVBQUFrYSxhQUFpRWhhLEVBQUEwWixHQUFBNVosR0FBWUcsRUFBQSxLQUFXckUsSUFBQXFFLEVBQUF5WixHQUFBOWQsSUFBYUEsRUFBQUMsRUFBSW1FLEVBQUEsYUFBQUEsR0FBQSxZQUFBcEUsRUFBQSxRQUFBQSxFQUFBcWUsU0FBQTNaLFFBQUEsb0JBQUExRSxFQUFBc2UsV0FBQSxJQUFBamEsRUFBQSxnQkFBQUEsRUFBQSxRQUE0SCxNQUFBSCxFQUFRLFFBQUFFLEVBQUEsR0FBYUQsR0FBQUMsRUFBS0YsSUFBQW9QLGFBQVdwUCxHQUFTLE9BQUFDLEVBQzdWLElBQUFvYSxHQUFBLDhWQUFBQyxHQUFBbmUsT0FBQWtCLFVBQUFDLGVBQUFpZCxNQUE2WUMsTUFFckwsU0FBQS9VLEdBQUF6RixFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEdBQXNCZ0IsS0FBQXVaLGdCQUFBLElBQUF4YSxHQUFBLElBQUFBLEdBQUEsSUFBQUEsRUFBeUNpQixLQUFBd1osY0FBQTNlLEVBQXFCbUYsS0FBQXlaLG1CQUFBemEsRUFBMEJnQixLQUFBMFosZ0JBQUE5ZSxFQUF1Qm9GLEtBQUEyWixhQUFBN2EsRUFBb0JrQixLQUFBd0YsS0FBQXpHLEVBQVksSUFBQTJGLE1BQzdYLHVJQUFBaEgsTUFBQSxLQUFBQyxRQUFBLFNBQUFtQixHQUFzSzRGLEdBQUE1RixHQUFBLElBQUF5RixHQUFBekYsRUFBQSxLQUFBQSxFQUFBLFVBQTRCLHNHQUFBbkIsUUFBQSxTQUFBbUIsR0FBNEgsSUFBQUMsRUFBQUQsRUFBQSxHQUFXNEYsR0FBQTNGLEdBQUEsSUFBQXdGLEdBQUF4RixFQUFBLEtBQUFELEVBQUEsWUFBK0Isb0RBQUFuQixRQUFBLFNBQUFtQixHQUF5RTRGLEdBQUE1RixHQUFBLElBQUF5RixHQUFBekYsRUFBQSxLQUFBQSxFQUFBc1EsY0FBQSxTQUNqYiwyREFBQXpSLFFBQUEsU0FBQW1CLEdBQWdGNEYsR0FBQTVGLEdBQUEsSUFBQXlGLEdBQUF6RixFQUFBLEtBQUFBLEVBQUEsUUFBNEIsZ01BQUFwQixNQUFBLEtBQUFDLFFBQUEsU0FBQW1CLEdBQStONEYsR0FBQTVGLEdBQUEsSUFBQXlGLEdBQUF6RixFQUFBLEtBQUFBLEVBQUFzUSxjQUFBLFNBQTBDLHlDQUFBelIsUUFBQSxTQUFBbUIsR0FBOEQ0RixHQUFBNUYsR0FBQSxJQUFBeUYsR0FBQXpGLEVBQUEsS0FBQUEsRUFBQXNRLGNBQUEsU0FDbmIsc0JBQUF6UixRQUFBLFNBQUFtQixHQUEyQzRGLEdBQUE1RixHQUFBLElBQUF5RixHQUFBekYsRUFBQSxLQUFBQSxFQUFBc1EsY0FBQSxTQUEwQyw2QkFBQXpSLFFBQUEsU0FBQW1CLEdBQWtENEYsR0FBQTVGLEdBQUEsSUFBQXlGLEdBQUF6RixFQUFBLEtBQUFBLEVBQUFzUSxjQUFBLFNBQTBDLG1CQUFBelIsUUFBQSxTQUFBbUIsR0FBd0M0RixHQUFBNUYsR0FBQSxJQUFBeUYsR0FBQXpGLEVBQUEsS0FBQUEsRUFBQXNRLGNBQUEsUUFBMEMsSUFBQXdLLEdBQUEsZ0JBQXVCLFNBQUFDLEdBQUEvYSxHQUFlLE9BQUFBLEVBQUEsR0FBQWdiLGNBR3pTLFNBQUFDLEdBQUFqYixFQUFBQyxFQUFBbkUsRUFBQUMsR0FBcUIsSUFBQW1FLEVBQUEwRixHQUFBdEksZUFBQTJDLEdBQUEyRixHQUFBM0YsR0FBQSxNQUFvQyxPQUFBQyxFQUFBLElBQUFBLEVBQUF3RyxNQUFBM0ssSUFBQSxFQUFBa0UsRUFBQUwsU0FBQSxNQUFBSyxFQUFBLFVBQUFBLEVBQUEsWUFBQUEsRUFBQSxVQUFBQSxFQUFBLFFBTnpELFNBQUFELEVBQUFDLEVBQUFuRSxFQUFBQyxHQUFxQixVQUFBa0UsUUFBQSxJQUFBQSxHQUQ4RixTQUFBRCxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBcUIsVUFBQUQsR0FBQSxJQUFBQSxFQUFBNEssS0FBQSxTQUFpQyxjQUFBekcsR0FBaUIscUNBQXVDLHFCQUFBbEUsSUFBNkIsT0FBQUQsS0FBQTJlLGdCQUFrRSxXQUE3QnphLElBQUFzUSxjQUFBNUYsTUFBQSxPQUE2QixVQUFBMUssR0FBK0Isa0JBQzFVa2IsQ0FBQWxiLEVBQUFDLEVBQUFuRSxFQUFBQyxHQUFBLFNBQTBELEdBQUFBLEVBQUEsU0FBYyxVQUFBRCxFQUFBLE9BQUFBLEVBQUE0SyxNQUEyQixjQUFBekcsRUFBZ0Isa0JBQUFBLEVBQW9CLGNBQUFrYixNQUFBbGIsR0FBdUIsY0FBQWtiLE1BQUFsYixJQUFBLEVBQUFBLEVBQTRCLFNBTW5EbWIsQ0FBQW5iLEVBQUFuRSxFQUFBb0UsRUFBQW5FLEtBQUFELEVBQUEsTUFBQUMsR0FBQSxPQUFBbUUsRUFQNUosU0FBQUYsR0FBZSxRQUFBc2EsR0FBQTFlLEtBQUE0ZSxHQUFBeGEsS0FBMEJzYSxHQUFBMWUsS0FBQTJlLEdBQUF2YSxLQUEwQnFhLEdBQUFnQixLQUFBcmIsR0FBQXdhLEdBQUF4YSxJQUFBLEdBQThCdWEsR0FBQXZhLElBQUEsR0FBUyxJQU9rRHNiLENBQUFyYixLQUFBLE9BQUFuRSxFQUFBa0UsRUFBQXViLGdCQUFBdGIsR0FBQUQsRUFBQWlZLGFBQUFoWSxFQUFBLEdBQUFuRSxJQUFBb0UsRUFBQTBhLGdCQUFBNWEsRUFBQUUsRUFBQTJhLGNBQUEsT0FBQS9lLEVBQUEsSUFBQW9FLEVBQUF3RyxNQUFBLEdBQUE1SyxHQUFBbUUsRUFBQUMsRUFBQXdhLGNBQUEzZSxFQUFBbUUsRUFBQXlhLG1CQUFBLE9BQUE3ZSxFQUFBa0UsRUFBQXViLGdCQUFBdGIsSUFBQW5FLEVBQUEsS0FBQW9FLElBQUF3RyxPQUFBLElBQUF4RyxJQUFBLElBQUFwRSxFQUFBLE1BQUFBLEVBQUFDLEVBQUFpRSxFQUFBd2IsZUFBQXpmLEVBQUFrRSxFQUFBbkUsR0FBQWtFLEVBQUFpWSxhQUFBaFksRUFBQW5FLE1BQzVKLFNBQUEyZixHQUFBemIsRUFBQUMsR0FBaUIsSUFBQW5FLEVBQUFtRSxFQUFBNFksUUFBZ0IsT0FBQXRiLEtBQVcwQyxHQUFJeWIsb0JBQUEsRUFBQUMsa0JBQUEsRUFBQWpmLFdBQUEsRUFBQW1jLFFBQUEsTUFBQS9jLElBQUFrRSxFQUFBNGIsY0FBQUMsaUJBQTBHLFNBQUFDLEdBQUE5YixFQUFBQyxHQUFpQixJQUFBbkUsRUFBQSxNQUFBbUUsRUFBQTBiLGFBQUEsR0FBQTFiLEVBQUEwYixhQUFBNWYsRUFBQSxNQUFBa0UsRUFBQTRZLFFBQUE1WSxFQUFBNFksUUFBQTVZLEVBQUF5YixlQUEwRjVmLEVBQUFpZ0IsR0FBQSxNQUFBOWIsRUFBQXZELE1BQUF1RCxFQUFBdkQsTUFBQVosR0FBOEJrRSxFQUFBNGIsZUFBaUJDLGVBQUE5ZixFQUFBaWdCLGFBQUFsZ0IsRUFBQW1nQixXQUFBLGFBQUFoYyxFQUFBeUcsTUFBQSxVQUFBekcsRUFBQXlHLEtBQUEsTUFBQXpHLEVBQUE0WSxRQUFBLE1BQUE1WSxFQUFBdkQsT0FBZ0gsU0FBQXdmLEdBQUFsYyxFQUFBQyxHQUE2QixPQUFaQSxJQUFBNFksVUFBWW9DLEdBQUFqYixFQUFBLFVBQUFDLEdBQUEsR0FDamMsU0FBQWtjLEdBQUFuYyxFQUFBQyxHQUFpQmljLEdBQUFsYyxFQUFBQyxHQUFRLElBQUFuRSxFQUFBaWdCLEdBQUE5YixFQUFBdkQsT0FBa0IsTUFBQVosSUFBQSxXQUFBbUUsRUFBQXlHLE1BQWlDLElBQUE1SyxHQUFBLEtBQUFrRSxFQUFBdEQsT0FBQXNELEVBQUF0RCxPQUFBWixLQUFBa0UsRUFBQXRELE1BQUEsR0FBQVosR0FBZ0RrRSxFQUFBdEQsUUFBQSxHQUFBWixJQUFBa0UsRUFBQXRELE1BQUEsR0FBQVosSUFBb0NtRSxFQUFBM0MsZUFBQSxTQUFBOGUsR0FBQXBjLEVBQUFDLEVBQUF5RyxLQUFBNUssR0FBQW1FLEVBQUEzQyxlQUFBLGlCQUFBOGUsR0FBQXBjLEVBQUFDLEVBQUF5RyxLQUFBcVYsR0FBQTliLEVBQUEwYixlQUEyRyxNQUFBMWIsRUFBQTRZLFNBQUEsTUFBQTVZLEVBQUF5YixpQkFBQTFiLEVBQUEwYixpQkFBQXpiLEVBQUF5YixnQkFDM1EsU0FBQVcsR0FBQXJjLEVBQUFDLEVBQUFuRSxHQUFtQixHQUFBbUUsRUFBQTNDLGVBQUEsVUFBQTJDLEVBQUEzQyxlQUFBLGlCQUFnRTJDLEVBQUEsR0FBQUQsRUFBQTRiLGNBQUFJLGFBQWtDLElBQUFqZ0IsRUFBQWlFLEVBQUF0RCxNQUFjWixHQUFBbUUsSUFBQWxFLElBQUFpRSxFQUFBdEQsTUFBQXVELEdBQXNCRCxFQUFBMmIsYUFBQTFiLEVBQTBCLE1BQVRuRSxFQUFBa0UsRUFBQWhFLFFBQVNnRSxFQUFBaEUsS0FBQSxJQUFvQmdFLEVBQUEwYixnQkFBQTFiLEVBQUEwYixlQUFtQzFiLEVBQUEwYixnQkFBQTFiLEVBQUEwYixlQUFtQyxLQUFBNWYsSUFBQWtFLEVBQUFoRSxLQUFBRixHQUFtQixTQUFBc2dCLEdBQUFwYyxFQUFBQyxFQUFBbkUsR0FBbUIsV0FBQW1FLEdBQUFELEVBQUFzYyxjQUFBQyxnQkFBQXZjLElBQUEsTUFBQWxFLEVBQUFrRSxFQUFBMmIsYUFBQSxHQUFBM2IsRUFBQTRiLGNBQUFJLGFBQUFoYyxFQUFBMmIsZUFBQSxHQUFBN2YsSUFBQWtFLEVBQUEyYixhQUFBLEdBQUE3ZixJQUNuVCxTQUFBaWdCLEdBQUEvYixHQUFlLGNBQUFBLEdBQWlCLDRFQUFBQSxFQUFtRixrQkFObkgsMGpDQUFBcEIsTUFBQSxLQUFBQyxRQUFBLFNBQUFtQixHQUF5bEMsSUFBQUMsRUFBQUQsRUFBQVEsUUFBQXNhLEdBQ3psQ0MsSUFBSW5WLEdBQUEzRixHQUFBLElBQUF3RixHQUFBeEYsRUFBQSxLQUFBRCxFQUFBLFFBQTRCLHNGQUFBcEIsTUFBQSxLQUFBQyxRQUFBLFNBQUFtQixHQUFxSCxJQUFBQyxFQUFBRCxFQUFBUSxRQUFBc2EsR0FBQUMsSUFBdUJuVixHQUFBM0YsR0FBQSxJQUFBd0YsR0FBQXhGLEVBQUEsS0FBQUQsRUFBQSxtQ0FBc0QsbUNBQUFuQixRQUFBLFNBQUFtQixHQUF3RCxJQUFBQyxFQUFBRCxFQUFBUSxRQUFBc2EsR0FBQUMsSUFBdUJuVixHQUFBM0YsR0FBQSxJQUFBd0YsR0FBQXhGLEVBQUEsS0FBQUQsRUFBQSwwQ0FBOEQ0RixHQUFBNFcsU0FBQSxJQUFBL1csR0FBQSxpQ0FLMU8sSUFBQWdYLElBQVFDLFFBQVFsUix5QkFBeUI0SSxRQUFBLFdBQUFDLFNBQUEsbUJBQThDeEksYUFBQSw4REFBQWpOLE1BQUEsT0FBeUYsU0FBQStkLEdBQUEzYyxFQUFBQyxFQUFBbkUsR0FBOEUsT0FBM0RrRSxFQUFBc0YsR0FBQTZOLFVBQUFzSixHQUFBQyxPQUFBMWMsRUFBQUMsRUFBQW5FLElBQStCNEssS0FBQSxTQUFnQm9QLEdBQUFoYSxHQUFNK1QsR0FBQTdQLEdBQU1BLEVBQVMsSUFBQTRjLEdBQUEsS0FBQUMsR0FBQSxLQUFvQixTQUFBQyxHQUFBOWMsR0FBZTZOLEVBQUE3TixHQUFBLEdBQVMsU0FBQStjLEdBQUEvYyxHQUEyQixHQUFBNFksR0FBWmpLLEVBQUEzTyxJQUFZLE9BQUFBLEVBQ25kLFNBQUFnZCxHQUFBaGQsRUFBQUMsR0FBaUIsY0FBQUQsRUFBQSxPQUFBQyxFQUF5QixJQUFBZ2QsSUFBQSxFQUEyRixTQUFBQyxLQUFjTixRQUFBTyxZQUFBLG1CQUFBQyxJQUFBUCxHQUFBRCxHQUFBLE1BQXVELFNBQUFRLEdBQUFwZCxHQUFlLFVBQUFBLEVBQUE2YSxjQUFBa0MsR0FBQUYsS0FBQXBHLEdBQUFxRyxHQUFBOWMsRUFBQTJjLEdBQUFFLEdBQUE3YyxFQUFBNFgsR0FBQTVYLEtBQThELFNBQUFxZCxHQUFBcmQsRUFBQUMsRUFBQW5FLEdBQW1CLFVBQUFrRSxHQUFBa2QsS0FBQUwsR0FBQS9nQixHQUFBOGdCLEdBQUEzYyxHQUFBcWQsWUFBQSxtQkFBQUYsS0FBQSxTQUFBcGQsR0FBQWtkLEtBQW9GLFNBQUFLLEdBQUF2ZCxHQUFlLHVCQUFBQSxHQUFBLFVBQUFBLEdBQUEsWUFBQUEsRUFBQSxPQUFBK2MsR0FBQUYsSUFDN1ksU0FBQVcsR0FBQXhkLEVBQUFDLEdBQWlCLGFBQUFELEVBQUEsT0FBQStjLEdBQUE5YyxHQUE0QixTQUFBd2QsR0FBQXpkLEVBQUFDLEdBQWlCLGFBQUFELEdBQUEsV0FBQUEsRUFBQSxPQUFBK2MsR0FBQTljLEdBRFZwRSxFQUFBa1YsWUFBQWtNLEdBQUFqRixHQUFBLFlBQUFyVSxTQUFBbVEsY0FBQSxFQUFBblEsU0FBQW1RLGVBRXBELElBQUE0SixJQUFRcFMsV0FBQW1SLEdBQUFrQix1QkFBQVYsR0FBQTVSLGNBQUEsU0FBQXJMLEVBQUFDLEVBQUFuRSxFQUFBQyxHQUF3RSxJQUFBbUUsRUFBQUQsRUFBQTBPLEVBQUExTyxHQUFBckMsT0FBQXVDLE9BQUEsRUFBQWlHLE9BQUEsRUFBQUMsRUFBQW5HLEVBQUF5WCxVQUFBelgsRUFBQXlYLFNBQUFySCxjQUFtUCxHQUFySyxXQUFBakssR0FBQSxVQUFBQSxHQUFBLFNBQUFuRyxFQUFBd0csS0FBQXZHLEVBQUE2YyxHQUFBdEYsR0FBQXhYLEdBQUErYyxHQUFBOWMsRUFBQXNkLElBQUF0ZCxFQUFBb2QsR0FBQW5YLEVBQUFpWCxLQUFBaFgsRUFBQW5HLEVBQUF5WCxXQUFBLFVBQUF0UixFQUFBaUssZ0JBQUEsYUFBQXBRLEVBQUF3RyxNQUFBLFVBQUF4RyxFQUFBd0csUUFBQXZHLEVBQUFxZCxJQUFxS3JkLFFBQUFILEVBQUFDLElBQUEsT0FBQTBjLEdBQUF4YyxFQUFBckUsRUFBQUMsR0FBa0NxSyxLQUFBcEcsRUFBQUUsRUFBQUQsR0FBWSxTQUFBRCxNQUFBRSxFQUFBMGIsZ0JBQUE1YixFQUFBaWMsWUFBQSxXQUFBL2IsRUFBQXdHLE1BQUEwVixHQUFBbGMsRUFBQSxTQUFBQSxFQUFBeEQsU0FBMEZraEIsR0FBQXRZLEdBQUFpTyxRQUFjc0ssS0FBQSxLQUFBaEosT0FBQSxPQUFzQmlKLElBQU1DLElBQUEsU0FDcmZDLFFBQUEsVUFBQUMsS0FBQSxVQUFBQyxNQUFBLFlBQW1ELFNBQUFDLEdBQUFuZSxHQUFlLElBQUFDLEVBQUFpQixLQUFBd1IsWUFBdUIsT0FBQXpTLEVBQUFtZSxpQkFBQW5lLEVBQUFtZSxpQkFBQXBlLFFBQUE4ZCxHQUFBOWQsT0FBQUMsRUFBQUQsR0FBb0UsU0FBQXFlLEtBQWMsT0FBQUYsR0FDM0ssSUFBQUcsR0FBQVYsR0FBQXJLLFFBQWtCZ0wsUUFBQSxLQUFBQyxRQUFBLEtBQUFDLFFBQUEsS0FBQUMsUUFBQSxLQUFBQyxNQUFBLEtBQUFDLE1BQUEsS0FBQTFKLFFBQUEsS0FBQTJKLFNBQUEsS0FBQTFKLE9BQUEsS0FBQUMsUUFBQSxLQUFBZ0osaUJBQUFDLEdBQUFTLE9BQUEsS0FBQUMsUUFBQSxLQUFBQyxjQUFBLFNBQUFoZixHQUFxTSxPQUFBQSxFQUFBZ2YsZ0JBQUFoZixFQUFBaWYsY0FBQWpmLEVBQUE2WCxXQUFBN1gsRUFBQWtmLFVBQUFsZixFQUFBaWYsZ0JBQWtGRSxHQUFBYixHQUFBL0ssUUFBZ0I2TCxVQUFBLEtBQUFDLE1BQUEsS0FBQUMsT0FBQSxLQUFBQyxTQUFBLEtBQUFDLE1BQUEsS0FBQUMsTUFBQSxLQUFBQyxZQUFBLEtBQUFDLFVBQUEsT0FBMEc1RixJQUFNNkYsWUFBWWxVLGlCQUFBLGVBQUFHLGNBQUEseUJBQ3JiZ1UsWUFBWW5VLGlCQUFBLGVBQUFHLGNBQUEseUJBQXNFaVUsY0FBZXBVLGlCQUFBLGlCQUFBRyxjQUFBLDZCQUE0RWtVLGNBQWVyVSxpQkFBQSxpQkFBQUcsY0FBQSw4QkFBNkVtVSxJQUFLMVUsV0FBQXlPLEdBQUExTyxjQUFBLFNBQUFyTCxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBOEMsSUFBQW1FLEVBQUEsY0FBQUYsR0FBQSxnQkFBQUEsRUFBQUcsRUFBQSxhQUFBSCxHQUFBLGVBQUFBLEVBQTRFLEdBQUFFLElBQUFwRSxFQUFBa2pCLGVBQUFsakIsRUFBQW1qQixlQUFBOWUsSUFBQUQsRUFBQSxZQUNyVCxHQURnWEEsRUFBQW5FLEVBQUE2QixTQUFBN0IsS0FBQW1FLEVBQUFuRSxFQUFBdWdCLGVBQUFwYyxFQUFBK2YsYUFDbmMvZixFQUFBZ2dCLGFBQUF0aUIsT0FBc0J1QyxLQUFBRixPQUFBbkUsRUFBQWtqQixlQUFBbGpCLEVBQUFvakIsV0FBQTFRLEVBQUF2TyxHQUFBLE1BQUFFLEVBQUEsS0FBNkRBLElBQUFGLEVBQUEsWUFBcUIsSUFBQW1HLE9BQUEsRUFBQUMsT0FBQSxFQUFBeEMsT0FBQSxFQUFBM0csT0FBQSxFQUNqRyxNQUR5SSxhQUFBOEMsR0FBQSxjQUFBQSxHQUFBb0csRUFBQWtZLEdBQUFqWSxFQUFBMFQsR0FBQThGLFdBQUFoYyxFQUFBa1csR0FBQTZGLFdBQUExaUIsRUFBQSxTQUFrRixlQUFBOEMsR0FBQSxnQkFBQUEsSUFBQW9HLEVBQUErWSxHQUFBOVksRUFBQTBULEdBQUFnRyxhQUFBbGMsRUFBQWtXLEdBQUErRixhQUFBNWlCLEVBQUEsV0FBaUc4QyxFQUFBLE1BQUFHLEVBQUFELEVBQUF5TyxFQUFBeE8sR0FBa0JELEVBQUEsTUFBQUQsRUFBQUMsRUFBQXlPLEVBQUExTyxJQUFrQm9HLEVBQUFELEVBQUErTSxVQUFBOU0sRUFBQWxHLEVBQUFyRSxFQUFBQyxJQUF1QjJLLEtBQUF4SixFQUFBLFFBQWlCbUosRUFBQW5ILE9BQUFjLEVBQVdxRyxFQUFBMlksY0FBQTllLEdBQWtCcEUsRUFBQXNLLEVBQUErTSxVQUFBdFAsRUFBQTVELEVBQUFuRSxFQUFBQyxJQUF1QjJLLEtBQUF4SixFQUFBLFFBQWlCcEIsRUFBQW9ELE9BQUFnQixFQUFXcEUsRUFBQWtqQixjQUFBaGYsRUFBa0I4UCxHQUFBekosRUFDamZ2SyxFQUFBcUUsRUFBQUYsSUFBT29HLEVBQUF2SyxLQUFjLFNBQUFxa0IsR0FBQW5nQixHQUFlLElBQUFDLEVBQUFELEVBQVEsR0FBQUEsRUFBQStQLFVBQUEsS0FBb0I5UCxFQUFBbVAsUUFBU25QLElBQUFtUCxXQUFZLENBQUssU0FBQW5QLEVBQUFtZ0IsV0FBQSxTQUFnQyxLQUFLbmdCLEVBQUFtUCxRQUFTLFVBQUFuUCxJQUFBbVAsUUFBQWdSLFdBQUEsU0FBNEMsV0FBQW5nQixFQUFBeU8sSUFBQSxJQUFxQixTQUFBMlIsR0FBQXJnQixHQUFlLElBQUFtZ0IsR0FBQW5nQixJQUFBc0UsRUFBQSxPQUN4TixTQUFBZ2MsR0FBQXRnQixHQUFlLElBQUFDLEVBQUFELEVBQUErUCxVQUFrQixJQUFBOVAsRUFBQSxZQUFBQSxFQUFBa2dCLEdBQUFuZ0IsS0FBQXNFLEVBQUEsV0FBQXJFLEVBQUEsS0FBQUQsRUFBd0QsUUFBQWxFLEVBQUFrRSxFQUFBakUsRUFBQWtFLElBQWlCLENBQUUsSUFBQUMsRUFBQXBFLEVBQUFzVCxPQUFBalAsRUFBQUQsSUFBQTZQLFVBQUEsS0FBb0MsSUFBQTdQLElBQUFDLEVBQUEsTUFBZ0IsR0FBQUQsRUFBQXFnQixRQUFBcGdCLEVBQUFvZ0IsTUFBQSxDQUFzQixRQUFBbmEsRUFBQWxHLEVBQUFxZ0IsTUFBa0JuYSxHQUFFLENBQUUsR0FBQUEsSUFBQXRLLEVBQUEsT0FBQXVrQixHQUFBbmdCLEdBQUFGLEVBQXdCLEdBQUFvRyxJQUFBckssRUFBQSxPQUFBc2tCLEdBQUFuZ0IsR0FBQUQsRUFBd0JtRyxJQUFBb2EsUUFBWWxjLEVBQUEsT0FBUyxHQUFBeEksRUFBQXNULFNBQUFyVCxFQUFBcVQsT0FBQXRULEVBQUFvRSxFQUFBbkUsRUFBQW9FLE1BQStCLENBQUtpRyxHQUFBLEVBQUssUUFBQUMsRUFBQW5HLEVBQUFxZ0IsTUFBa0JsYSxHQUFFLENBQUUsR0FBQUEsSUFBQXZLLEVBQUEsQ0FBVXNLLEdBQUEsRUFBS3RLLEVBQUFvRSxFQUFJbkUsRUFBQW9FLEVBQUksTUFBTSxHQUFBa0csSUFBQXRLLEVBQUEsQ0FBVXFLLEdBQUEsRUFBS3JLLEVBQUFtRSxFQUFJcEUsRUFBQXFFLEVBQUksTUFBTWtHLElBQUFtYSxRQUFZLElBQUFwYSxFQUFBLENBQU8sSUFBQUMsRUFBQWxHLEVBQUFvZ0IsTUFBY2xhLEdBQUUsQ0FBRSxHQUFBQSxJQUFBdkssRUFBQSxDQUFVc0ssR0FBQSxFQUFLdEssRUFBQXFFLEVBQUlwRSxFQUFBbUUsRUFBSSxNQUFNLEdBQUFtRyxJQUFBdEssRUFBQSxDQUFVcUssR0FBQSxFQUFLckssRUFBQW9FLEVBQUlyRSxFQUFBb0UsRUFBSSxNQUFNbUcsSUFBQW1hLFFBQVlwYSxHQUNyZjlCLEVBQUEsUUFBaUJ4SSxFQUFBaVUsWUFBQWhVLEdBQUF1SSxFQUFBLE9BQTBELE9BQTFCLElBQUF4SSxFQUFBNFMsS0FBQXBLLEVBQUEsT0FBMEJ4SSxFQUFBNlIsVUFBQTlILFVBQUEvSixFQUFBa0UsRUFBQUMsRUFBbUMsU0FBQXdnQixHQUFBemdCLEdBQXVCLEtBQVJBLEVBQUFzZ0IsR0FBQXRnQixJQUFRLFlBQWtCLFFBQUFDLEVBQUFELElBQWEsQ0FBRSxPQUFBQyxFQUFBeU8sS0FBQSxJQUFBek8sRUFBQXlPLElBQUEsT0FBQXpPLEVBQWlDLEdBQUFBLEVBQUFzZ0IsTUFBQXRnQixFQUFBc2dCLE1BQUFuUixPQUFBblAsTUFBQXNnQixVQUFzQyxDQUFLLEdBQUF0Z0IsSUFBQUQsRUFBQSxNQUFlLE1BQUtDLEVBQUF1Z0IsU0FBVyxDQUFFLElBQUF2Z0IsRUFBQW1QLFFBQUFuUCxFQUFBbVAsU0FBQXBQLEVBQUEsWUFBdUNDLElBQUFtUCxPQUFXblAsRUFBQXVnQixRQUFBcFIsT0FBQW5QLEVBQUFtUCxPQUEwQm5QLElBQUF1Z0IsU0FBYSxZQUN2RixJQUFBRSxHQUFBcGIsR0FBQWlPLFFBQWlCb04sY0FBQSxLQUFBQyxZQUFBLEtBQUFDLGNBQUEsT0FBdURDLEdBQUF4YixHQUFBaU8sUUFBZXdOLGNBQUEsU0FBQS9nQixHQUEwQix3QkFBQUEsSUFBQStnQixjQUFBbmpCLE9BQUFtakIsaUJBQWdFQyxHQUFBcEQsR0FBQXJLLFFBQWdCeUwsY0FBQSxPQUN0ZCxTQUFBaUMsR0FBQWpoQixHQUFlLElBQUFDLEVBQUFELEVBQUEyVSxRQUF1RixNQUF2RSxhQUFBM1UsRUFBQSxLQUFBQSxJQUFBa2hCLFdBQUEsS0FBQWpoQixJQUFBRCxFQUFBLElBQUFBLEVBQUFDLEVBQXdELEtBQUFELE1BQUEsSUFBZSxJQUFBQSxHQUFBLEtBQUFBLElBQUEsRUFDdEcsSUFBQW1oQixJQUFRQyxJQUFBLFNBQUFDLFNBQUEsSUFBQUMsS0FBQSxZQUFBQyxHQUFBLFVBQUFDLE1BQUEsYUFBQUMsS0FBQSxZQUFBQyxJQUFBLFNBQUFDLElBQUEsS0FBQUMsS0FBQSxjQUFBQyxLQUFBLGNBQUFDLE9BQUEsYUFBQUMsZ0JBQUEsZ0JBQTJNQyxJQUFLQyxFQUFBLFlBQUFDLEVBQUEsTUFBQUMsR0FBQSxRQUFBQyxHQUFBLFFBQUFDLEdBQUEsUUFBQUMsR0FBQSxVQUFBQyxHQUFBLE1BQUFDLEdBQUEsUUFBQUMsR0FBQSxXQUFBQyxHQUFBLFNBQUFDLEdBQUEsSUFBQUMsR0FBQSxTQUFBQyxHQUFBLFdBQUFDLEdBQUEsTUFBQUMsR0FBQSxPQUFBQyxHQUFBLFlBQUFDLEdBQUEsVUFBQUMsR0FBQSxhQUFBQyxHQUFBLFlBQUFDLEdBQUEsU0FBQUMsR0FBQSxTQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQ3hOQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxNQUFBQyxJQUFBLE1BQUFDLElBQUEsTUFBQUMsSUFBQSxVQUFBQyxJQUFBLGFBQUFDLElBQUEsUUFBcUhDLEdBQUF6RyxHQUFBckssUUFBZXZXLElBQUEsU0FBQWdELEdBQWdCLEdBQUFBLEVBQUFoRCxJQUFBLENBQVUsSUFBQWlELEVBQUFraEIsR0FBQW5oQixFQUFBaEQsTUFBQWdELEVBQUFoRCxJQUF1QixvQkFBQWlELEVBQUEsT0FBQUEsRUFBK0IsbUJBQUFELEVBQUEwRyxLQUFBLE1BQUExRyxFQUFBaWhCLEdBQUFqaEIsSUFBQSxRQUFBM0IsT0FBQUcsYUFBQXdCLEdBQUEsWUFBQUEsRUFBQTBHLE1BQUEsVUFBQTFHLEVBQUEwRyxLQUFBc2IsR0FBQWhpQixFQUFBMlUsVUFBQSxtQkFBZ0oyUCxTQUFBLEtBQUFwUCxRQUFBLEtBQUEySixTQUFBLEtBQUExSixPQUFBLEtBQUFDLFFBQUEsS0FBQW1QLE9BQUEsS0FBQUMsT0FBQSxLQUFBcEcsaUJBQUFDLEdBQUE2QyxTQUFBLFNBQUFsaEIsR0FBb0ksbUJBQ3hlQSxFQUFBMEcsS0FBQXVhLEdBQUFqaEIsR0FBQSxHQUFlMlUsUUFBQSxTQUFBM1UsR0FBcUIsa0JBQUFBLEVBQUEwRyxNQUFBLFVBQUExRyxFQUFBMEcsS0FBQTFHLEVBQUEyVSxRQUFBLEdBQXVESyxNQUFBLFNBQUFoVixHQUFtQixtQkFBQUEsRUFBQTBHLEtBQUF1YSxHQUFBamhCLEdBQUEsWUFBQUEsRUFBQTBHLE1BQUEsVUFBQTFHLEVBQUEwRyxLQUFBMUcsRUFBQTJVLFFBQUEsS0FBa0Y4UCxHQUFBbkcsR0FBQS9LLFFBQWdCbVIsYUFBQSxPQUFrQkMsR0FBQS9HLEdBQUFySyxRQUFnQnFSLFFBQUEsS0FBQUMsY0FBQSxLQUFBQyxlQUFBLEtBQUEzUCxPQUFBLEtBQUFDLFFBQUEsS0FBQUYsUUFBQSxLQUFBMkosU0FBQSxLQUFBVCxpQkFBQUMsS0FBNEgwRyxHQUFBemYsR0FBQWlPLFFBQWVzSCxhQUFBLEtBQUErRixZQUFBLEtBQUFDLGNBQUEsT0FBc0RtRSxHQUFBMUcsR0FBQS9LLFFBQWdCMFIsT0FBQSxTQUFBamxCLEdBQW1CLGlCQUFBQSxJQUFBaWxCLE9BQUEsZ0JBQ3RkamxCLEtBQUFrbEIsWUFBQSxHQUFtQkMsT0FBQSxTQUFBbmxCLEdBQW9CLGlCQUFBQSxJQUFBbWxCLE9BQUEsZ0JBQUFubEIsS0FBQW9sQixZQUFBLGVBQUFwbEIsS0FBQXFsQixXQUFBLEdBQThGQyxPQUFBLEtBQUFDLFVBQUEsT0FBNEJDLEtBQUEsa0JBQUFyVSxHQUFBLGlCQUFBQyxHQUFBLHVCQUFBQyxHQUFBLHFSQUNqSyxzZkFDQSxnR0FBQUMsR0FBQSwwREFBQW1VLE1BQW1LQyxNQUFPLFNBQUFDLEdBQUEzbEIsRUFBQUMsR0FBaUIsSUFBQW5FLEVBQUFrRSxFQUFBLEdBQWtCakUsRUFBQSxPQUFQaUUsSUFBQSxJQUFPLEdBQUFnYixjQUFBaGIsRUFBQTBLLE1BQUEsSUFBMkN6SyxHQUFHdUwseUJBQXlCNEksUUFBQXJZLEVBQUFzWSxTQUFBdFksRUFBQSxXQUErQjhQLGNBQUEvUCxHQUFBOHBCLGNBQUEzbEIsR0FBbUN3bEIsR0FBQXpsQixHQUFBQyxFQUFReWxCLEdBQUE1cEIsR0FBQW1FLElBQzlWLDZmQUNBLGtPQUFBcEIsUUFBQSxTQUFBbUIsR0FBdVAybEIsR0FBQTNsQixHQUFBLEtBQVd3bEIsR0FBQTNtQixRQUFBLFNBQUFtQixHQUF1QjJsQixHQUFBM2xCLEdBQUEsS0FDelIsSUFBQTZsQixJQUFRdmEsV0FBQW1hLEdBQUFLLCtCQUFBLFNBQUE5bEIsR0FBaUUsaUJBQVJBLEVBQUEwbEIsR0FBQTFsQixNQUFRLElBQUFBLEVBQUE0bEIsZUFBd0N2YSxjQUFBLFNBQUFyTCxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBaUMsSUFBQW1FLEVBQUF3bEIsR0FBQTFsQixHQUFZLElBQUFFLEVBQUEsWUFBa0IsT0FBQUYsR0FBVSxzQkFBQWloQixHQUFBbmxCLEdBQUEsWUFBeUMsMEJBQUFrRSxFQUFBcWtCLEdBQWlDLE1BQU0sdUJBQUFya0IsRUFBQWdoQixHQUE4QixNQUFNLG1CQUFBbGxCLEVBQUFnakIsT0FBQSxZQUF5Qyw4R0FBQTllLEVBQUFzZSxHQUEwSCxNQUFNLGtIQUFBdGUsRUFDdmR5a0IsR0FBRyxNQUFNLGtFQUFBemtCLEVBQUEya0IsR0FBMkUsTUFBTSxLQUFBeFQsR0FBQSxLQUFBQyxHQUFBLEtBQUFDLEdBQUFyUixFQUFBMGdCLEdBQTZCLE1BQU0sS0FBQXBQLEdBQUF0UixFQUFBK2tCLEdBQWEsTUFBTSxhQUFBL2tCLEVBQUE0ZCxHQUFtQixNQUFNLFlBQUE1ZCxFQUFBZ2xCLEdBQWtCLE1BQU0saUNBQUFobEIsRUFBQThnQixHQUF5QyxNQUFNLDRKQUFBOWdCLEVBQUFtZixHQUF5SyxNQUFNLFFBQUFuZixFQUFBc0YsR0FBeUMsT0FBTnVLLEdBQXZCNVAsRUFBQUQsRUFBQW1ULFVBQUFqVCxFQUFBRCxFQUFBbkUsRUFBQUMsSUFBNkJrRSxJQUFVOGxCLEdBQUFGLEdBQUFDLCtCQUNsZEUsTUFBTSxTQUFBQyxHQUFBam1CLEdBQWUsSUFBQUMsRUFBQUQsRUFBQWttQixXQUFtQixHQUFHLElBQUFqbUIsRUFBQSxDQUFPRCxFQUFBbW1CLFVBQUFuakIsS0FBQS9DLEdBQW9CLE1BQU0sSUFBQW5FLEVBQU0sSUFBQUEsRUFBQW1FLEVBQVFuRSxFQUFBc1QsUUFBU3RULElBQUFzVCxPQUF1RCxLQUEzQ3RULEVBQUEsSUFBQUEsRUFBQTRTLElBQUEsS0FBQTVTLEVBQUE2UixVQUFBeVksZUFBMkMsTUFBWXBtQixFQUFBbW1CLFVBQUFuakIsS0FBQS9DLEdBQW9CQSxFQUFBdU8sRUFBQTFTLFNBQVFtRSxHQUFTLElBQUFuRSxFQUFBLEVBQVFBLEVBQUFrRSxFQUFBbW1CLFVBQUF2bUIsT0FBcUI5RCxJQUFBbUUsRUFBQUQsRUFBQW1tQixVQUFBcnFCLEdBQUFnUyxFQUFBOU4sRUFBQXFtQixhQUFBcG1CLEVBQUFELEVBQUEwUyxZQUFBa0YsR0FBQTVYLEVBQUEwUyxjQUEwRSxJQUFBNFQsSUFBQSxFQUFVLFNBQUFDLEdBQUF2bUIsR0FBZXNtQixLQUFBdG1CLEVBQU8sU0FBQThGLEdBQUE5RixFQUFBQyxHQUFnQixJQUFBQSxFQUFBLFlBQWtCLElBQUFuRSxHQUFBaXFCLEdBQUEvbEIsR0FBQXdtQixHQUFBQyxJQUFBeHBCLEtBQUEsS0FBQStDLEdBQWlDQyxFQUFBeW1CLGlCQUFBMW1CLEVBQUFsRSxHQUFBLEdBQ3JaLFNBQUE2cUIsR0FBQTNtQixFQUFBQyxHQUFpQixJQUFBQSxFQUFBLFlBQWtCLElBQUFuRSxHQUFBaXFCLEdBQUEvbEIsR0FBQXdtQixHQUFBQyxJQUFBeHBCLEtBQUEsS0FBQStDLEdBQWlDQyxFQUFBeW1CLGlCQUFBMW1CLEVBQUFsRSxHQUFBLEdBQTJCLFNBQUEwcUIsR0FBQXhtQixFQUFBQyxHQUFpQnFXLEdBQUFtUSxHQUFBem1CLEVBQUFDLEdBQVcsU0FBQXdtQixHQUFBem1CLEVBQUFDLEdBQWlCLEdBQUFxbUIsR0FBQSxDQUFPLElBQUF4cUIsRUFBQThiLEdBQUEzWCxHQUEyRSxHQUF2RCxRQUFSbkUsRUFBQTBTLEVBQUExUyxLQUFRLGlCQUFBQSxFQUFBNFMsS0FBQSxJQUFBeVIsR0FBQXJrQixPQUFBLE1BQXVEa3FCLEdBQUFwbUIsT0FBQSxDQUFjLElBQUE3RCxFQUFBaXFCLEdBQUFoZixNQUFlakwsRUFBQXNxQixhQUFBcm1CLEVBQWlCakUsRUFBQTJXLFlBQUF6UyxFQUFnQmxFLEVBQUFtcUIsV0FBQXBxQixFQUFla0UsRUFBQWpFLE9BQUlpRSxHQUFRcW1CLGFBQUFybUIsRUFBQTBTLFlBQUF6UyxFQUFBaW1CLFdBQUFwcUIsRUFBQXFxQixjQUF3RCxJQUFJMVAsR0FBQXdQLEdBQUFqbUIsR0FBUyxRQUFRQSxFQUFBcW1CLGFBQUEsS0FBQXJtQixFQUFBMFMsWUFBQSxLQUFBMVMsRUFBQWttQixXQUFBLEtBQUFsbUIsRUFBQW1tQixVQUFBdm1CLE9BQUEsS0FBQW9tQixHQUFBcG1CLFFBQUFvbUIsR0FBQWhqQixLQUFBaEQsS0FDcFksSUFBQTRtQixJQUFRQyxlQUFlLE9BQUFQLElBQVVRLFdBQUFQLEdBQUFRLFVBQUEsV0FBb0MsT0FBQVQsSUFBVVUsaUJBQUFsaEIsR0FBQW1oQixrQkFBQU4sR0FBQU8sY0FBQVQsSUFBMERVLE1BQU1DLEdBQUEsRUFBQUMsR0FBQSx3QkFBQWhaLEtBQUFDLFVBQUE1RCxNQUFBLEdBQXlELFNBQUE0YyxHQUFBdG5CLEdBQXFGLE9BQXRFN0QsT0FBQWtCLFVBQUFDLGVBQUExQixLQUFBb0UsRUFBQXFuQixNQUFBcm5CLEVBQUFxbkIsSUFBQUQsS0FBQUQsR0FBQW5uQixFQUFBcW5CLFNBQXNFRixHQUFBbm5CLEVBQUFxbkIsS0FBaUIsU0FBQUUsR0FBQXZuQixHQUFlLEtBQUtBLEtBQUF3bkIsWUFBZ0J4bkIsSUFBQXduQixXQUFnQixPQUFBeG5CLEVBQ2xXLFNBQUF5bkIsR0FBQXpuQixFQUFBQyxHQUFpQixJQUFnQmxFLEVBQWhCRCxFQUFBeXJCLEdBQUF2bkIsR0FBZ0IsSUFBSkEsRUFBQSxFQUFjbEUsR0FBRSxDQUFFLE9BQUFBLEVBQUFpYyxTQUFBLENBQTRDLEdBQXpCaGMsRUFBQWlFLEVBQUFsRSxFQUFBNHJCLFlBQUE5bkIsT0FBeUJJLEdBQUFDLEdBQUFsRSxHQUFBa0UsRUFBQSxPQUFxQjBuQixLQUFBN3JCLEVBQUE4ckIsT0FBQTNuQixFQUFBRCxHQUFtQkEsRUFBQWpFLEVBQUlpRSxFQUFBLENBQUcsS0FBS2xFLEdBQUUsQ0FBRSxHQUFBQSxFQUFBK3JCLFlBQUEsQ0FBa0IvckIsSUFBQStyQixZQUFnQixNQUFBN25CLEVBQVFsRSxJQUFBMlMsV0FBZTNTLE9BQUEsRUFBU0EsRUFBQXlyQixHQUFBenJCLElBQVMsU0FBQWdzQixHQUFBOW5CLEdBQWUsSUFBQUMsRUFBQUQsS0FBQTJYLFVBQUEzWCxFQUFBMlgsU0FBQXJILGNBQThDLE9BQUFyUSxJQUFBLFVBQUFBLElBQUEsU0FBQUQsRUFBQTBHLE1BQUEsV0FBQTFHLEVBQUEwRyxNQUFBLFFBQUExRyxFQUFBMEcsTUFBQSxRQUFBMUcsRUFBQTBHLE1BQUEsYUFBQTFHLEVBQUEwRyxPQUFBLGFBQUF6RyxHQUFBLFNBQUFELEVBQUErbkIsaUJBQzNSLElBQUFDLEdBQUFuc0IsRUFBQWtWLFdBQUEsaUJBQUFwTixVQUFBLElBQUFBLFNBQUFtUSxhQUFBbVUsSUFBNkVDLFFBQVExYyx5QkFBeUI0SSxRQUFBLFdBQUFDLFNBQUEsbUJBQThDeEksYUFBQSx5RUFBQWpOLE1BQUEsT0FBbUd1cEIsR0FBQSxLQUFBQyxHQUFBLEtBQUFDLEdBQUEsS0FBQUMsSUFBQSxFQUMvUCxTQUFBQyxHQUFBdm9CLEVBQUFDLEdBQWlCLEdBQUFxb0IsSUFBQSxNQUFBSCxTQUFBbGUsSUFBQSxZQUF1QyxJQUFBbk8sRUFBQXFzQixHQUFrUCxNQUF6TyxtQkFBQXJzQixHQUFBZ3NCLEdBQUFoc0IsTUFBK0Iwc0IsTUFBQTFzQixFQUFBMnNCLGVBQUFDLElBQUE1c0IsRUFBQTZzQixjQUEwQy9xQixPQUFBZ3JCLGFBQUE5c0IsR0FBaUQrc0IsWUFBakQvc0IsRUFBQThCLE9BQUFnckIsZ0JBQWlEQyxXQUFBQyxhQUFBaHRCLEVBQUFndEIsYUFBQUMsVUFBQWp0QixFQUFBaXRCLFVBQUFDLFlBQUFsdEIsRUFBQWt0QixhQUFvR2x0QixPQUFBLEVBQVd1c0IsSUFBQW5lLEVBQUFtZSxHQUFBdnNCLEdBQUEsTUFBQXVzQixHQUFBdnNCLEdBQUFrRSxFQUFBc0YsR0FBQTZOLFVBQUE4VSxHQUFBQyxPQUFBRSxHQUFBcG9CLEVBQUFDLElBQUF5RyxLQUFBLFNBQUExRyxFQUFBZCxPQUFBaXBCLEdBQUF0WSxHQUFBN1AsTUFDMVMsSUFBQWlwQixJQUFRM2QsV0FBQTJjLEdBQUE1YyxjQUFBLFNBQUFyTCxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBOEMsSUFBQW9FLEVBQUFELEVBQUFuRSxFQUFBNkIsU0FBQTdCLElBQUE0SCxTQUFBLElBQUE1SCxFQUFBZ2MsU0FBQWhjLElBQUF1Z0IsY0FBaUUsS0FBQW5jLEdBQUFELEdBQUEsQ0FBWUYsRUFBQSxDQUFHRSxFQUFBb25CLEdBQUFwbkIsR0FBUUMsRUFBQXlMLEVBQUFzZCxTQUFjLFFBQUE5aUIsRUFBQSxFQUFZQSxFQUFBakcsRUFBQVAsT0FBV3dHLElBQUEsQ0FBSyxJQUFBQyxFQUFBbEcsRUFBQWlHLEdBQVcsSUFBQWxHLEVBQUE1QyxlQUFBK0ksS0FBQW5HLEVBQUFtRyxHQUFBLENBQWdDbkcsR0FBQSxFQUFLLE1BQUFGLEdBQVNFLEdBQUEsRUFBS0MsR0FBQUQsRUFBSyxHQUFBQyxFQUFBLFlBQWtDLE9BQWpCRCxFQUFBRCxFQUFBME8sRUFBQTFPLEdBQUFyQyxPQUFpQm9DLEdBQVUsYUFBQTBYLEdBQUF4WCxJQUFBLFNBQUFBLEVBQUE2bkIsbUJBQUFJLEdBQUFqb0IsRUFBQWtvQixHQUFBbm9CLEVBQUFvb0IsR0FBQSxNQUFvRSxNQUFNLFdBQUFBLEdBQUFELEdBQUFELEdBQUEsS0FBMEIsTUFBTSxnQkFBQUcsSUFBQSxFQUF1QixNQUFNLHVDQUFBQSxJQUFBLEVBQUFDLEdBQUF6c0IsRUFBQUMsR0FBdUQseUJBQUFpc0IsR0FBQSxNQUNyZSxpQ0FBQU8sR0FBQXpzQixFQUFBQyxHQUEyQyxjQUFjMFIsRUFBQW5CLHVCQUFBLHlJQUFBMU4sTUFBQSxNQUErSzROLEVBQUFxQyxFQUFBSyw2QkFBbUN6QyxFQUFBb0MsRUFBQUcsb0JBQTBCdEMsRUFBQW1DLEVBQUFJLG9CQUEwQnhCLEVBQUFsQiwwQkFBNkI0YyxrQkFBQXRELEdBQUF1RCxzQkFBQXBKLEdBQUFxSixrQkFBQTNMLEdBQUE0TCxrQkFBQUwsR0FBQU0sdUJBQUF4VSxLQUM1VixJQUFBeVUsR0FBQSxtQkFBQUMsaURBQUEsRUFBQUMsR0FBQXBYLEtBQUFxWCxHQUFBQyxXQUFBQyxHQUFBQyxhQUFBQyxRQUFBLEVBQThILG9CQUFBQyxhQUFBLG1CQUFBQSxZQUFBelgsSUFBQSxDQUF1RSxJQUFBMFgsR0FBQUQsWUFBbUJELEdBQUEsV0FBYyxPQUFBRSxHQUFBMVgsWUFBaUJ3WCxHQUFBLFdBQW1CLE9BQUFMLEdBQUFuWCxPQUFpQixJQUFBMlgsUUFBQSxFQUFBQyxRQUFBLEVBQzNSLEdBQUF0dUIsRUFBQWtWLFVBQUEsQ0FBZ0IsSUFBQXFaLEdBQUEsbUJBQUFaLE1BQUEsV0FBNENsbEIsRUFBQSxRQUFTeUIsR0FBQSxLQUFBc2tCLEdBQUEsS0FBQUMsSUFBQSxFQUFBQyxJQUFBLEVBQUFDLElBQUEsRUFBQUMsR0FBQSxFQUFBQyxHQUFBLEdBQUFDLEdBQUEsR0FBQUMsSUFBdURDLFlBQUEsRUFBQUMsY0FBQSxXQUF1QyxJQUFBOXFCLEVBQUF5cUIsR0FBQVYsS0FBYyxTQUFBL3BCLElBQUEsSUFBZ0IrcUIsR0FBQSxTQUFBL3FCLEVBQUFDLEdBQWtCLElBQUFuRSxFQUFBa0UsRUFBQWdyQixrQkFBQWp2QixHQUFBLEVBQStCLElBQUlELEVBQUFtRSxHQUFBbEUsR0FBQSxFQUFVLFFBQVFvdUIsR0FBQW5xQixHQUFBakUsSUFBQXd1QixJQUFBLEVBQUEzc0IsT0FBQXF0QixZQUFBQyxHQUFBLFFBQTZDQSxHQUFBLHVCQUFBN2MsS0FBQUMsU0FBQTFHLFNBQUEsSUFBQThDLE1BQUEsR0FBK0Q5TSxPQUFBOG9CLGlCQUFBLG1CQUFBMW1CLEdBQThDLEdBQUFBLEVBQUFiLFNBQUF2QixRQUFBb0MsRUFBQXlULE9BQUF5WCxLQUFBWCxJQUFBLFNBQUF4a0IsSUFBQSxDQUFxRCxVQUFBQSxHQUFBLENBQWEsSUFBQTlGLEVBQUE4cEIsS0FBVyxVQUMvZU8sT0FBQXJxQixHQUFBLENBQVdELEdBQUEsRUFBSyxRQUFBbEUsS0FBQUMsRUFBQWdLLEdBQWlCLE9BQUFoSyxHQUFTLENBQUUsSUFBQW1FLEVBQUFuRSxFQUFBb3ZCLGFBQW9CLElBQUFqckIsTUFBQUQsRUFBQW5FLEVBQUFrSCxLQUFBakgsSUFBQSxJQUFBbUUsS0FBQSxJQUFBRixHQUFBRSxFQUFBRixPQUFBRSxHQUFvRG5FLElBQUF5TCxLQUFTLEtBQUExTCxFQUFBOEQsT0FBQSxJQUFBZ3JCLEdBQUFDLFlBQUEsRUFBQTVxQixFQUFBLEVBQUFsRSxFQUFBRCxFQUFBOEQsT0FBa0RLLEVBQUFsRSxFQUFJa0UsSUFBQThxQixHQUFBanZCLEVBQUFtRSxHQUFBMnFCLElBQWdCTixHQUFBdHFCLEdBQU0sSUFBQUEsRUFBQStwQixLQUFXLEVBQUFVLEdBQUF6cUIsR0FBQSxPQUFBK0YsSUFBaUIvRixFQUFBK0YsR0FBQTZrQixHQUFBQyxZQUFBLEVBQUFFLEdBQUEvcUIsRUFBQTRxQixJQUFBNXFCLEVBQUErcEIsS0FBc0MsT0FBQWhrQixJQUFBeWtCLFNBQUEsRUFBQUosR0FBQWdCLFFBQThCLEdBQUssSUFBQUEsR0FBQSxTQUFBcHJCLEdBQW1Cd3FCLElBQUEsRUFBTSxJQUFBdnFCLEVBQUFELEVBQUF5cUIsR0FBQUUsR0FBYzFxQixFQUFBMHFCLElBQUFELEdBQUFDLElBQUEsRUFBQTFxQixNQUFBLEdBQUEwcUIsR0FBQTFxQixFQUFBeXFCLE1BQUF6cUIsR0FBQXlxQixHQUFBenFCLEVBQTJDd3FCLEdBQUF6cUIsRUFBQTJxQixHQUFRSixTQUFBLEVBQUEzc0IsT0FBQXF0QixZQUFBQyxHQUFBLE9BQXdDaEIsR0FBQSxTQUFBbHFCLEVBQUFDLEdBQWlCLElBQUFuRSxHQUFBLEVBQ3RSLE9BRCtSLE1BQUFtRSxHQUFBLGlCQUFBQSxFQUFBb3JCLFVBQUF2dkIsRUFBQWl1QixLQUMxYzlwQixFQUFBb3JCLFdBQVcsSUFBQWYsS0FBQSxJQUFBeHVCLEtBQUF3dUIsU0FBQXh1QixHQUE4QmtFLEdBQUdnckIsa0JBQUFockIsRUFBQW1yQixZQUFBcnZCLEVBQUF3dkIsS0FBQSxLQUFBOWpCLEtBQUEsTUFBdUQsT0FBQXpCLE1BQUEvRixFQUFBLFFBQUFDLEVBQUFELEVBQUFzckIsS0FBQWpCLE1BQUFwcUIsRUFBQXVILEtBQUF4SCxHQUFnRHFxQixHQUFBcnFCLEVBQUt3cUIsU0FBQSxFQUFBSixHQUFBZ0IsS0FBbUJwckIsR0FBVW1xQixHQUFBLFNBQUFucUIsR0FBZSxVQUFBQSxFQUFBc3JCLE1BQUF2bEIsS0FBQS9GLEVBQUEsQ0FBeUIsSUFBQUMsRUFBQUQsRUFBQXdILEtBQUExTCxFQUFBa0UsRUFBQXNyQixLQUFzQnRyQixFQUFBd0gsS0FBQSxLQUFZeEgsRUFBQXNyQixLQUFBLEtBQVksT0FBQXJyQixFQUFBLE9BQUFuRSxLQUFBMEwsS0FBQXZILElBQUFxckIsS0FBQXh2QixJQUFBbUUsRUFBQXFyQixLQUFBLEtBQUF2bEIsR0FBQTlGLEdBQUEsT0FBQW5FLEtBQUEwTCxLQUFBLEtBQUE2aUIsR0FBQXZ1QixHQUFBdXVCLEdBQUF0a0IsR0FBQSxXQUFnRyxDQUFLLElBQUF3bEIsR0FBQSxJQUFBQyxJQUFldEIsR0FBQSxTQUFBbHFCLEdBQWUsSUFBQUMsR0FBTytxQixrQkFBQWhyQixFQUFBbXJCLFlBQUEsRUFBQTNqQixLQUFBLEtBQUE4akIsS0FBQSxNQUFzRHh2QixFQUFBNnRCLEdBQUEsV0FBaUIzcEIsR0FBRzhxQixjQUFBLFdBQXlCLE9BQUFXLEtBQ3hmWixZQUFBLE1BQThCLE9BQVpVLEdBQUFqVCxJQUFBdFksRUFBQWxFLEdBQVltRSxHQUFVa3FCLEdBQUEsU0FBQW5xQixHQUFlLElBQUFDLEVBQUFzckIsR0FBQWp2QixJQUFBMEQsRUFBQWdyQixtQkFBa0NPLEdBQUFHLE9BQUExckIsR0FBYTZwQixHQUFBNXBCLElBQXNJLFNBQUEwckIsR0FBQTNyQixFQUFBQyxHQUEyRSxPQUExREQsRUFBQXpDLEdBQUsrSSxjQUFBLEdBQWdCckcsSUFBSUEsRUFBekssU0FBQUQsR0FBZSxJQUFBQyxFQUFBLEdBQXVHLE9BQTlGK0osRUFBQS9CLFNBQUFwSixRQUFBbUIsRUFBQSxTQUFBQSxHQUFrQyxNQUFBQSxHQUFBLGlCQUFBQSxHQUFBLGlCQUFBQSxJQUFBQyxHQUFBRCxLQUE0REMsRUFBbUQyckIsQ0FBQTNyQixFQUFBcUcsYUFBQXRHLEVBQUFzRyxTQUFBckcsR0FBaUNELEVBQ3ZULFNBQUE2ckIsR0FBQTdyQixFQUFBQyxFQUFBbkUsRUFBQUMsR0FBaUMsR0FBWmlFLElBQUE4ckIsUUFBWTdyQixFQUFBLENBQU1BLEtBQUssUUFBQUMsRUFBQSxFQUFZQSxFQUFBcEUsRUFBQThELE9BQVdNLElBQUFELEVBQUEsSUFBQW5FLEVBQUFvRSxLQUFBLEVBQW1CLElBQUFwRSxFQUFBLEVBQVFBLEVBQUFrRSxFQUFBSixPQUFXOUQsSUFBQW9FLEVBQUFELEVBQUEzQyxlQUFBLElBQUEwQyxFQUFBbEUsR0FBQVksT0FBQXNELEVBQUFsRSxHQUFBaXdCLFdBQUE3ckIsSUFBQUYsRUFBQWxFLEdBQUFpd0IsU0FBQTdyQixNQUFBbkUsSUFBQWlFLEVBQUFsRSxHQUFBa3dCLGlCQUFBLE9BQTRHLENBQW1CLElBQWRsd0IsRUFBQSxHQUFBQSxFQUFPbUUsRUFBQSxLQUFPQyxFQUFBLEVBQVFBLEVBQUFGLEVBQUFKLE9BQVdNLElBQUEsQ0FBSyxHQUFBRixFQUFBRSxHQUFBeEQsUUFBQVosRUFBaUUsT0FBOUNrRSxFQUFBRSxHQUFBNnJCLFVBQUEsT0FBaUJod0IsSUFBQWlFLEVBQUFFLEdBQUE4ckIsaUJBQUEsSUFBb0MsT0FBQS9yQixHQUFBRCxFQUFBRSxHQUFBME4sV0FBQTNOLEVBQUFELEVBQUFFLElBQWtDLE9BQUFELE1BQUE4ckIsVUFBQSxJQUMxVyxTQUFBRSxHQUFBanNCLEVBQUFDLEdBQWlCLElBQUFuRSxFQUFBbUUsRUFBQXZELE1BQWNzRCxFQUFBNGIsZUFBaUJJLGFBQUEsTUFBQWxnQixJQUFBbUUsRUFBQTBiLGFBQUF1USxjQUFBanNCLEVBQUFrc0IsVUFBZ0UsU0FBQUMsR0FBQXBzQixFQUFBQyxHQUFnRSxPQUEvQyxNQUFBQSxFQUFBb3NCLHlCQUFBL25CLEVBQUEsTUFBK0MvRyxLQUFXMEMsR0FBSXZELFdBQUEsRUFBQWlmLGtCQUFBLEVBQUFyVixTQUFBLEdBQUF0RyxFQUFBNGIsY0FBQUksZUFBNEUsU0FBQXNRLEdBQUF0c0IsRUFBQUMsR0FBaUIsSUFBQW5FLEVBQUFtRSxFQUFBdkQsTUFBYyxNQUFBWixNQUFBbUUsRUFBQTBiLGFBQUEsT0FBQTFiLElBQUFxRyxZQUFBLE1BQUF4SyxHQUFBd0ksRUFBQSxNQUFBaUMsTUFBQWdCLFFBQUF0SCxLQUFBLEdBQUFBLEVBQUFMLFFBQUEwRSxFQUFBLE1BQUFyRSxJQUFBLElBQUFuRSxFQUFBLEdBQUFtRSxHQUFBLE1BQUFuRSxNQUFBLEtBQXdKa0UsRUFBQTRiLGVBQWlCSSxhQUFBLEdBQUFsZ0IsR0FDbmQsU0FBQXl3QixHQUFBdnNCLEVBQUFDLEdBQWlCLElBQUFuRSxFQUFBbUUsRUFBQXZELE1BQWMsTUFBQVosT0FBQSxHQUFBQSxLQUFBa0UsRUFBQXRELFFBQUFzRCxFQUFBdEQsTUFBQVosR0FBQSxNQUFBbUUsRUFBQTBiLGVBQUEzYixFQUFBMmIsYUFBQTdmLElBQW9GLE1BQUFtRSxFQUFBMGIsZUFBQTNiLEVBQUEyYixhQUFBMWIsRUFBQTBiLGNBQXNELFNBQUE2USxHQUFBeHNCLEdBQWUsSUFBQUMsRUFBQUQsRUFBQTBuQixZQUFvQnpuQixJQUFBRCxFQUFBNGIsY0FBQUksZUFBQWhjLEVBQUF0RCxNQUFBdUQsR0FBOEMsSUFBQXdzQixJQUFRQyxLQUFBLCtCQUFBQyxPQUFBLHFDQUFBQyxJQUFBLDhCQUNsUSxTQUFBQyxHQUFBN3NCLEdBQWUsT0FBQUEsR0FBVSw2Q0FBOEMsc0RBQXVELDhDQUE4QyxTQUFBOHNCLEdBQUE5c0IsRUFBQUMsR0FBaUIsYUFBQUQsR0FBQSxpQ0FBQUEsRUFBQTZzQixHQUFBNXNCLEdBQUEsK0JBQUFELEdBQUEsa0JBQUFDLEVBQUEsK0JBQUFELEVBQzdMLElBQUErc0IsUUFBQSxFQUFBQyxHQUFBLFNBQUFodEIsR0FBNkIsMEJBQUFpdEIsYUFBQUMsd0JBQUEsU0FBQWp0QixFQUFBbkUsRUFBQUMsRUFBQW1FLEdBQWtGK3NCLE1BQUFDLHdCQUFBLFdBQXlDLE9BQUFsdEIsRUFBQUMsRUFBQW5FLE1BQW9Ca0UsRUFBNUssQ0FBK0ssU0FBQUEsRUFBQUMsR0FBZSxHQUFBRCxFQUFBbXRCLGVBQUFWLEdBQUFHLEtBQUEsY0FBQTVzQixJQUFBb3RCLFVBQUFudEIsTUFBMEQsQ0FBMEUsS0FBckU4c0IsT0FBQXBwQixTQUFBTixjQUFBLFFBQXFDK3BCLFVBQUEsUUFBQW50QixFQUFBLFNBQWdDQSxFQUFBOHNCLEdBQUF2RixXQUFvQnhuQixFQUFBd25CLFlBQWF4bkIsRUFBQXF0QixZQUFBcnRCLEVBQUF3bkIsWUFBNkIsS0FBS3ZuQixFQUFBdW5CLFlBQWF4bkIsRUFBQXN0QixZQUFBcnRCLEVBQUF1bkIsZUFDbFosU0FBQStGLEdBQUF2dEIsRUFBQUMsR0FBaUIsR0FBQUEsRUFBQSxDQUFNLElBQUFuRSxFQUFBa0UsRUFBQXduQixXQUFtQixHQUFBMXJCLE9BQUFrRSxFQUFBd3RCLFdBQUEsSUFBQTF4QixFQUFBaWMsU0FBcUQsWUFBZGpjLEVBQUEyeEIsVUFBQXh0QixHQUFzQkQsRUFBQTBuQixZQUFBem5CLEVBQ3ZHLElBQUF5dEIsSUFBUUMseUJBQUEsRUFBQUMsbUJBQUEsRUFBQUMsa0JBQUEsRUFBQUMsa0JBQUEsRUFBQUMsU0FBQSxFQUFBQyxjQUFBLEVBQUFDLGlCQUFBLEVBQUFDLGFBQUEsRUFBQUMsU0FBQSxFQUFBQyxNQUFBLEVBQUFDLFVBQUEsRUFBQUMsY0FBQSxFQUFBQyxZQUFBLEVBQUFDLGNBQUEsRUFBQUMsV0FBQSxFQUFBQyxTQUFBLEVBQUFDLFlBQUEsRUFBQUMsYUFBQSxFQUFBQyxjQUFBLEVBQUFDLFlBQUEsRUFBQUMsZUFBQSxFQUFBQyxnQkFBQSxFQUFBQyxpQkFBQSxFQUFBQyxZQUFBLEVBQUFDLFdBQUEsRUFBQUMsWUFBQSxFQUFBQyxTQUFBLEVBQUFDLE9BQUEsRUFBQUMsU0FBQSxFQUFBQyxTQUFBLEVBQUFDLFFBQUEsRUFBQUMsUUFBQSxFQUFBQyxNQUFBLEVBQUFDLGFBQUEsRUFBQUMsY0FBQSxFQUNSQyxhQUFBLEVBQUFDLGlCQUFBLEVBQUFDLGtCQUFBLEVBQUFDLGtCQUFBLEVBQUFDLGVBQUEsRUFBQUMsYUFBQSxHQUEwR0MsSUFBQSx5QkFDMUcsU0FBQUMsR0FBQXJ3QixFQUFBQyxHQUEyQixRQUFBbkUsS0FBVmtFLElBQUFnUixNQUFVL1EsRUFBQSxHQUFBQSxFQUFBM0MsZUFBQXhCLEdBQUEsQ0FBdUMsSUFBQUMsRUFBQSxJQUFBRCxFQUFBcVAsUUFBQSxNQUEwQmpMLEVBQUFwRSxFQUFRcUUsRUFBQUYsRUFBQW5FLEdBQVdvRSxFQUFBLE1BQUFDLEdBQUEsa0JBQUFBLEdBQUEsS0FBQUEsRUFBQSxHQUFBcEUsR0FBQSxpQkFBQW9FLEdBQUEsSUFBQUEsR0FBQXV0QixHQUFBcHdCLGVBQUE0QyxJQUFBd3RCLEdBQUF4dEIsSUFBQSxHQUFBQyxHQUFBbXdCLE9BQUFud0IsRUFBQSxLQUEySCxVQUFBckUsTUFBQSxZQUE0QkMsRUFBQWlFLEVBQUF1d0IsWUFBQXowQixFQUFBb0UsR0FBQUYsRUFBQWxFLEdBQUFvRSxHQUQ5SC9ELE9BQUE0QyxLQUFBMnVCLElBQUE3dUIsUUFBQSxTQUFBbUIsR0FBb0Nvd0IsR0FBQXZ4QixRQUFBLFNBQUFvQixHQUF1QkEsSUFBQUQsRUFBQXd3QixPQUFBLEdBQUF4VixjQUFBaGIsRUFBQXl3QixVQUFBLEdBQTZDL0MsR0FBQXp0QixHQUFBeXRCLEdBQUExdEIsT0FDbUQsSUFBQTB3QixHQUFBbnpCLEdBQVVvekIsVUFBQSxJQUFjQyxNQUFBLEVBQUFDLE1BQUEsRUFBQUMsSUFBQSxFQUFBQyxLQUFBLEVBQUFDLE9BQUEsRUFBQUMsSUFBQSxFQUFBQyxLQUFBLEVBQUFDLE9BQUEsRUFBQUMsUUFBQSxFQUFBQyxNQUFBLEVBQUFDLE1BQUEsRUFBQUMsT0FBQSxFQUFBcHlCLFFBQUEsRUFBQXF5QixPQUFBLEVBQUFDLEtBQUEsSUFDM1QsU0FBQUMsR0FBQTF4QixFQUFBQyxFQUFBbkUsR0FBbUJtRSxJQUFBeXdCLEdBQUExd0IsS0FBQSxNQUFBQyxFQUFBcUcsVUFBQSxNQUFBckcsRUFBQW9zQiwwQkFBQS9uQixFQUFBLE1BQUF0RSxFQUFBbEUsS0FBQSxNQUFBbUUsRUFBQW9zQiwwQkFBQSxNQUFBcHNCLEVBQUFxRyxVQUFBaEMsRUFBQSx1QkFBQXJFLEVBQUFvc0IseUJBQUEsV0FBQXBzQixFQUFBb3NCLHlCQUFBL25CLEVBQUEsYUFBQXJFLEVBQUErUSxPQUFBLGlCQUFBL1EsRUFBQStRLE9BQUExTSxFQUFBLEtBQUF4SSxNQUNuQixTQUFBNjFCLEdBQUEzeEIsRUFBQUMsR0FBaUIsUUFBQUQsRUFBQW1MLFFBQUEsNEJBQUFsTCxFQUFBMnhCLEdBQW9ELE9BQUE1eEIsR0FBVSwwS0FBa0wsa0JBQWtCLElBQUE2eEIsR0FBQTV0QixFQUFBcEQsWUFBQSxJQUNuUixTQUFBaXhCLEdBQUE5eEIsRUFBQUMsR0FBcUUsSUFBQW5FLEVBQUF3ckIsR0FBcER0bkIsRUFBQSxJQUFBQSxFQUFBK1gsVUFBQSxLQUFBL1gsRUFBQStYLFNBQUEvWCxJQUFBc2MsZUFBZ0VyYyxFQUFBMkwsRUFBQTNMLEdBQVEsUUFBQWxFLEVBQUEsRUFBWUEsRUFBQWtFLEVBQUFMLE9BQVc3RCxJQUFBLENBQUssSUFBQW1FLEVBQUFELEVBQUFsRSxHQUFXLElBQUFELEVBQUF3QixlQUFBNEMsS0FBQXBFLEVBQUFvRSxHQUFBLENBQWdDLE9BQUFBLEdBQVUsYUFBQXltQixHQUFBLFNBQUEzbUIsR0FBNkIsTUFBTSx1QkFBQTJtQixHQUFBLFFBQUEzbUIsR0FBdUMybUIsR0FBQSxPQUFBM21CLEdBQWFsRSxFQUFBaTJCLE1BQUEsRUFBVWoyQixFQUFBazJCLE9BQUEsRUFBVyxNQUFNLHlCQUFBaGEsR0FBQTlYLEdBQUEsSUFBQXltQixHQUFBem1CLEVBQUFGLEdBQTZDLE1BQU0sNkNBQWdELGFBQUF1UixHQUFBcEcsUUFBQWpMLElBQUE0RixHQUFBNUYsRUFBQUYsR0FBbUNsRSxFQUFBb0UsSUFBQSxJQUNsYSxTQUFBK3hCLEdBQUFqeUIsRUFBQUMsRUFBQW5FLEVBQUFDLEdBQXNTLE9BQWpSRCxFQUFBLElBQUFBLEVBQUFpYyxTQUFBamMsSUFBQXdnQixjQUFtQ3ZnQixJQUFBMHdCLEdBQUFDLE9BQUEzd0IsRUFBQTh3QixHQUFBN3NCLElBQXVCakUsSUFBQTB3QixHQUFBQyxLQUFBLFdBQUExc0IsTUFBQWxFLEVBQUF1SCxjQUFBLFFBQUErcEIsVUFBQSxxQkFBQXB0QixJQUFBcXRCLFlBQUFydEIsRUFBQXduQixhQUFBeG5CLEVBQUEsaUJBQUFDLEVBQUEyeEIsR0FBQTkxQixFQUFBdUgsY0FBQXJELEdBQWlLNHhCLEdBQUEzeEIsRUFBQTJ4QixLQUFROTFCLEVBQUF1SCxjQUFBckQsS0FBQWxFLEVBQUFvMkIsZ0JBQUFuMkIsRUFBQWlFLEdBQThDQSxFQUFTLFNBQUFteUIsR0FBQW55QixFQUFBQyxHQUFpQixXQUFBQSxFQUFBOFgsU0FBQTlYLElBQUFxYyxlQUFBOFYsZUFBQXB5QixHQUNoVSxTQUFBcXlCLEdBQUFyeUIsRUFBQUMsRUFBQW5FLEVBQUFDLEdBQXFCLElBQUFtRSxFQUFBeXhCLEdBQUExeEIsRUFBQW5FLEdBQWMsT0FBQW1FLEdBQVUsMEJBQUE2RixHQUFBLE9BQUE5RixHQUF3QyxJQUFBRyxFQUFBckUsRUFBUSxNQUFNLDRCQUFBcUUsRUFBQSxFQUFrQ0EsRUFBQW9SLEdBQUEzUixPQUFZTyxJQUFBMkYsR0FBQXlMLEdBQUFwUixHQUFBSCxHQUFlRyxFQUFBckUsRUFBSSxNQUFNLGFBQUFnSyxHQUFBLFFBQUE5RixHQUEyQkcsRUFBQXJFLEVBQUksTUFBTSxpQ0FBQWdLLEdBQUEsUUFBQTlGLEdBQWlEOEYsR0FBQSxPQUFBOUYsR0FBWUcsRUFBQXJFLEVBQUksTUFBTSxXQUFBZ0ssR0FBQSxRQUFBOUYsR0FBeUI4RixHQUFBLFNBQUE5RixHQUFjRyxFQUFBckUsRUFBSSxNQUFNLGNBQUFnSyxHQUFBLFNBQUE5RixHQUE2QkcsRUFBQXJFLEVBQUksTUFBTSxZQUFBZ2dCLEdBQUE5YixFQUFBbEUsR0FBcUJxRSxFQUFBc2IsR0FBQXpiLEVBQUFsRSxHQUFVZ0ssR0FBQSxVQUFBOUYsR0FBZTh4QixHQUFBLzFCLEVBQUEsWUFBaUIsTUFBTSxhQUFBb0UsRUFBQXdyQixHQUFBM3JCLEVBQUFsRSxHQUF3QixNQUFNLGFBQUFtd0IsR0FBQWpzQixFQUFBbEUsR0FBc0JxRSxFQUFBNUMsS0FBTXpCLEdBQUlZLFdBQUEsSUFDamZvSixHQUFBLFVBQUE5RixHQUFlOHhCLEdBQUEvMUIsRUFBQSxZQUFpQixNQUFNLGVBQUF1d0IsR0FBQXRzQixFQUFBbEUsR0FBd0JxRSxFQUFBaXNCLEdBQUFwc0IsRUFBQWxFLEdBQVVnSyxHQUFBLFVBQUE5RixHQUFlOHhCLEdBQUEvMUIsRUFBQSxZQUFpQixNQUFNLFFBQUFvRSxFQUFBckUsRUFBWTQxQixHQUFBenhCLEVBQUFFLEVBQUEweEIsSUFBVyxJQUFBeHJCLEVBQUFELEVBQUFqRyxFQUFVLElBQUFrRyxLQUFBRCxFQUFBLEdBQUFBLEVBQUE5SSxlQUFBK0ksR0FBQSxDQUFtQyxJQUFBeEMsRUFBQXVDLEVBQUFDLEdBQVcsVUFBQUEsRUFBQWdxQixHQUFBcndCLEVBQUE2RCxHQUFBLDRCQUFBd0MsRUFBQSxPQUFBeEMsTUFBQXl1QixZQUFBLElBQUF0RixHQUFBaHRCLEVBQUE2RCxHQUFBLGFBQUF3QyxFQUFBLGlCQUFBeEMsR0FBQSxhQUFBNUQsR0FBQSxLQUFBNEQsSUFBQTBwQixHQUFBdnRCLEVBQUE2RCxHQUFBLGlCQUFBQSxHQUFBMHBCLEdBQUF2dEIsRUFBQSxHQUFBNkQsR0FBQSxtQ0FBQXdDLEdBQUEsNkJBQUFBLEdBQUEsY0FBQUEsSUFBQXNGLEVBQUFyTyxlQUFBK0ksR0FBQSxNQUFBeEMsR0FBQWl1QixHQUFBLzFCLEVBQzdMc0ssR0FBQSxNQUFBeEMsR0FBQW9YLEdBQUFqYixFQUFBcUcsRUFBQXhDLEVBQUEzRCxJQUF5QixPQUFBRCxHQUFVLFlBQUFrWSxHQUFBblksR0FBbUJxYyxHQUFBcmMsRUFBQWxFLEdBQUEsR0FBVyxNQUFNLGVBQUFxYyxHQUFBblksR0FBc0J3c0IsR0FBQXhzQixHQUFRLE1BQU0sbUJBQUFsRSxFQUFBWSxPQUFBc0QsRUFBQWlZLGFBQUEsUUFBQW5jLEVBQUFZLE9BQTZELE1BQU0sYUFBQXNELEVBQUFtc0IsV0FBQXJ3QixFQUFBcXdCLFNBQWdELE9BQVZsc0IsRUFBQW5FLEVBQUFZLE9BQVVtdkIsR0FBQTdyQixJQUFBbEUsRUFBQXF3QixTQUFBbHNCLEdBQUEsU0FBQW5FLEVBQUE2ZixjQUFBa1EsR0FBQTdyQixJQUFBbEUsRUFBQXF3QixTQUFBcndCLEVBQUE2ZixjQUFBLEdBQTJGLE1BQU0sMkJBQUF4YixFQUFBb3lCLFVBQUF2eUIsRUFBQXd5QixRQUFBdnVCLElBQy9ULFNBQUF3dUIsR0FBQXp5QixFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEdBQXVCLElBQUFDLEVBQUEsS0FBVyxPQUFBRixHQUFVLFlBQUFuRSxFQUFBMmYsR0FBQXpiLEVBQUFsRSxHQUF1QkMsRUFBQTBmLEdBQUF6YixFQUFBakUsR0FBVW9FLEtBQUssTUFBTSxhQUFBckUsRUFBQTZ2QixHQUFBM3JCLEVBQUFsRSxHQUF3QkMsRUFBQTR2QixHQUFBM3JCLEVBQUFqRSxHQUFVb0UsS0FBSyxNQUFNLGFBQUFyRSxFQUFBeUIsS0FBb0J6QixHQUFJWSxXQUFBLElBQWVYLEVBQUF3QixLQUFNeEIsR0FBSVcsV0FBQSxJQUFleUQsS0FBSyxNQUFNLGVBQUFyRSxFQUFBc3dCLEdBQUFwc0IsRUFBQWxFLEdBQTBCQyxFQUFBcXdCLEdBQUFwc0IsRUFBQWpFLEdBQVVvRSxLQUFLLE1BQU0sMkJBQUFyRSxFQUFBeTJCLFNBQUEsbUJBQUF4MkIsRUFBQXcyQixVQUFBdnlCLEVBQUF3eUIsUUFBQXZ1QixHQUFvRnl0QixHQUFBenhCLEVBQUFsRSxFQUFBODFCLElBQVc1eEIsRUFBQUQsT0FBQSxFQUFXLElBQUFvRyxFQUFBLEtBQVcsSUFBQXBHLEtBQUFsRSxFQUFBLElBQUFDLEVBQUF1QixlQUFBMEMsSUFBQWxFLEVBQUF3QixlQUFBMEMsSUFBQSxNQUFBbEUsRUFBQWtFLEdBQUEsYUFBQUEsRUFBQSxDQUFvRixJQUFBcUcsRUFBQXZLLEVBQUFrRSxHQUFXLElBQUFDLEtBQUFvRyxJQUFBL0ksZUFBQTJDLEtBQUFtRyxJQUNuZEEsTUFBS0EsRUFBQW5HLEdBQUEsUUFBVyw0QkFBQUQsR0FBQSxhQUFBQSxHQUFBLG1DQUFBQSxHQUFBLDZCQUFBQSxHQUFBLGNBQUFBLElBQUEyTCxFQUFBck8sZUFBQTBDLEdBQUFHLG9CQUFBNkMsS0FBQWhELEVBQUEsT0FBa00sSUFBQUEsS0FBQWpFLEVBQUEsQ0FBWSxJQUFBOEgsRUFBQTlILEVBQUFpRSxHQUFpQyxHQUF0QnFHLEVBQUEsTUFBQXZLLElBQUFrRSxRQUFBLEVBQXNCakUsRUFBQXVCLGVBQUEwQyxJQUFBNkQsSUFBQXdDLElBQUEsTUFBQXhDLEdBQUEsTUFBQXdDLEdBQUEsYUFBQXJHLEVBQUEsR0FBQXFHLEVBQUEsQ0FBdUUsSUFBQXBHLEtBQUFvRyxLQUFBL0ksZUFBQTJDLElBQUE0RCxLQUFBdkcsZUFBQTJDLEtBQUFtRyxVQUFrRUEsRUFBQW5HLEdBQUEsSUFBVyxJQUFBQSxLQUFBNEQsSUFBQXZHLGVBQUEyQyxJQUFBb0csRUFBQXBHLEtBQUE0RCxFQUFBNUQsS0FBQW1HLFVBQXNEQSxFQUFBbkcsR0FBQTRELEVBQUE1RCxTQUFhbUcsSUFBQWpHLFlBQUE2QyxLQUFBaEQsRUFBQW9HLElBQ3RkQSxFQUFBdkMsTUFBSSw0QkFBQTdELEdBQUE2RCxNQUFBeXVCLFlBQUEsRUFBQWpzQixNQUFBaXNCLFlBQUEsUUFBQXp1QixHQUFBd0MsSUFBQXhDLElBQUExRCxTQUFBNkMsS0FBQWhELEVBQUEsR0FBQTZELElBQUEsYUFBQTdELEVBQUFxRyxJQUFBeEMsR0FBQSxpQkFBQUEsR0FBQSxpQkFBQUEsSUFBQTFELFNBQUE2QyxLQUFBaEQsRUFBQSxHQUFBNkQsR0FBQSxtQ0FBQTdELEdBQUEsNkJBQUFBLElBQUEyTCxFQUFBck8sZUFBQTBDLElBQUEsTUFBQTZELEdBQUFpdUIsR0FBQTV4QixFQUFBRixHQUFBRyxHQUFBa0csSUFBQXhDLElBQUExRCxpQkFBQTZDLEtBQUFoRCxFQUFBNkQsSUFBNFgsT0FBN0J1QyxJQUFBakcsU0FBQTZDLEtBQUEsUUFBQW9ELEdBQTZCakcsRUFDaFksU0FBQXV5QixHQUFBMXlCLEVBQUFDLEVBQUFuRSxFQUFBQyxFQUFBbUUsR0FBdUIsVUFBQXBFLEdBQUEsVUFBQW9FLEVBQUF3RyxNQUFBLE1BQUF4RyxFQUFBbEUsTUFBQWtnQixHQUFBbGMsRUFBQUUsR0FBcUR5eEIsR0FBQTcxQixFQUFBQyxHQUFRQSxFQUFBNDFCLEdBQUE3MUIsRUFBQW9FLEdBQVUsUUFBQUMsRUFBQSxFQUFZQSxFQUFBRixFQUFBTCxPQUFXTyxHQUFBLEdBQU0sSUFBQWlHLEVBQUFuRyxFQUFBRSxHQUFBa0csRUFBQXBHLEVBQUFFLEVBQUEsR0FBb0IsVUFBQWlHLEVBQUFpcUIsR0FBQXJ3QixFQUFBcUcsR0FBQSw0QkFBQUQsRUFBQTRtQixHQUFBaHRCLEVBQUFxRyxHQUFBLGFBQUFELEVBQUFtbkIsR0FBQXZ0QixFQUFBcUcsR0FBQTRVLEdBQUFqYixFQUFBb0csRUFBQUMsRUFBQXRLLEdBQWdHLE9BQUFELEdBQVUsWUFBQXFnQixHQUFBbmMsRUFBQUUsR0FBcUIsTUFBTSxlQUFBcXNCLEdBQUF2c0IsRUFBQUUsR0FBd0IsTUFBTSxhQUFBRixFQUFBNGIsY0FBQUksa0JBQUEsRUFBQS9iLEVBQUFELEVBQUE0YixjQUFBc1EsWUFBQWxzQixFQUFBNGIsY0FBQXNRLGNBQUFoc0IsRUFBQWlzQixTQUFBLE9BQUFyd0IsRUFBQW9FLEVBQUF4RCxPQUFBbXZCLEdBQUE3ckIsSUFBQUUsRUFBQWlzQixTQUFBcndCLEdBQUEsR0FBQW1FLE1BQUFDLEVBQUFpc0IsV0FBQSxNQUFBanNCLEVBQUF5YixhQUNsVGtRLEdBQUE3ckIsSUFBQUUsRUFBQWlzQixTQUFBanNCLEVBQUF5YixjQUFBLEdBQUFrUSxHQUFBN3JCLElBQUFFLEVBQUFpc0IsU0FBQWpzQixFQUFBaXNCLFlBQUEsU0FDQSxTQUFBd0csR0FBQTN5QixFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEdBQXVCLE9BQUFELEdBQVUsMEJBQUE2RixHQUFBLE9BQUE5RixHQUF3QyxNQUFNLDRCQUFBakUsRUFBQSxFQUFrQ0EsRUFBQXdWLEdBQUEzUixPQUFZN0QsSUFBQStKLEdBQUF5TCxHQUFBeFYsR0FBQWlFLEdBQWUsTUFBTSxhQUFBOEYsR0FBQSxRQUFBOUYsR0FBMkIsTUFBTSxpQ0FBQThGLEdBQUEsUUFBQTlGLEdBQWlEOEYsR0FBQSxPQUFBOUYsR0FBWSxNQUFNLFdBQUE4RixHQUFBLFFBQUE5RixHQUF5QjhGLEdBQUEsU0FBQTlGLEdBQWMsTUFBTSxjQUFBOEYsR0FBQSxTQUFBOUYsR0FBNkIsTUFBTSxZQUFBOGIsR0FBQTliLEVBQUFsRSxHQUFxQmdLLEdBQUEsVUFBQTlGLEdBQWU4eEIsR0FBQTV4QixFQUFBLFlBQWlCLE1BQU0sYUFBQStyQixHQUFBanNCLEVBQUFsRSxHQUFzQmdLLEdBQUEsVUFBQTlGLEdBQWU4eEIsR0FBQTV4QixFQUFBLFlBQWlCLE1BQU0sZUFBQW9zQixHQUFBdHNCLEVBQUFsRSxHQUFBZ0ssR0FBQSxVQUFBOUYsR0FBQTh4QixHQUFBNXhCLEVBQUEsWUFDaGIsUUFBQUMsS0FEd2V1eEIsR0FBQXp4QixFQUNyZm5FLEVBQUErMUIsSUFBTTkxQixFQUFBLEtBQU9ELEVBQUEsR0FBQUEsRUFBQXdCLGVBQUE2QyxHQUFBLENBQXVDLElBQUFpRyxFQUFBdEssRUFBQXFFLEdBQVcsYUFBQUEsRUFBQSxpQkFBQWlHLEVBQUFwRyxFQUFBMG5CLGNBQUF0aEIsSUFBQXJLLEdBQUEsV0FBQXFLLElBQUEsaUJBQUFBLEdBQUFwRyxFQUFBMG5CLGNBQUEsR0FBQXRoQixJQUFBckssR0FBQSxjQUFBcUssSUFBQXVGLEVBQUFyTyxlQUFBNkMsSUFBQSxNQUFBaUcsR0FBQTByQixHQUFBNXhCLEVBQUFDLEdBQWlMLE9BQUFGLEdBQVUsWUFBQWtZLEdBQUFuWSxHQUFtQnFjLEdBQUFyYyxFQUFBbEUsR0FBQSxHQUFXLE1BQU0sZUFBQXFjLEdBQUFuWSxHQUFzQndzQixHQUFBeHNCLEdBQVEsTUFBTSxnQ0FBa0MsMkJBQUFsRSxFQUFBeTJCLFVBQUF2eUIsRUFBQXd5QixRQUFBdnVCLEdBQXFELE9BQUFsSSxFQUFTLFNBQUE2MkIsR0FBQTV5QixFQUFBQyxHQUFpQixPQUFBRCxFQUFBeXRCLFlBQUF4dEIsRUFDbmIsSUFBQTR5QixJQUFReHZCLGNBQUE0dUIsR0FBQUcsZUFBQUQsR0FBQVcscUJBQUFULEdBQUFVLGVBQUFOLEdBQUFPLGlCQUFBTixHQUFBTyx1QkFBQU4sR0FBQU8saUJBQUFOLEdBQUFPLHFCQUFBLGFBQWdMQyxnQ0FBQSxhQUE2Q0MsNkJBQUEsYUFBMENDLCtCQUFBLGFBQTRDQyw0QkFBQSxhQUF5QzFkLHVCQUFBLFNBQUE3VixFQUFBQyxFQUFBbkUsR0FBd0MsT0FBQW1FLEdBQVUsWUFBOEIsR0FBOUJrYyxHQUFBbmMsRUFBQWxFLEdBQXFCbUUsRUFBQW5FLEVBQUFFLEtBQVMsVUFBQUYsRUFBQTRLLE1BQUEsTUFBQXpHLEVBQUEsQ0FBOEIsSUFBQW5FLEVBQUFrRSxFQUFRbEUsRUFBQTJTLFlBQWEzUyxJQUFBMlMsV0FDNVosSUFBM0UzUyxJQUFBMDNCLGlCQUFBLGNBQUFDLEtBQUFDLFVBQUEsR0FBQXp6QixHQUFBLG1CQUEyRUEsRUFBQSxFQUFRQSxFQUFBbkUsRUFBQThELE9BQVdLLElBQUEsQ0FBSyxJQUFBbEUsRUFBQUQsRUFBQW1FLEdBQVcsR0FBQWxFLElBQUFpRSxHQUFBakUsRUFBQTQzQixPQUFBM3pCLEVBQUEyekIsS0FBQSxDQUEyQixJQUFBenpCLEVBQUEwTyxFQUFBN1MsR0FBWW1FLEdBQUFvRSxFQUFBLE1BQWlCc1UsR0FBQTdjLEdBQU1vZ0IsR0FBQXBnQixFQUFBbUUsS0FBVSxNQUFNLGVBQUFxc0IsR0FBQXZzQixFQUFBbEUsR0FBd0IsTUFBTSxvQkFBQW1FLEVBQUFuRSxFQUFBWSxRQUFBbXZCLEdBQUE3ckIsSUFBQWxFLEVBQUFxd0IsU0FBQWxzQixHQUFBLE1BQTJEMnpCLEdBQUEsS0FBQUMsR0FBQSxLQUFpQixTQUFBQyxHQUFBOXpCLEVBQUFDLEdBQWlCLE9BQUFELEdBQVUsNkRBQUFDLEVBQUE4ekIsVUFBNkUsU0FDOVksU0FBQUMsR0FBQWgwQixFQUFBQyxHQUFpQixtQkFBQUQsR0FBQSxpQkFBQUMsRUFBQXFHLFVBQUEsaUJBQUFyRyxFQUFBcUcsVUFBQSxpQkFBQXJHLEVBQUFvc0IseUJBQUEsT0FBQXBzQixFQUFBb3NCLHlCQUFBLGlCQUFBcHNCLEVBQUFvc0Isd0JBQUFpRyxPQUFvTixJQUFBMkIsR0FBQWxLLEdBQUFtSyxHQUFBaEssR0FBQWlLLEdBQUFoSyxHQUFzQixTQUFBaUssR0FBQXAwQixHQUFlLElBQUFBLElBQUE2bkIsWUFBb0I3bkIsR0FBQSxJQUFBQSxFQUFBK1gsVUFBQSxJQUFBL1gsRUFBQStYLFVBQWtDL1gsSUFBQTZuQixZQUFpQixPQUFBN25CLEVBQVMsU0FBQXEwQixHQUFBcjBCLEdBQWUsSUFBQUEsSUFBQXduQixXQUFtQnhuQixHQUFBLElBQUFBLEVBQUErWCxVQUFBLElBQUEvWCxFQUFBK1gsVUFBa0MvWCxJQUFBNm5CLFlBQWlCLE9BQUE3bkIsRUFBUyxJQUFBczBCLElBQVEsSUFBQUMsTUFBQUMsSUFBQSxFQUFnQixTQUFBQyxHQUFBejBCLEdBQWUsT0FBTzZGLFFBQUE3RixHQUN0ZSxTQUFBbUcsR0FBQW5HLEdBQWMsRUFBQXcwQixLQUFBeDBCLEVBQUE2RixRQUFBMHVCLEdBQUFDLElBQUFELEdBQUFDLElBQUEsS0FBQUEsTUFBMEMsU0FBQTV0QixHQUFBNUcsRUFBQUMsR0FBcUJzMEIsS0FBTEMsSUFBS3gwQixFQUFBNkYsUUFBaUI3RixFQUFBNkYsUUFBQTVGLEVBQVksSUFBQXkwQixHQUFBRCxHQUFBcnFCLEdBQUF2RCxHQUFBNHRCLElBQUEsR0FBQUUsR0FBQXZxQixFQUE2QixTQUFBd3FCLEdBQUE1MEIsR0FBZSxPQUFBNjBCLEdBQUE3MEIsR0FBQTIwQixHQUFBRCxHQUFBN3VCLFFBQ3RKLFNBQUFpdkIsR0FBQTkwQixFQUFBQyxHQUFpQixJQUFBbkUsRUFBQWtFLEVBQUEwRyxLQUFBcXVCLGFBQTBCLElBQUFqNUIsRUFBQSxPQUFBc08sRUFBZ0IsSUFBQXJPLEVBQUFpRSxFQUFBMk4sVUFBa0IsR0FBQTVSLEtBQUFpNUIsOENBQUEvMEIsRUFBQSxPQUFBbEUsRUFBQWs1QiwwQ0FBMkcsSUFBUTkwQixFQUFSRCxLQUFXLElBQUFDLEtBQUFyRSxFQUFBb0UsRUFBQUMsR0FBQUYsRUFBQUUsR0FBc0ksT0FBakhwRSxLQUFBaUUsSUFBQTJOLFdBQUFxbkIsNENBQUEvMEIsRUFBQUQsRUFBQWkxQiwwQ0FBQS8wQixHQUFpSEEsRUFBUyxTQUFBMjBCLEdBQUE3MEIsR0FBZSxXQUFBQSxFQUFBME8sS0FBQSxNQUFBMU8sRUFBQTBHLEtBQUF3dUIsa0JBQWlELFNBQUFDLEdBQUFuMUIsR0FBZTYwQixHQUFBNzBCLEtBQUFtRyxHQUFBVSxJQUFBVixHQUFBdXVCLEtBQXdCLFNBQUFVLEdBQUFwMUIsR0FBZW1HLEdBQUFVLElBQU9WLEdBQUF1dUIsSUFDL2MsU0FBQVcsR0FBQXIxQixFQUFBQyxFQUFBbkUsR0FBbUI0NEIsR0FBQTd1QixVQUFBdUUsR0FBQTlGLEVBQUEsT0FBZ0NzQyxHQUFBOHRCLEdBQUF6MEIsR0FBVTJHLEdBQUFDLEdBQUEvSyxHQUFTLFNBQUF3NUIsR0FBQXQxQixFQUFBQyxHQUFpQixJQUFBbkUsRUFBQWtFLEVBQUEyTixVQUFBNVIsRUFBQWlFLEVBQUEwRyxLQUFBd3VCLGtCQUE2QyxzQkFBQXA1QixFQUFBeTVCLGdCQUFBLE9BQUF0MUIsRUFBd0UsUUFBQUMsS0FBdEJwRSxJQUFBeTVCLGtCQUFzQnIxQixLQUFBbkUsR0FBQXVJLEVBQUEsTUFBQXNWLEdBQUE1WixJQUFBLFVBQUFFLEdBQXlELE9BQUEzQyxLQUFXMEMsRUFBQW5FLEdBQU0sU0FBQTA1QixHQUFBeDFCLEdBQWUsSUFBQTYwQixHQUFBNzBCLEdBQUEsU0FBbUIsSUFBQUMsRUFBQUQsRUFBQTJOLFVBQWdILE9BQTlGMU4sT0FBQXcxQiwyQ0FBQXJyQixFQUFxRHVxQixHQUFBRCxHQUFBN3VCLFFBQWNlLEdBQUE4dEIsR0FBQXowQixHQUFVMkcsR0FBQUMsTUFBQWhCLFVBQWlCLEVBQ3hhLFNBQUE2dkIsR0FBQTExQixFQUFBQyxHQUFpQixJQUFBbkUsRUFBQWtFLEVBQUEyTixVQUFvQyxHQUFsQjdSLEdBQUF3SSxFQUFBLE9BQWtCckUsRUFBQSxDQUFNLElBQUFsRSxFQUFBdTVCLEdBQUF0MUIsRUFBQTIwQixJQUFlNzRCLEVBQUEyNUIsMENBQUExNUIsRUFBOENvSyxHQUFBVSxJQUFPVixHQUFBdXVCLElBQVE5dEIsR0FBQTh0QixHQUFBMzRCLFFBQVVvSyxHQUFBVSxJQUFZRCxHQUFBQyxHQUFBNUcsR0FDN0osU0FBQTAxQixHQUFBMzFCLEVBQUFDLEVBQUFuRSxFQUFBQyxHQUFxQm1GLEtBQUF3TixJQUFBMU8sRUFBV2tCLEtBQUFsRSxJQUFBbEIsRUFBV29GLEtBQUFzZixRQUFBdGYsS0FBQXFmLE1BQUFyZixLQUFBa08sT0FBQWxPLEtBQUF5TSxVQUFBek0sS0FBQXdGLEtBQUEsS0FBa0V4RixLQUFBK0IsTUFBQSxFQUFhL0IsS0FBQThFLElBQUEsS0FBYzlFLEtBQUE0WSxhQUFBN1osRUFBb0JpQixLQUFBMDBCLGNBQUExMEIsS0FBQTIwQixZQUFBMzBCLEtBQUE0MEIsY0FBQSxLQUE0RDUwQixLQUFBdEUsS0FBQWIsRUFBWW1GLEtBQUFrZixVQUFBLEVBQWlCbGYsS0FBQTYwQixXQUFBNzBCLEtBQUE4MEIsWUFBQTkwQixLQUFBKzBCLFdBQUEsS0FBc0QvMEIsS0FBQWcxQixlQUFBLEVBQXNCaDFCLEtBQUE2TyxVQUFBLEtBQ2pVLFNBQUFvbUIsR0FBQW4yQixFQUFBQyxFQUFBbkUsR0FBbUIsSUFBQUMsRUFBQWlFLEVBQUErUCxVQUFxWSxPQUFuWCxPQUFBaFUsTUFBQSxJQUFBNDVCLEdBQUEzMUIsRUFBQTBPLElBQUF6TyxFQUFBRCxFQUFBaEQsSUFBQWdELEVBQUFwRCxPQUFBOEosS0FBQTFHLEVBQUEwRyxLQUFBM0ssRUFBQTRSLFVBQUEzTixFQUFBMk4sVUFBQTVSLEVBQUFnVSxVQUFBL1AsSUFBQStQLFVBQUFoVSxNQUFBK2QsYUFBQTdaLEVBQUFsRSxFQUFBcWtCLFVBQUEsRUFBQXJrQixFQUFBazZCLFdBQUEsS0FBQWw2QixFQUFBaTZCLFlBQUEsS0FBQWo2QixFQUFBZzZCLFdBQUEsTUFBb01oNkIsRUFBQW02QixlQUFBcDZCLEVBQW1CQyxFQUFBd2tCLE1BQUF2Z0IsRUFBQXVnQixNQUFnQnhrQixFQUFBKzVCLGNBQUE5MUIsRUFBQTgxQixjQUFnQy81QixFQUFBNjVCLGNBQUE1MUIsRUFBQTQxQixjQUFnQzc1QixFQUFBODVCLFlBQUE3MUIsRUFBQTYxQixZQUE0Qjk1QixFQUFBeWtCLFFBQUF4Z0IsRUFBQXdnQixRQUFvQnprQixFQUFBa0gsTUFBQWpELEVBQUFpRCxNQUFnQmxILEVBQUFpSyxJQUFBaEcsRUFBQWdHLElBQVlqSyxFQUN4WixTQUFBcTZCLEdBQUFwMkIsRUFBQUMsRUFBQW5FLEdBQW1CLElBQUFDLEVBQUFpRSxFQUFBMEcsS0FBQXhHLEVBQUFGLEVBQUFoRCxJQUErQixHQUFWZ0QsSUFBQTRCLE1BQVUsbUJBQUE3RixFQUFBLElBQUFvRSxFQUFBcEUsRUFBQXNCLFdBQUF0QixFQUFBc0IsVUFBQWtJLGlCQUFBLFNBQTZFLG9CQUFBeEosRUFBQW9FLEVBQUEsT0FBZ0MsT0FBQXBFLEdBQWUsS0FBQW1kLEdBQUEsT0FBQW1kLEdBQUFyMkIsRUFBQXNHLFNBQUFyRyxFQUFBbkUsRUFBQW9FLEdBQW9DLEtBQUFxWixHQUFBcFosRUFBQSxHQUFhRixHQUFBLEVBQUssTUFBTSxLQUFBa1osR0FBQWhaLEVBQUEsR0FBYUYsR0FBQSxFQUFLLE1BQU0sS0FBQW1aLEdBQUEsT0FBQXJkLEVBQUEsSUFBQTQ1QixHQUFBLEdBQUEzMUIsRUFBQUUsRUFBQSxFQUFBRCxJQUFBeUcsS0FBQTBTLEdBQUFyZCxFQUFBbTZCLGVBQUFwNkIsRUFBQUMsRUFBbUUsS0FBQTBkLEdBQUF0WixFQUFBLEdBQWFGLEdBQUEsRUFBSyxNQUFNLFFBQUFELEVBQUEsQ0FBVyx3QkFBQWpFLEdBQUEsT0FBQUEsSUFBQTBLLFNBQUEsTUFBc0QsS0FBQTRTLEdBQUFsWixFQUFBLEdBQWEsTUFBQUgsRUFBUSxLQUFBc1osR0FBQW5aLEVBQUEsR0FBYSxNQUFBSCxFQUFRLEtBQUF3WixHQUFBclosRUFBQSxHQUFhLE1BQUFILEVBQVEsUUFBQXNFLEVBQUEsWUFBQXZJLEVBQzdkQSxXQUFBLElBQWVvRSxPQUFBLEdBQXdELE9BQTlDRixFQUFBLElBQUEwMUIsR0FBQXgxQixFQUFBSCxFQUFBRSxFQUFBRCxJQUFrQnlHLEtBQUEzSyxFQUFTa0UsRUFBQWkyQixlQUFBcDZCLEVBQW1CbUUsRUFBUyxTQUFBbzJCLEdBQUFyMkIsRUFBQUMsRUFBQW5FLEVBQUFDLEdBQTJELE9BQXRDaUUsRUFBQSxJQUFBMjFCLEdBQUEsR0FBQTMxQixFQUFBakUsRUFBQWtFLElBQW1CaTJCLGVBQUFwNkIsRUFBbUJrRSxFQUFTLFNBQUFzMkIsR0FBQXQyQixFQUFBQyxFQUFBbkUsR0FBMkQsT0FBeENrRSxFQUFBLElBQUEyMUIsR0FBQSxFQUFBMzFCLEVBQUEsS0FBQUMsSUFBcUJpMkIsZUFBQXA2QixFQUFtQmtFLEVBQVMsU0FBQXUyQixHQUFBdjJCLEVBQUFDLEVBQUFuRSxHQUEyTCxPQUF4S21FLEVBQUEsSUFBQTAxQixHQUFBLFNBQUEzMUIsRUFBQXNHLFNBQUF0RyxFQUFBc0csWUFBQXRHLEVBQUFoRCxJQUFBaUQsSUFBb0RpMkIsZUFBQXA2QixFQUFtQm1FLEVBQUEwTixXQUFheVksY0FBQXBtQixFQUFBb21CLGNBQUFvUSxnQkFBQSxLQUFBQyxlQUFBejJCLEVBQUF5MkIsZ0JBQW9GeDJCLEVBQ25aLFNBQUF5MkIsR0FBQTEyQixFQUFBQyxFQUFBbkUsR0FBeVcsT0FBMVRrRSxHQUFHNkYsUUFBL0I1RixFQUFBLElBQUEwMUIsR0FBQSxZQUFBMTFCLEVBQUEsS0FBK0JtbUIsY0FBQXBtQixFQUFBdzJCLGdCQUFBLEtBQUFHLG9CQUFBLEVBQUFDLGtCQUFBLEVBQUFDLHNCQUFBLEVBQUFDLG9CQUFBLEVBQUFDLGlCQUFBLEVBQUFDLDRCQUFBLEVBQUFDLGFBQUEsS0FBQS94QixRQUFBLEtBQUFneUIsZUFBQSxLQUFBQyxRQUFBcjdCLEVBQUFzN0Isd0JBQUEsRUFBQUMsV0FBQSxLQUFBQyxrQkFBQSxNQUF1VHIzQixFQUFBME4sVUFBQTNOLEVBQXFCLElBQUF1M0IsR0FBQSxLQUFBQyxHQUFBLEtBQW9CLFNBQUFDLEdBQUF6M0IsR0FBZSxnQkFBQUMsR0FBbUIsSUFBSSxPQUFBRCxFQUFBQyxHQUFZLE1BQUFuRSxNQUNqSixTQUFBNDdCLEdBQUExM0IsR0FBZSxtQkFBQXUzQixPQUFBdjNCLEdBQThCLFNBQUEyM0IsR0FBQTMzQixHQUFlLG1CQUFBdzNCLE9BQUF4M0IsR0FBOEIsSUFBQTQzQixJQUFBLEVBQzdZLFNBQUFDLEdBQUE3M0IsR0FBZSxPQUFPazJCLGVBQUEsRUFBQTRCLFVBQUE5M0IsRUFBQSszQixZQUFBLEtBQUFDLFdBQUEsS0FBQUMsb0JBQUEsS0FBQUMsbUJBQUEsS0FBQWxDLFlBQUEsS0FBQUQsV0FBQSxLQUFBb0Msb0JBQUEsS0FBQUMsbUJBQUEsTUFBa00sU0FBQUMsR0FBQXI0QixHQUFlLE9BQU9rMkIsZUFBQWwyQixFQUFBazJCLGVBQUE0QixVQUFBOTNCLEVBQUE4M0IsVUFBQUMsWUFBQS8zQixFQUFBKzNCLFlBQUFDLFdBQUFoNEIsRUFBQWc0QixXQUFBQyxvQkFBQSxLQUFBQyxtQkFBQSxLQUFBbEMsWUFBQSxLQUFBRCxXQUFBLEtBQUFvQyxvQkFBQSxLQUFBQyxtQkFBQSxNQUM5TyxTQUFBRSxHQUFBdDRCLEdBQWUsT0FBT2syQixlQUFBbDJCLEVBQUEwTyxJQUFBLEVBQUE2cEIsUUFBQSxLQUFBQyxTQUFBLEtBQUFoeEIsS0FBQSxLQUFBeXVCLFdBQUEsTUFBNkUsU0FBQXdDLEdBQUF6NEIsRUFBQUMsRUFBQW5FLEdBQW1CLE9BQUFrRSxFQUFBZzRCLFdBQUFoNEIsRUFBQSszQixZQUFBLzNCLEVBQUFnNEIsV0FBQS8zQixHQUFBRCxFQUFBZzRCLFdBQUF4d0IsS0FBQXZILEVBQUFELEVBQUFnNEIsV0FBQS8zQixJQUFzRixJQUFBRCxFQUFBazJCLGdCQUFBbDJCLEVBQUFrMkIsZUFBQXA2QixLQUFBa0UsRUFBQWsyQixlQUFBcDZCLEdBQzVNLFNBQUE0OEIsR0FBQTE0QixFQUFBQyxFQUFBbkUsR0FBbUIsSUFBQUMsRUFBQWlFLEVBQUErUCxVQUFrQixVQUFBaFUsRUFBQSxDQUFhLElBQUFtRSxFQUFBRixFQUFBNjFCLFlBQW9CMTFCLEVBQUEsS0FBVyxPQUFBRCxNQUFBRixFQUFBNjFCLFlBQUFnQyxHQUFBNzNCLEVBQUE0MUIscUJBQWdEMTFCLEVBQUFGLEVBQUE2MUIsWUFBQTExQixFQUFBcEUsRUFBQTg1QixZQUFBLE9BQUEzMUIsRUFBQSxPQUFBQyxHQUFBRCxFQUFBRixFQUFBNjFCLFlBQUFnQyxHQUFBNzNCLEVBQUE0MUIsZUFBQXoxQixFQUFBcEUsRUFBQTg1QixZQUFBZ0MsR0FBQTk3QixFQUFBNjVCLGdCQUFBMTFCLEVBQUFGLEVBQUE2MUIsWUFBQXdDLEdBQUFsNEIsR0FBQSxPQUFBQSxNQUFBcEUsRUFBQTg1QixZQUFBd0MsR0FBQW40QixJQUF5TCxPQUFBQyxHQUFBRCxJQUFBQyxFQUFBczRCLEdBQUF2NEIsRUFBQUQsRUFBQW5FLEdBQUEsT0FBQW9FLEVBQUE4M0IsWUFBQSxPQUFBNzNCLEVBQUE2M0IsWUFBQVMsR0FBQXY0QixFQUFBRCxFQUFBbkUsR0FBQTI4QixHQUFBdDRCLEVBQUFGLEVBQUFuRSxLQUFBMjhCLEdBQUF2NEIsRUFBQUQsRUFBQW5FLEdBQUFxRSxFQUFBNjNCLFdBQUEvM0IsR0FDMVQsU0FBQTA0QixHQUFBMzRCLEVBQUFDLEVBQUFuRSxHQUFtQixJQUFBQyxFQUFBaUUsRUFBQTYxQixZQUF5RSxRQUFyRDk1QixFQUFBLE9BQUFBLEVBQUFpRSxFQUFBNjFCLFlBQUFnQyxHQUFBNzNCLEVBQUE0MUIsZUFBQWdELEdBQUE1NEIsRUFBQWpFLElBQXFEbThCLG1CQUFBbjhCLEVBQUFrOEIsb0JBQUFsOEIsRUFBQW04QixtQkFBQWo0QixHQUFBbEUsRUFBQW04QixtQkFBQTF3QixLQUFBdkgsRUFBQWxFLEVBQUFtOEIsbUJBQUFqNEIsSUFBOEgsSUFBQWxFLEVBQUFtNkIsZ0JBQUFuNkIsRUFBQW02QixlQUFBcDZCLEtBQUFDLEVBQUFtNkIsZUFBQXA2QixHQUErRCxTQUFBODhCLEdBQUE1NEIsRUFBQUMsR0FBaUIsSUFBQW5FLEVBQUFrRSxFQUFBK1AsVUFBdUUsT0FBckQsT0FBQWpVLEdBQUFtRSxJQUFBbkUsRUFBQSs1QixjQUFBNTFCLEVBQUFELEVBQUE2MUIsWUFBQXdDLEdBQUFwNEIsSUFBcURBLEVBQ2pYLFNBQUE0NEIsR0FBQTc0QixFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEVBQUFDLEdBQXlCLE9BQUFyRSxFQUFBNFMsS0FBYyxnQ0FBQTFPLEVBQUFsRSxFQUFBeThCLFNBQUF2NEIsRUFBQXBFLEtBQUF1RSxFQUFBcEUsRUFBQW1FLEdBQUFGLEVBQWdFLE9BQUFBLEVBQUFvZ0IsV0FBQSxLQUFBcGdCLEVBQUFvZ0IsVUFBQSxHQUF3QyxPQUEyRCxXQUF4Q2xnQixFQUFBLG1CQUFuQkYsRUFBQWxFLEVBQUF5OEIsU0FBbUJ2NEIsRUFBQXBFLEtBQUF1RSxFQUFBcEUsRUFBQW1FLEdBQUFGLFNBQXdDLElBQUFFLEVBQUEsTUFBOEIsT0FBQTNDLEtBQVd4QixFQUFBbUUsR0FBTSxPQUFBMDNCLElBQUEsRUFBYSxPQUFBNzdCLEVBQ3RRLFNBQUErOEIsR0FBQTk0QixFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEdBQTZCLEdBQU4wM0IsSUFBQSxJQUFNLElBQUEzM0IsRUFBQWkyQixnQkFBQWoyQixFQUFBaTJCLGVBQUFoMkIsR0FBQSxDQUEwRCxRQUFBQyxHQUFWRixFQUFBMjRCLEdBQUE1NEIsRUFBQUMsSUFBVTYzQixVQUFBMXhCLEVBQUEsS0FBQUMsRUFBQSxFQUFBeEMsRUFBQTVELEVBQUE4M0IsWUFBQTc2QixFQUFBaUQsRUFBcUQsT0FBQTBELEdBQVMsQ0FBRSxJQUFBdEgsRUFBQXNILEVBQUFxeUIsZUFBdUIzNUIsRUFBQTJELEdBQVEsT0FBQWtHLE1BQUF2QyxFQUFBMUQsRUFBQWpELElBQUEsSUFBQW1KLEtBQUE5SixLQUFBOEosRUFBQTlKLEtBQXNDVyxFQUFBMjdCLEdBQUE3NEIsRUFBQUMsRUFBQTRELEVBQUEzRyxFQUFBcEIsRUFBQUMsR0FBQSxPQUFBOEgsRUFBQTIwQixXQUFBeDRCLEVBQUFvZ0IsV0FBQSxHQUFBdmMsRUFBQW95QixXQUFBLFlBQUFoMkIsRUFBQTgxQixXQUFBOTFCLEVBQUErMUIsWUFBQS8xQixFQUFBODFCLFdBQUFseUIsR0FBQTVELEVBQUE4MUIsV0FBQUUsV0FBQXB5QixFQUFBNUQsRUFBQTgxQixXQUFBbHlCLEtBQTBLQSxJQUFBMkQsS0FBZ0IsSUFBUGpMLEVBQUEsS0FBT3NILEVBQUE1RCxFQUFBZzRCLG9CQUE0QixPQUFBcDBCLEdBQVMsQ0FBRSxJQUFBSyxFQUFBTCxFQUFBcXlCLGVBQXVCaHlCLEVBQUFoRSxHQUFRLE9BQUEzRCxNQUFBc0gsRUFBQSxPQUM1ZHVDLElBQUFqRyxFQUFBakQsS0FBQSxJQUFBbUosS0FBQW5DLEtBQUFtQyxFQUFBbkMsS0FBeUJoSCxFQUFBMjdCLEdBQUE3NEIsRUFBQUMsRUFBQTRELEVBQUEzRyxFQUFBcEIsRUFBQUMsR0FBQSxPQUFBOEgsRUFBQTIwQixXQUFBeDRCLEVBQUFvZ0IsV0FBQSxHQUFBdmMsRUFBQW95QixXQUFBLFlBQUFoMkIsRUFBQW00QixtQkFBQW40QixFQUFBazRCLG9CQUFBbDRCLEVBQUFtNEIsbUJBQUF2MEIsR0FBQTVELEVBQUFtNEIsbUJBQUFuQyxXQUFBcHlCLEVBQUE1RCxFQUFBbTRCLG1CQUFBdjBCLEtBQWtOQSxJQUFBMkQsS0FBUyxPQUFBcEIsSUFBQW5HLEVBQUErM0IsV0FBQSxNQUE4QixPQUFBejdCLEVBQUEwRCxFQUFBaTRCLG1CQUFBLEtBQUFsNEIsRUFBQW9nQixXQUFBLEdBQW1ELE9BQUFoYSxHQUFBLE9BQUE3SixJQUFBNEQsRUFBQWpELEdBQTBCK0MsRUFBQTYzQixVQUFBMzNCLEVBQWNGLEVBQUE4M0IsWUFBQTN4QixFQUFnQm5HLEVBQUFnNEIsb0JBQUExN0IsRUFBd0IwRCxFQUFBaTJCLGVBQUE3dkIsRUFBbUJyRyxFQUFBNDFCLGNBQUExNEIsR0FDeGEsU0FBQTY3QixHQUFBLzRCLEVBQUFDLEdBQWlCLG1CQUFBRCxHQUFBc0UsRUFBQSxNQUFBdEUsR0FBd0NBLEVBQUFwRSxLQUFBcUUsR0FDekQsU0FBQSs0QixHQUFBaDVCLEVBQUFDLEVBQUFuRSxHQUFvTixJQUFqTSxPQUFBbUUsRUFBQWc0QixzQkFBQSxPQUFBaDRCLEVBQUErM0IsYUFBQS8zQixFQUFBKzNCLFdBQUF4d0IsS0FBQXZILEVBQUFnNEIsb0JBQUFoNEIsRUFBQSszQixXQUFBLzNCLEVBQUFpNEIsb0JBQUFqNEIsRUFBQWc0QixvQkFBQWg0QixFQUFBaTRCLG1CQUFBLE1BQWlMbDRCLEVBQUFDLEVBQUErMUIsWUFBZ0IvMUIsRUFBQSsxQixZQUFBLzFCLEVBQUE4MUIsV0FBQSxLQUFvQyxPQUFBLzFCLEdBQVMsQ0FBRSxJQUFBakUsRUFBQWlFLEVBQUF3NEIsU0FBaUIsT0FBQXo4QixJQUFBaUUsRUFBQXc0QixTQUFBLEtBQUFPLEdBQUFoOUIsRUFBQUQsSUFBb0NrRSxJQUFBaTJCLFdBQXVDLElBQXhCajJCLEVBQUFDLEVBQUFrNEIsb0JBQXdCbDRCLEVBQUFrNEIsb0JBQUFsNEIsRUFBQW00QixtQkFBQSxLQUFvRCxPQUFBcDRCLEdBQVMsUUFBQUMsRUFBQUQsRUFBQXc0QixZQUFBeDRCLEVBQUF3NEIsU0FBQSxLQUFBTyxHQUFBOTRCLEVBQUFuRSxJQUFBa0UsSUFBQWkyQixXQUM1WixTQUFBZ0QsR0FBQWo1QixFQUFBQyxHQUFpQixPQUFPdkQsTUFBQXNELEVBQUFiLE9BQUFjLEVBQUFpNUIsTUFBQWxmLEdBQUEvWixJQUE4QixJQUFBazVCLEdBQUExRSxHQUFBLE1BQUEyRSxHQUFBM0UsR0FBQSxNQUFBNEUsR0FBQTVFLEdBQUEsR0FBcUMsU0FBQTZFLEdBQUF0NUIsR0FBZSxJQUFBQyxFQUFBRCxFQUFBMEcsS0FBQXFDLFNBQXNCbkMsR0FBQXl5QixHQUFBcDVCLEVBQUEwSSxjQUF1Qi9CLEdBQUF3eUIsR0FBQW41QixFQUFBd0ksZUFBd0I3QixHQUFBdXlCLEdBQUFuNUIsR0FBVUMsRUFBQXdJLGNBQUF6SSxFQUFBOFosYUFBQXBkLE1BQXFDdUQsRUFBQTBJLGFBQUEzSSxFQUFBMk4sVUFBMkIsU0FBQTRyQixHQUFBdjVCLEdBQWUsSUFBQUMsRUFBQW81QixHQUFBeHpCLFFBQUEvSixFQUFBczlCLEdBQUF2ekIsUUFBOEJNLEdBQUFnekIsSUFBUWh6QixHQUFBaXpCLElBQVFqekIsR0FBQWt6QixLQUFRcjVCLElBQUEwRyxLQUFBcUMsVUFBa0JOLGNBQUEzTSxFQUFrQmtFLEVBQUEySSxhQUFBMUksRUFBaUIsSUFBQXU1QixNQUFTQyxHQUFBaEYsR0FBQStFLElBQUFFLEdBQUFqRixHQUFBK0UsSUFBQUcsR0FBQWxGLEdBQUErRSxJQUErQixTQUFBSSxHQUFBNTVCLEdBQXNDLE9BQXZCQSxJQUFBdzVCLElBQUFsMUIsRUFBQSxPQUF1QnRFLEVBQ2pjLFNBQUE2NUIsR0FBQTc1QixFQUFBQyxHQUFpQjJHLEdBQUEreUIsR0FBQTE1QixHQUFVMkcsR0FBQTh5QixHQUFBMTVCLEdBQVU0RyxHQUFBNnlCLEdBQUFELElBQVcsSUFBQTE5QixFQUFBbUUsRUFBQThYLFNBQWlCLE9BQUFqYyxHQUFVLGVBQUFtRSxPQUFBeVIsaUJBQUF6UixFQUFBa3RCLGFBQUFMLEdBQUEsU0FBa0UsTUFBTSxRQUFBN3NCLEVBQUE2c0IsR0FBQTdzQixHQUFBbkUsRUFBQSxJQUFBQSxFQUFBbUUsRUFBQXdPLFdBQUF4TyxHQUFBa3RCLGNBQUEsS0FBQXJ4QixJQUFBZytCLFNBQTRFM3pCLEdBQUFzekIsSUFBUTd5QixHQUFBNnlCLEdBQUF4NUIsR0FBVSxTQUFBODVCLEdBQUEvNUIsR0FBZW1HLEdBQUFzekIsSUFBUXR6QixHQUFBdXpCLElBQVF2ekIsR0FBQXd6QixJQUFRLFNBQUFLLEdBQUFoNkIsR0FBZTA1QixHQUFBN3pCLFVBQUE3RixJQUFBbUcsR0FBQXN6QixJQUFBdHpCLEdBQUF1ekIsS0FBa0MsU0FBQU8sR0FBQWo2QixFQUFBQyxFQUFBbkUsR0FBbUIsSUFBQUMsRUFBQWlFLEVBQUE0MUIsY0FBK0I3NUIsRUFBQSxRQUFUa0UsSUFBQW5FLEVBQUFDLFVBQVMsSUFBQWtFLEVBQUFsRSxFQUFBd0IsS0FBNkJ4QixFQUFBa0UsR0FBTUQsRUFBQTQxQixjQUFBNzVCLEVBQWtDLFFBQWhCaUUsSUFBQTYxQixjQUFnQixJQUFBNzFCLEVBQUFrMkIsaUJBQUFsMkIsRUFBQTgzQixVQUFBLzdCLEdBQ2hjLElBQUFtK0IsSUFBUXIxQixVQUFBLFNBQUE3RSxHQUFzQixTQUFBQSxJQUFBbTZCLHNCQUFBLElBQUFoYSxHQUFBbmdCLElBQTZDZ0YsZ0JBQUEsU0FBQWhGLEVBQUFDLEVBQUFuRSxHQUFpQ2tFLElBQUFtNkIsb0JBQXdCLElBQUFwK0IsRUFBQXErQixLQUFxQmw2QixFQUFBbzRCLEdBQVZ2OEIsRUFBQXMrQixHQUFBdCtCLEVBQUFpRSxJQUFzQkUsRUFBQXE0QixRQUFBdDRCLE9BQVksSUFBQW5FLEdBQUEsT0FBQUEsSUFBQW9FLEVBQUFzNEIsU0FBQTE4QixHQUFxQzQ4QixHQUFBMTRCLEVBQUFFLEVBQUFuRSxHQUFVdStCLEdBQUF0NkIsRUFBQWpFLElBQVFnSixvQkFBQSxTQUFBL0UsRUFBQUMsRUFBQW5FLEdBQXFDa0UsSUFBQW02QixvQkFBd0IsSUFBQXArQixFQUFBcStCLEtBQXFCbDZCLEVBQUFvNEIsR0FBVnY4QixFQUFBcytCLEdBQUF0K0IsRUFBQWlFLElBQXNCRSxFQUFBd08sSUFBQSxFQUFReE8sRUFBQXE0QixRQUFBdDRCLE9BQVksSUFBQW5FLEdBQUEsT0FBQUEsSUFBQW9FLEVBQUFzNEIsU0FBQTE4QixHQUFxQzQ4QixHQUFBMTRCLEVBQUFFLEVBQUFuRSxHQUFVdStCLEdBQUF0NkIsRUFBQWpFLElBQVErSSxtQkFBQSxTQUFBOUUsRUFBQUMsR0FBa0NELElBQUFtNkIsb0JBQXdCLElBQUFyK0IsRUFBQXMrQixLQUFxQnIrQixFQUFBdThCLEdBQVZ4OEIsRUFBQXUrQixHQUFBditCLEVBQUFrRSxJQUFzQmpFLEVBQUEyUyxJQUFBLE9BQVEsSUFDcGZ6TyxHQUFBLE9BQUFBLElBQUFsRSxFQUFBeThCLFNBQUF2NEIsR0FBNEJ5NEIsR0FBQTE0QixFQUFBakUsRUFBQUQsR0FBVXcrQixHQUFBdDZCLEVBQUFsRSxLQUFVLFNBQUF5K0IsR0FBQXY2QixFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEVBQUFDLEdBQXlCLElBQUFpRyxFQUFBcEcsRUFBQTJOLFVBQTJCLE9BQVQzTixJQUFBMEcsS0FBUyxtQkFBQU4sRUFBQW8wQixzQkFBQXAwQixFQUFBbzBCLHNCQUFBMStCLEVBQUFvRSxFQUFBQyxJQUFBSCxFQUFBM0MsWUFBQTJDLEVBQUEzQyxVQUFBc0ksd0JBQUF1RSxFQUFBakssRUFBQW5FLEtBQUFvTyxFQUFBbk8sRUFBQW1FLElBQ3BHLFNBQUF1NkIsR0FBQXo2QixFQUFBQyxFQUFBbkUsRUFBQUMsR0FBcUJpRSxFQUFBQyxFQUFBaUMsTUFBVSxtQkFBQWpDLEVBQUF5NkIsMkJBQUF6NkIsRUFBQXk2QiwwQkFBQTUrQixFQUFBQyxHQUFrRixtQkFBQWtFLEVBQUEwNkIsa0NBQUExNkIsRUFBQTA2QixpQ0FBQTcrQixFQUFBQyxHQUFnR2tFLEVBQUFpQyxRQUFBbEMsR0FBQWs2QixHQUFBbjFCLG9CQUFBOUUsSUFBQWlDLE1BQUEsTUFDak4sU0FBQTA0QixHQUFBNTZCLEVBQUFDLEdBQWlCLElBQUFuRSxFQUFBa0UsRUFBQTBHLEtBQUEzSyxFQUFBaUUsRUFBQTJOLFVBQUF6TixFQUFBRixFQUFBOFosYUFBQTNaLEVBQUF5MEIsR0FBQTUwQixHQUFvRGpFLEVBQUE2RixNQUFBMUIsRUFBVW5FLEVBQUFtRyxNQUFBbEMsRUFBQTQxQixjQUF3Qjc1QixFQUFBb0osS0FBQWlGLEVBQVVyTyxFQUFBbUosUUFBQTR2QixHQUFBOTBCLEVBQUFHLEdBQWtDLFFBQWhCQSxFQUFBSCxFQUFBNjFCLGVBQWdCaUQsR0FBQTk0QixFQUFBRyxFQUFBRCxFQUFBbkUsRUFBQWtFLEdBQUFsRSxFQUFBbUcsTUFBQWxDLEVBQUE0MUIsZUFBb0YsbUJBQWxDejFCLEVBQUFILEVBQUEwRyxLQUFBbTBCLDRCQUFrQ1osR0FBQWo2QixFQUFBRyxFQUFBRCxHQUFBbkUsRUFBQW1HLE1BQUFsQyxFQUFBNDFCLGVBQTJELG1CQUFBOTVCLEVBQUErK0IsMEJBQUEsbUJBQUE5K0IsRUFBQSsrQix5QkFBQSxtQkFBQS8rQixFQUFBZy9CLDJCQUFBLG1CQUFBaC9CLEVBQUFpL0IscUJBQUFsL0IsRUFBQUMsRUFBQW1HLE1BQUEsbUJBQUFuRyxFQUFBaS9CLG9CQUNsU2ovQixFQUFBaS9CLHFCQUFBLG1CQUFBai9CLEVBQUFnL0IsMkJBQUFoL0IsRUFBQWcvQiw0QkFBQWovQixJQUFBQyxFQUFBbUcsT0FBQWc0QixHQUFBbjFCLG9CQUFBaEosSUFBQW1HLE1BQUEsY0FBQS9CLEVBQUFILEVBQUE2MUIsZUFBQWlELEdBQUE5NEIsRUFBQUcsRUFBQUQsRUFBQW5FLEVBQUFrRSxHQUFBbEUsRUFBQW1HLE1BQUFsQyxFQUFBNDFCLGdCQUE2TixtQkFBQTc1QixFQUFBay9CLG9CQUFBajdCLEVBQUFvZ0IsV0FBQSxHQUEwRCxJQUFBOGEsR0FBQTMwQixNQUFBZ0IsUUFDdlIsU0FBQTR6QixHQUFBbjdCLEVBQUFDLEVBQUFuRSxHQUEyQixXQUFSa0UsRUFBQWxFLEVBQUFrSyxNQUFRLG1CQUFBaEcsR0FBQSxpQkFBQUEsRUFBQSxDQUF5RCxHQUFBbEUsRUFBQTZLLE9BQUEsQ0FBd0IsSUFBQTVLLE9BQUEsR0FBWEQsSUFBQTZLLFVBQXdCLElBQUE3SyxFQUFBNFMsS0FBQXBLLEVBQUEsT0FBQXZJLEVBQUFELEVBQUE2UixXQUE2QzVSLEdBQUF1SSxFQUFBLE1BQUF0RSxHQUFvQixJQUFBRSxFQUFBLEdBQUFGLEVBQVcsY0FBQUMsR0FBQSxPQUFBQSxFQUFBK0YsS0FBQSxtQkFBQS9GLEVBQUErRixLQUFBL0YsRUFBQStGLElBQUFvMUIsYUFBQWw3QixFQUFBRCxFQUFBK0YsTUFBd0YvRixFQUFBLFNBQUFELEdBQWMsSUFBQUMsRUFBQWxFLEVBQUFvSixPQUFBaUYsRUFBQXJPLEVBQUFvSixRQUEyQnBKLEVBQUFvSixLQUFRLE9BQUFuRixTQUFBQyxFQUFBQyxHQUFBRCxFQUFBQyxHQUFBRixJQUE2Qm83QixXQUFBbDdCLEVBQWVELEdBQVMsaUJBQUFELEdBQUFzRSxFQUFBLE9BQW9DeEksRUFBQTZLLFFBQUFyQyxFQUFBLE1BQUF0RSxHQUEyQixPQUFBQSxFQUNsYyxTQUFBcTdCLEdBQUFyN0IsRUFBQUMsR0FBaUIsYUFBQUQsRUFBQTBHLE1BQUFwQyxFQUFBLHlCQUFBbkksT0FBQWtCLFVBQUF1SyxTQUFBaE0sS0FBQXFFLEdBQUEscUJBQXFHOUQsT0FBQTRDLEtBQUFrQixHQUFBdkIsS0FBQSxVQUE4QnVCLEVBQUEsSUFDcEosU0FBQXE3QixHQUFBdDdCLEdBQWUsU0FBQUMsSUFBQW5FLEdBQWdCLEdBQUFrRSxFQUFBLENBQU0sSUFBQWpFLEVBQUFrRSxFQUFBODFCLFdBQW1CLE9BQUFoNkIsS0FBQWs2QixXQUFBbjZCLEVBQUFtRSxFQUFBODFCLFdBQUFqNkIsR0FBQW1FLEVBQUErMUIsWUFBQS8xQixFQUFBODFCLFdBQUFqNkIsRUFBc0VBLEVBQUFtNkIsV0FBQSxLQUFrQm42QixFQUFBc2tCLFVBQUEsR0FBZSxTQUFBdGtCLElBQUFDLEdBQWdCLElBQUFpRSxFQUFBLFlBQWtCLEtBQUssT0FBQWpFLEdBQVNrRSxFQUFBbkUsRUFBQUMsT0FBQXlrQixRQUFvQixZQUFZLFNBQUF6a0IsRUFBQWlFLEVBQUFDLEdBQWdCLElBQUFELEVBQUEsSUFBQXdyQixJQUFjLE9BQUF2ckIsR0FBUyxPQUFBQSxFQUFBakQsSUFBQWdELEVBQUFzWSxJQUFBclksRUFBQWpELElBQUFpRCxHQUFBRCxFQUFBc1ksSUFBQXJZLEVBQUFnRCxNQUFBaEQsT0FBQXVnQixRQUEwRCxPQUFBeGdCLEVBQVMsU0FBQUUsRUFBQUYsRUFBQUMsRUFBQW5FLEdBQXVELE9BQXJDa0UsRUFBQW0yQixHQUFBbjJCLEVBQUFDLEVBQUFuRSxJQUFZbUgsTUFBQSxFQUFVakQsRUFBQXdnQixRQUFBLEtBQWV4Z0IsRUFBUyxTQUFBRyxFQUFBRixFQUFBbkUsRUFBQUMsR0FBNEIsT0FBVmtFLEVBQUFnRCxNQUFBbEgsRUFBVWlFLEVBQTZCLFFBQWRqRSxFQUFBa0UsRUFBQThQLFlBQWNoVSxJQUFBa0gsT0FBQW5ILEdBQUFtRSxFQUFBbWdCLFVBQ2xkLEVBQUF0a0IsR0FBQUMsR0FBT2tFLEVBQUFtZ0IsVUFBQSxFQUFjdGtCLEdBRGdhQSxFQUN2WixTQUFBc0ssRUFBQW5HLEdBQXFELE9BQXZDRCxHQUFBLE9BQUFDLEVBQUE4UCxZQUFBOVAsRUFBQW1nQixVQUFBLEdBQXVDbmdCLEVBQVMsU0FBQW9HLEVBQUFyRyxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBb0IsY0FBQWtFLEdBQUEsSUFBQUEsRUFBQXlPLE1BQUF6TyxFQUFBcTJCLEdBQUF4NkIsRUFBQWtFLEVBQUFwRCxLQUFBYixJQUFBcVQsT0FBQXBQLEVBQUFDLEtBQTREQSxFQUFBQyxFQUFBRCxFQUFBbkUsRUFBQUMsSUFBV3FULE9BQUFwUCxFQUFXQyxHQUFTLFNBQUE0RCxFQUFBN0QsRUFBQUMsRUFBQW5FLEVBQUFDLEdBQW9CLGNBQUFrRSxLQUFBeUcsT0FBQTVLLEVBQUE0SyxPQUFBM0ssRUFBQW1FLEVBQUFELEVBQUFuRSxFQUFBOEYsTUFBQTdGLElBQUFpSyxJQUFBbTFCLEdBQUFuN0IsRUFBQUMsRUFBQW5FLEdBQUFDLEVBQUFxVCxPQUFBcFAsRUFBQWpFLEtBQWtGQSxFQUFBcTZCLEdBQUF0NkIsRUFBQWtFLEVBQUFwRCxLQUFBYixJQUFpQmlLLElBQUFtMUIsR0FBQW43QixFQUFBQyxFQUFBbkUsR0FBZ0JDLEVBQUFxVCxPQUFBcFAsRUFBV2pFLEdBQVMsU0FBQW1CLEVBQUE4QyxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBb0IsY0FBQWtFLEdBQUEsSUFBQUEsRUFBQXlPLEtBQUF6TyxFQUFBME4sVUFBQXlZLGdCQUFBdHFCLEVBQUFzcUIsZUFBQW5tQixFQUFBME4sVUFBQThvQixpQkFBQTM2QixFQUFBMjZCLGlCQUFBeDJCLEVBQzFYczJCLEdBQUF6NkIsRUFBQWtFLEVBQUFwRCxLQUFBYixJQUFBcVQsT0FBQXBQLEVBQUFDLEtBQTRCQSxFQUFBQyxFQUFBRCxFQUFBbkUsRUFBQXdLLGFBQUF2SyxJQUF3QnFULE9BQUFwUCxFQUFXQyxHQUFTLFNBQUExRCxFQUFBeUQsRUFBQUMsRUFBQW5FLEVBQUFDLEVBQUFvRSxHQUFzQixjQUFBRixHQUFBLEtBQUFBLEVBQUF5TyxNQUFBek8sRUFBQW8yQixHQUFBdjZCLEVBQUFrRSxFQUFBcEQsS0FBQWIsRUFBQW9FLElBQUFpUCxPQUFBcFAsRUFBQUMsS0FBK0RBLEVBQUFDLEVBQUFELEVBQUFuRSxFQUFBQyxJQUFXcVQsT0FBQXBQLEVBQVdDLEdBQVMsU0FBQWlFLEVBQUFsRSxFQUFBQyxFQUFBbkUsR0FBa0Isb0JBQUFtRSxHQUFBLGlCQUFBQSxFQUFBLE9BQUFBLEVBQUFxMkIsR0FBQSxHQUFBcjJCLEVBQUFELEVBQUFwRCxLQUFBZCxJQUFBc1QsT0FBQXBQLEVBQUFDLEVBQW9GLG9CQUFBQSxHQUFBLE9BQUFBLEVBQUEsQ0FBa0MsT0FBQUEsRUFBQXdHLFVBQW1CLEtBQUF1UyxHQUFBLE9BQUFsZCxFQUFBczZCLEdBQUFuMkIsRUFBQUQsRUFBQXBELEtBQUFkLElBQUFrSyxJQUFBbTFCLEdBQUFuN0IsRUFBQSxLQUFBQyxHQUFBbkUsRUFBQXNULE9BQUFwUCxFQUFBbEUsRUFBZ0UsS0FBQW1kLEdBQUEsT0FBQWhaLEVBQUFzMkIsR0FBQXQyQixFQUFBRCxFQUFBcEQsS0FBQWQsSUFBQXNULE9BQUFwUCxFQUFBQyxFQUE2QyxHQUFBaTdCLEdBQUFqN0IsSUFBQTBaLEdBQUExWixHQUFBLE9BQUFBLEVBQUFvMkIsR0FBQXAyQixFQUFBRCxFQUFBcEQsS0FBQWQsRUFBQSxPQUFBc1QsT0FDcGNwUCxFQUFBQyxFQUFJbzdCLEdBQUFyN0IsRUFBQUMsR0FBUSxZQUFZLFNBQUE2RyxFQUFBOUcsRUFBQUMsRUFBQW5FLEVBQUFDLEdBQW9CLElBQUFtRSxFQUFBLE9BQUFELElBQUFqRCxJQUFBLEtBQTBCLG9CQUFBbEIsR0FBQSxpQkFBQUEsRUFBQSxjQUFBb0UsRUFBQSxLQUFBbUcsRUFBQXJHLEVBQUFDLEVBQUEsR0FBQW5FLEVBQUFDLEdBQStFLG9CQUFBRCxHQUFBLE9BQUFBLEVBQUEsQ0FBa0MsT0FBQUEsRUFBQTJLLFVBQW1CLEtBQUF1UyxHQUFBLE9BQUFsZCxFQUFBa0IsTUFBQWtELEVBQUFwRSxFQUFBNEssT0FBQXdTLEdBQUEzYyxFQUFBeUQsRUFBQUMsRUFBQW5FLEVBQUE4RixNQUFBMEUsU0FBQXZLLEVBQUFtRSxHQUFBMkQsRUFBQTdELEVBQUFDLEVBQUFuRSxFQUFBQyxHQUFBLEtBQWlGLEtBQUFrZCxHQUFBLE9BQUFuZCxFQUFBa0IsTUFBQWtELEVBQUFoRCxFQUFBOEMsRUFBQUMsRUFBQW5FLEVBQUFDLEdBQUEsS0FBeUMsR0FBQW0vQixHQUFBcC9CLElBQUE2ZCxHQUFBN2QsR0FBQSxjQUFBb0UsRUFBQSxLQUFBM0QsRUFBQXlELEVBQUFDLEVBQUFuRSxFQUFBQyxFQUFBLE1BQXFEcy9CLEdBQUFyN0IsRUFBQWxFLEdBQVEsWUFBWSxTQUFBeS9CLEVBQUF2N0IsRUFBQUMsRUFBQW5FLEVBQUFDLEVBQUFtRSxHQUF1QixvQkFBQW5FLEdBQUEsaUJBQUFBLEVBQUEsT0FBQXNLLEVBQUFwRyxFQUFBRCxJQUFBMUQsSUFBQVIsSUFBQSxRQUFBQyxFQUFBbUUsR0FDcGEsb0JBQUFuRSxHQUFBLE9BQUFBLEVBQUEsQ0FBa0MsT0FBQUEsRUFBQTBLLFVBQW1CLEtBQUF1UyxHQUFBLE9BQUFoWixJQUFBMUQsSUFBQSxPQUFBUCxFQUFBaUIsSUFBQWxCLEVBQUFDLEVBQUFpQixNQUFBLEtBQUFqQixFQUFBMkssT0FBQXdTLEdBQUEzYyxFQUFBMEQsRUFBQUQsRUFBQWpFLEVBQUE2RixNQUFBMEUsU0FBQXBHLEVBQUFuRSxFQUFBaUIsS0FBQTZHLEVBQUE1RCxFQUFBRCxFQUFBakUsRUFBQW1FLEdBQTBHLEtBQUErWSxHQUFBLE9BQUEvYixFQUFBK0MsRUFBQUQsSUFBQTFELElBQUEsT0FBQVAsRUFBQWlCLElBQUFsQixFQUFBQyxFQUFBaUIsTUFBQSxLQUFBakIsRUFBQW1FLEdBQThELEdBQUFnN0IsR0FBQW4vQixJQUFBNGQsR0FBQTVkLEdBQUEsT0FBQVEsRUFBQTBELEVBQUFELElBQUExRCxJQUFBUixJQUFBLEtBQUFDLEVBQUFtRSxFQUFBLE1BQXdEbTdCLEdBQUFwN0IsRUFBQWxFLEdBQVEsWUFBWSxTQUFBeS9CLEVBQUF0N0IsRUFBQWtHLEVBQUFDLEVBQUF4QyxHQUFxQixRQUFBRyxFQUFBLEtBQUFHLEVBQUEsS0FBQXhILEVBQUF5SixFQUFBdEMsRUFBQXNDLEVBQUEsRUFBQWxKLEVBQUEsS0FBdUMsT0FBQVAsR0FBQW1ILEVBQUF1QyxFQUFBekcsT0FBcUJrRSxJQUFBLENBQUtuSCxFQUFBc0csTUFBQWEsR0FBQTVHLEVBQUFQLElBQUEsTUFBQU8sRUFBQVAsRUFBQTZqQixRQUFtQyxJQUFBOWtCLEVBQUFvTCxFQUFBNUcsRUFBQXZELEVBQUEwSixFQUFBdkMsR0FBQUQsR0FBb0IsVUFBQW5JLEVBQUEsQ0FBYSxPQUFBaUIsTUFBQU8sR0FBZ0IsTUFBTThDLEdBQUFyRCxHQUFBLE9BQUFqQixFQUFBcVUsV0FBQTlQLEVBQUFDLEVBQ3pkdkQsR0FBR3lKLEVBQUFqRyxFQUFBekUsRUFBQTBLLEVBQUF0QyxHQUFXLE9BQUFLLEVBQUFILEVBQUF0SSxFQUFBeUksRUFBQXFjLFFBQUE5a0IsRUFBeUJ5SSxFQUFBekksRUFBSWlCLEVBQUFPLEVBQUksR0FBQTRHLElBQUF1QyxFQUFBekcsT0FBQSxPQUFBOUQsRUFBQW9FLEVBQUF2RCxHQUFBcUgsRUFBZ0MsVUFBQXJILEVBQUEsQ0FBYSxLQUFLbUgsRUFBQXVDLEVBQUF6RyxPQUFXa0UsS0FBQW5ILEVBQUF1SCxFQUFBaEUsRUFBQW1HLEVBQUF2QyxHQUFBRCxNQUFBdUMsRUFBQWpHLEVBQUF4RCxFQUFBeUosRUFBQXRDLEdBQUEsT0FBQUssRUFBQUgsRUFBQXJILEVBQUF3SCxFQUFBcWMsUUFBQTdqQixFQUFBd0gsRUFBQXhILEdBQTZELE9BQUFxSCxFQUFTLElBQUFySCxFQUFBWixFQUFBbUUsRUFBQXZELEdBQWFtSCxFQUFBdUMsRUFBQXpHLE9BQVdrRSxLQUFBNUcsRUFBQXErQixFQUFBNStCLEVBQUF1RCxFQUFBNEQsRUFBQXVDLEVBQUF2QyxHQUFBRCxNQUFBN0QsR0FBQSxPQUFBOUMsRUFBQTZTLFdBQUFwVCxFQUFBK3VCLE9BQUEsT0FBQXh1QixFQUFBRixJQUFBOEcsRUFBQTVHLEVBQUFGLEtBQUFvSixFQUFBakcsRUFBQWpELEVBQUFrSixFQUFBdEMsR0FBQSxPQUFBSyxFQUFBSCxFQUFBOUcsRUFBQWlILEVBQUFxYyxRQUFBdGpCLEVBQUFpSCxFQUFBakgsR0FBaUssT0FBekM4QyxHQUFBckQsRUFBQWtDLFFBQUEsU0FBQW1CLEdBQXlCLE9BQUFDLEVBQUFDLEVBQUFGLEtBQWdCZ0UsRUFBUyxTQUFBWSxFQUFBMUUsRUFBQWtHLEVBQUFDLEVBQUF4QyxHQUFvQixJQUFBRyxFQUFBMlYsR0FBQXRULEdBQVksbUJBQUFyQyxHQUFBTSxFQUFBLE9BQWtELE9BQVorQixFQUFBckMsRUFBQXBJLEtBQUF5SyxLQUFZL0IsRUFBQSxPQUF3QixRQUFBM0gsRUFBQXFILEVBQUEsS0FBQTlHLEVBQUFrSixFQUFBakMsRUFDOWRpQyxFQUFBLEVBQUFoQyxFQUFBLEtBQUExSSxFQUFBMkssRUFBQW1CLE9BQXNCLE9BQUF0SyxJQUFBeEIsRUFBQXFILEtBQWtCb0IsSUFBQXpJLEVBQUEySyxFQUFBbUIsT0FBQSxDQUFnQnRLLEVBQUErRixNQUFBa0IsR0FBQUMsRUFBQWxILElBQUEsTUFBQWtILEVBQUFsSCxFQUFBc2pCLFFBQW1DLElBQUFqa0IsRUFBQXVLLEVBQUE1RyxFQUFBaEQsRUFBQXhCLEVBQUFnQixNQUFBbUgsR0FBdUIsVUFBQXRILEVBQUEsQ0FBYVcsTUFBQWtILEdBQVMsTUFBTXBFLEdBQUE5QyxHQUFBLE9BQUFYLEVBQUF3VCxXQUFBOVAsRUFBQUMsRUFBQWhELEdBQWlDa0osRUFBQWpHLEVBQUE1RCxFQUFBNkosRUFBQWpDLEdBQVcsT0FBQXhILEVBQUFxSCxFQUFBekgsRUFBQUksRUFBQTZqQixRQUFBamtCLEVBQXlCSSxFQUFBSixFQUFJVyxFQUFBa0gsRUFBSSxHQUFBMUksRUFBQXFILEtBQUEsT0FBQWpILEVBQUFvRSxFQUFBaEQsR0FBQThHLEVBQTBCLFVBQUE5RyxFQUFBLENBQWEsTUFBS3hCLEVBQUFxSCxLQUFRb0IsSUFBQXpJLEVBQUEySyxFQUFBbUIsT0FBQSxRQUFBOUwsRUFBQXdJLEVBQUFoRSxFQUFBeEUsRUFBQWdCLE1BQUFtSCxNQUFBdUMsRUFBQWpHLEVBQUF6RSxFQUFBMEssRUFBQWpDLEdBQUEsT0FBQXhILEVBQUFxSCxFQUFBdEksRUFBQWlCLEVBQUE2akIsUUFBQTlrQixFQUFBaUIsRUFBQWpCLEdBQW9GLE9BQUFzSSxFQUFTLElBQUE5RyxFQUFBbkIsRUFBQW1FLEVBQUFoRCxJQUFheEIsRUFBQXFILEtBQVFvQixJQUFBekksRUFBQTJLLEVBQUFtQixPQUFBLFFBQUE5TCxFQUFBNi9CLEVBQUFyK0IsRUFBQWdELEVBQUFpRSxFQUFBekksRUFBQWdCLE1BQUFtSCxNQUFBN0QsR0FBQSxPQUFBdEUsRUFBQXFVLFdBQUE3UyxFQUFBd3VCLE9BQUEsT0FBQWh3QixFQUFBc0IsSUFBQW1ILEVBQUF6SSxFQUFBc0IsS0FBQW9KLEVBQUFqRyxFQUFBekUsRUFBQTBLLEVBQUFqQyxHQUFBLE9BQ2pZeEgsRUFBQXFILEVBQUF0SSxFQUFBaUIsRUFBQTZqQixRQUFBOWtCLEVBQUFpQixFQUFBakIsR0FBZ0UsT0FBekNzRSxHQUFBOUMsRUFBQTJCLFFBQUEsU0FBQW1CLEdBQXlCLE9BQUFDLEVBQUFDLEVBQUFGLEtBQWdCZ0UsRUFBUyxnQkFBQWhFLEVBQUFqRSxFQUFBb0UsRUFBQWtHLEdBQXlCLElBQUF4QyxFQUFBLGlCQUFBMUQsR0FBQSxPQUFBQSxLQUFBdUcsT0FBQXdTLElBQUEsT0FBQS9ZLEVBQUFuRCxJQUErRDZHLElBQUExRCxJQUFBeUIsTUFBQTBFLFVBQXdCLElBQUFwSixFQUFBLGlCQUFBaUQsR0FBQSxPQUFBQSxFQUFvQyxHQUFBakQsRUFBQSxPQUFBaUQsRUFBQXNHLFVBQXdCLEtBQUF1UyxHQUFBaFosRUFBQSxDQUFtQixJQUFSOUMsRUFBQWlELEVBQUFuRCxJQUFRNkcsRUFBQTlILEVBQVEsT0FBQThILEdBQVMsQ0FBRSxHQUFBQSxFQUFBN0csTUFBQUUsRUFBQSxTQUFBMkcsRUFBQTZLLElBQUF2TyxFQUFBdUcsT0FBQXdTLEdBQUFyVixFQUFBNkMsT0FBQXZHLEVBQUF1RyxLQUFBLENBQXdENUssRUFBQWtFLEVBQUE2RCxFQUFBMmMsVUFBZXprQixFQUFBbUUsRUFBQTJELEVBQUExRCxFQUFBdUcsT0FBQXdTLEdBQUEvWSxFQUFBeUIsTUFBQTBFLFNBQUFuRyxFQUFBeUIsTUFBQXlFLElBQThDTCxJQUFBbTFCLEdBQUFuN0IsRUFBQTZELEVBQUExRCxHQUFnQnBFLEVBQUFxVCxPQUFBcFAsRUFBV0EsRUFBQWpFLEVBQUksTUFBQWlFLEVBQWFsRSxFQUFBa0UsRUFBQTZELEdBQU8sTUFBTTVELEVBQUFELEVBQUE2RCxHQUFZQSxJQUFBMmMsUUFBWXJnQixFQUFBdUcsT0FBQXdTLEtBQUFuZCxFQUFBczZCLEdBQUFsMkIsRUFBQXlCLE1BQUEwRSxTQUNqZXRHLEVBQUFwRCxLQUFBeUosRUFBQWxHLEVBQUFuRCxNQUFBb1MsT0FBQXBQLElBQUFqRSxLQUFBc0ssRUFBQSt2QixHQUFBajJCLEVBQUFILEVBQUFwRCxLQUFBeUosSUFBQUwsSUFBQW0xQixHQUFBbjdCLEVBQUFqRSxFQUFBb0UsR0FBQWtHLEVBQUErSSxPQUFBcFAsSUFBQXFHLEdBQWtGLE9BQUFELEVBQUFwRyxHQUFZLEtBQUFpWixHQUFBalosRUFBQSxDQUFXLElBQUE2RCxFQUFBMUQsRUFBQW5ELElBQVksT0FBQWpCLEdBQVMsQ0FBRSxHQUFBQSxFQUFBaUIsTUFBQTZHLEVBQUEsUUFBQTlILEVBQUEyUyxLQUFBM1MsRUFBQTRSLFVBQUF5WSxnQkFBQWptQixFQUFBaW1CLGVBQUFycUIsRUFBQTRSLFVBQUE4b0IsaUJBQUF0MkIsRUFBQXMyQixlQUFBLENBQXVIMzZCLEVBQUFrRSxFQUFBakUsRUFBQXlrQixVQUFlemtCLEVBQUFtRSxFQUFBbkUsRUFBQW9FLEVBQUFtRyxhQUFBRCxJQUF3QitJLE9BQUFwUCxFQUFXQSxFQUFBakUsRUFBSSxNQUFBaUUsRUFBYWxFLEVBQUFrRSxFQUFBakUsR0FBTyxNQUFNa0UsRUFBQUQsRUFBQWpFLEdBQVlBLElBQUF5a0IsU0FBWXprQixFQUFBdzZCLEdBQUFwMkIsRUFBQUgsRUFBQXBELEtBQUF5SixJQUFpQitJLE9BQUFwUCxFQUFXQSxFQUFBakUsRUFBSSxPQUFBcUssRUFBQXBHLEdBQVksb0JBQUFHLEdBQUEsaUJBQUFBLEVBQUEsT0FBQUEsRUFBQSxHQUFBQSxFQUFBLE9BQUFwRSxHQUFBLElBQUFBLEVBQUEyUyxLQUFBNVMsRUFBQWtFLEVBQUFqRSxFQUFBeWtCLFVBQUF6a0IsRUFBQW1FLEVBQUFuRSxFQUFBb0UsRUFBQWtHLElBQUErSSxPQUMzWXBQLElBQUFqRSxJQUFBRCxFQUFBa0UsRUFBQWpFLE1BQUF1NkIsR0FBQW4yQixFQUFBSCxFQUFBcEQsS0FBQXlKLElBQUErSSxPQUFBcFAsSUFBQWpFLEdBQUFxSyxFQUFBcEcsR0FBcUQsR0FBQWs3QixHQUFBLzZCLEdBQUEsT0FBQXE3QixFQUFBeDdCLEVBQUFqRSxFQUFBb0UsRUFBQWtHLEdBQTRCLEdBQUFzVCxHQUFBeFosR0FBQSxPQUFBeUUsRUFBQTVFLEVBQUFqRSxFQUFBb0UsRUFBQWtHLEdBQXNDLEdBQVhuSixHQUFBbStCLEdBQUFyN0IsRUFBQUcsUUFBVyxJQUFBQSxJQUFBMEQsRUFBQSxPQUFBN0QsRUFBQTBPLEtBQTRDLGNBQUFwSyxFQUFBLE9BQUErQixFQUFBckcsRUFBQTBHLE1BQUFtVCxhQUFBeFQsRUFBQXJLLE1BQUEsYUFBbUUsT0FBQUYsRUFBQWtFLEVBQUFqRSxJQUFlLElBQUEwL0IsR0FBQUgsSUFBQSxHQUFBSSxHQUFBSixJQUFBLEdBQUFLLEdBQUEsS0FBQUMsR0FBQSxLQUFBQyxJQUFBLEVBQThDLFNBQUFDLEdBQUE5N0IsRUFBQUMsR0FBaUIsSUFBQW5FLEVBQUEsSUFBQTY1QixHQUFBLGVBQTRCNzVCLEVBQUE0SyxLQUFBLFVBQWlCNUssRUFBQTZSLFVBQUExTixFQUFjbkUsRUFBQXNULE9BQUFwUCxFQUFXbEUsRUFBQXNrQixVQUFBLEVBQWMsT0FBQXBnQixFQUFBKzFCLFlBQUEvMUIsRUFBQSsxQixXQUFBRSxXQUFBbjZCLEVBQUFrRSxFQUFBKzFCLFdBQUFqNkIsR0FBQWtFLEVBQUFnMkIsWUFBQWgyQixFQUFBKzFCLFdBQUFqNkIsRUFDeFksU0FBQWlnQyxHQUFBLzdCLEVBQUFDLEdBQWlCLE9BQUFELEVBQUEwTyxLQUFjLFdBQUE1UyxFQUFBa0UsRUFBQTBHLEtBQXdGLGVBQXBFekcsRUFBQSxJQUFBQSxFQUFBOFgsVUFBQWpjLEVBQUF3VSxnQkFBQXJRLEVBQUEwWCxTQUFBckgsY0FBQSxLQUFBclEsS0FBb0VELEVBQUEyTixVQUFBMU4sR0FBQSxHQUFzQyxzQkFBQUEsRUFBQSxLQUFBRCxFQUFBOFosY0FBQSxJQUFBN1osRUFBQThYLFNBQUEsS0FBQTlYLEtBQUFELEVBQUEyTixVQUFBMU4sR0FBQSxHQUEwRixrQkFBa0IsU0FBQSs3QixHQUFBaDhCLEdBQWUsR0FBQTY3QixHQUFBLENBQU8sSUFBQTU3QixFQUFBMjdCLEdBQVMsR0FBQTM3QixFQUFBLENBQU0sSUFBQW5FLEVBQUFtRSxFQUFRLElBQUE4N0IsR0FBQS83QixFQUFBQyxHQUFBLENBQXFCLEtBQVJBLEVBQUFtMEIsR0FBQXQ0QixNQUFRaWdDLEdBQUEvN0IsRUFBQUMsR0FBMkMsT0FBMUJELEVBQUFvZ0IsV0FBQSxFQUFleWIsSUFBQSxPQUFNRixHQUFBMzdCLEdBQVk4N0IsR0FBQUgsR0FBQTcvQixHQUFTNi9CLEdBQUEzN0IsRUFBSzQ3QixHQUFBdkgsR0FBQXAwQixRQUFTRCxFQUFBb2dCLFdBQUEsRUFBQXliLElBQUEsRUFBQUYsR0FBQTM3QixHQUNwWixTQUFBaThCLEdBQUFqOEIsR0FBZSxJQUFBQSxJQUFBb1AsT0FBZSxPQUFBcFAsR0FBQSxJQUFBQSxFQUFBME8sS0FBQSxJQUFBMU8sRUFBQTBPLEtBQStCMU8sSUFBQW9QLE9BQVl1c0IsR0FBQTM3QixFQUFLLFNBQUFrOEIsR0FBQWw4QixHQUFlLEdBQUFBLElBQUEyN0IsR0FBQSxTQUFtQixJQUFBRSxHQUFBLE9BQUFJLEdBQUFqOEIsR0FBQTY3QixJQUFBLEtBQTZCLElBQUE1N0IsRUFBQUQsRUFBQTBHLEtBQWEsT0FBQTFHLEVBQUEwTyxLQUFBLFNBQUF6TyxHQUFBLFNBQUFBLElBQUErekIsR0FBQS96QixFQUFBRCxFQUFBODFCLGVBQUEsSUFBQTcxQixFQUFBMjdCLEdBQXNFMzdCLEdBQUU2N0IsR0FBQTk3QixFQUFBQyxLQUFBbTBCLEdBQUFuMEIsR0FBa0QsT0FBakNnOEIsR0FBQWo4QixHQUFNNDdCLEdBQUFELEdBQUF2SCxHQUFBcDBCLEVBQUEyTixXQUFBLE1BQTJCLEVBQVMsU0FBQXd1QixLQUFjUCxHQUFBRCxHQUFBLEtBQVdFLElBQUEsRUFBTSxTQUFBOTBCLEdBQUEvRyxFQUFBQyxFQUFBbkUsR0FBa0JzZ0MsR0FBQXA4QixFQUFBQyxFQUFBbkUsRUFBQW1FLEVBQUFpMkIsZ0JBQTJCLFNBQUFrRyxHQUFBcDhCLEVBQUFDLEVBQUFuRSxFQUFBQyxHQUFxQmtFLEVBQUFzZ0IsTUFBQSxPQUFBdmdCLEVBQUEwN0IsR0FBQXo3QixFQUFBLEtBQUFuRSxFQUFBQyxHQUFBMC9CLEdBQUF4N0IsRUFBQUQsRUFBQXVnQixNQUFBemtCLEVBQUFDLEdBQzlYLFNBQUFzZ0MsR0FBQXI4QixFQUFBQyxHQUFpQixJQUFBbkUsRUFBQW1FLEVBQUErRixLQUFZLE9BQUFoRyxHQUFBLE9BQUFsRSxHQUFBLE9BQUFrRSxLQUFBZ0csTUFBQWxLLEtBQUFtRSxFQUFBbWdCLFdBQUEsS0FBNEQsU0FBQWtjLEdBQUF0OEIsRUFBQUMsRUFBQW5FLEVBQUFDLEVBQUFtRSxHQUF1Qm04QixHQUFBcjhCLEVBQUFDLEdBQVEsSUFBQUUsRUFBQSxPQUFBRixFQUFBbWdCLFdBQTJCLElBQUF0a0IsSUFBQXFFLEVBQUEsT0FBQXBFLEdBQUEyNUIsR0FBQXoxQixHQUFBLEdBQUFtSCxHQUFBcEgsRUFBQUMsR0FBb0NuRSxFQUFBbUUsRUFBQTBOLFVBQWNtTCxHQUFBalQsUUFBQTVGLEVBQWEsSUFBQW1HLEVBQUFqRyxFQUFBLEtBQUFyRSxFQUFBNEgsU0FBZ0osT0FBeEh6RCxFQUFBbWdCLFdBQUEsRUFBZWpnQixJQUFBaThCLEdBQUFwOEIsRUFBQUMsRUFBQSxLQUFBQyxHQUFBRCxFQUFBc2dCLE1BQUEsTUFBaUM2YixHQUFBcDhCLEVBQUFDLEVBQUFtRyxFQUFBbEcsR0FBWUQsRUFBQTIxQixjQUFBOTVCLEVBQUFvRyxNQUF3QmpDLEVBQUE2MUIsY0FBQWg2QixFQUFBOEYsTUFBd0I3RixHQUFBMjVCLEdBQUF6MUIsR0FBQSxHQUFZQSxFQUFBc2dCLE1BQ2xXLFNBQUFnYyxHQUFBdjhCLEdBQWUsSUFBQUMsRUFBQUQsRUFBQTJOLFVBQWtCMU4sRUFBQWkzQixlQUFBN0IsR0FBQXIxQixFQUFBQyxFQUFBaTNCLGVBQUFqM0IsRUFBQWkzQixpQkFBQWozQixFQUFBaUYsU0FBQWpGLEVBQUFpRixTQUFBbXdCLEdBQUFyMUIsRUFBQUMsRUFBQWlGLFNBQUEsR0FBbUcyMEIsR0FBQTc1QixFQUFBQyxFQUFBbW1CLGVBQ3BJLFNBQUFvVyxHQUFBeDhCLEVBQUFDLEVBQUFuRSxFQUFBQyxHQUFxQixJQUFBbUUsRUFBQUYsRUFBQXVnQixNQUFxQyxJQUF2QixPQUFBcmdCLE1BQUFrUCxPQUFBcFAsR0FBNEIsT0FBQUUsR0FBUyxDQUFFLE9BQUFBLEVBQUF3TyxLQUFjLFlBQUF2TyxFQUFBLEVBQUFELEVBQUF5TixVQUE0QixHQUFBek4sRUFBQXdHLE9BQUF6RyxHQUFBLElBQUFFLEVBQUFyRSxHQUFBLENBQTBCLElBQUFxRSxFQUFBRCxFQUFRLE9BQUFDLEdBQVMsQ0FBRSxJQUFBaUcsRUFBQWpHLEVBQUE0UCxVQUFrQixPQUFBNVAsRUFBQSsxQixnQkFBQS8xQixFQUFBKzFCLGVBQUFuNkIsRUFBQW9FLEVBQUErMUIsZUFBQW42QixFQUFBLE9BQUFxSyxJQUFBLElBQUFBLEVBQUE4dkIsZ0JBQUE5dkIsRUFBQTh2QixlQUFBbjZCLEtBQUFxSyxFQUFBOHZCLGVBQUFuNkIsT0FBMEksV0FBQXFLLEtBQUEsSUFBQUEsRUFBQTh2QixnQkFBQTl2QixFQUFBOHZCLGVBQUFuNkIsR0FBZ0YsTUFBaEZxSyxFQUFBOHZCLGVBQUFuNkIsRUFBMkZvRSxJQUFBaVAsT0FBV2pQLEVBQUEsVUFBT0EsRUFBQUQsRUFBQXFnQixNQUFlLE1BQU0sUUFBQXBnQixFQUFBRCxFQUFBd0csT0FBQTFHLEVBQUEwRyxLQUFBLEtBQUF4RyxFQUFBcWdCLE1BQXVDLE1BQU0sUUFBQXBnQixFQUM1ZUQsRUFBQXFnQixNQUFRLFVBQUFwZ0IsSUFBQWlQLE9BQUFsUCxPQUF1QixJQUFBQyxFQUFBRCxFQUFhLE9BQUFDLEdBQVMsQ0FBRSxHQUFBQSxJQUFBSCxFQUFBLENBQVVHLEVBQUEsS0FBTyxNQUFrQixXQUFaRCxFQUFBQyxFQUFBcWdCLFNBQVksQ0FBYXRnQixFQUFBa1AsT0FBQWpQLEVBQUFpUCxPQUFrQmpQLEVBQUFELEVBQUksTUFBTUMsSUFBQWlQLE9BQVdsUCxFQUFBQyxHQUVrQixTQUFBaUgsR0FBQXBILEVBQUFDLEdBQTRELEdBQTVDLE9BQUFELEdBQUFDLEVBQUFzZ0IsUUFBQXZnQixFQUFBdWdCLE9BQUFqYyxFQUFBLE9BQTRDLE9BQUFyRSxFQUFBc2dCLE1BQUEsQ0FBNkIsSUFBQXprQixFQUFBcTZCLEdBQVZuMkIsRUFBQUMsRUFBQXNnQixNQUFVdmdCLEVBQUE4WixhQUFBOVosRUFBQWsyQixnQkFBc0QsSUFBVmoyQixFQUFBc2dCLE1BQUF6a0IsRUFBVUEsRUFBQXNULE9BQUFuUCxFQUFlLE9BQUFELEVBQUF3Z0IsU0FBaUJ4Z0IsSUFBQXdnQixTQUFBMWtCLElBQUEwa0IsUUFBQTJWLEdBQUFuMkIsSUFBQThaLGFBQUE5WixFQUFBazJCLGlCQUFBOW1CLE9BQUFuUCxFQUEwRW5FLEVBQUEwa0IsUUFBQSxLQUFlLE9BQUF2Z0IsRUFBQXNnQixNQUN4YSxTQUFBa2MsR0FBQXo4QixFQUFBQyxFQUFBbkUsR0FBbUIsT0FBQW1FLEVBQUFpMkIsZ0JBQUFqMkIsRUFBQWkyQixlQUFBcDZCLEVBQUEsQ0FBNkMsT0FBQW1FLEVBQUF5TyxLQUFjLE9BQUE2dEIsR0FBQXQ4QixHQUFhLE1BQU0sT0FBQXUxQixHQUFBdjFCLEdBQWEsTUFBTSxPQUFBNDVCLEdBQUE1NUIsSUFBQTBOLFVBQUF5WSxlQUF1QyxNQUFNLFFBQUFrVCxHQUFBcjVCLEdBQWMsWUFBWSxPQUFBQSxFQUFBeU8sS0FBYyxjQUFBMU8sR0FBQXNFLEVBQUEsT0FBZ0MsSUFBQXZJLEVBQUFrRSxFQUFBeUcsS0FBQXhHLEVBQUFELEVBQUE2WixhQUFBM1osRUFBQXkwQixHQUFBMzBCLEdBQ2pGLE9BRGlJbEUsSUFBQW1FLEVBQVZDLEVBQUEyMEIsR0FBQTcwQixFQUFBRSxJQUFtQkYsRUFBQW1nQixXQUFBLEVBQWUsaUJBQUFya0IsR0FBQSxPQUFBQSxHQUFBLG1CQUFBQSxFQUFBMkgsYUFBQSxJQUFBM0gsRUFBQTBLLFVBQUF0RyxFQUFBRixFQUFBeUcsS0FBQXpHLEVBQUF5TyxJQUFBLEVBQUF6TyxFQUFBMjFCLGNBQUEsT0FBQTc1QixFQUFBbUcsWUFBQSxJQUFBbkcsRUFBQW1HLE1BQUFuRyxFQUFBbUcsTUFBQSx3QkFBQS9CLElBQUEwNkIsMkJBQ2pUWixHQUFBaDZCLEVBQUFFLEVBQUFELEtBQUFzMUIsR0FBQXYxQixHQUFBbEUsRUFBQXFKLFFBQUE4MEIsR0FBQWo2QixFQUFBME4sVUFBQTVSLElBQUFvK0Isb0JBQUFsNkIsRUFBQTI2QixHQUFBMzZCLEVBQUFuRSxHQUFBa0UsRUFBQXM4QixHQUFBdDhCLEVBQUFDLEdBQUEsRUFBQUMsRUFBQXBFLEtBQUFtRSxFQUFBeU8sSUFBQSxFQUFBM0gsR0FBQS9HLEVBQUFDLEVBQUFsRSxHQUFBa0UsRUFBQTYxQixjQUFBNTFCLEVBQUFGLEVBQUFDLEVBQUFzZ0IsT0FBd0p2Z0IsRUFBUyxjQUFBRSxFQUFBRCxFQUFBeUcsS0FBQTVLLEVBQUFtRSxFQUFBNlosYUFBQWpULEdBQUFoQixTQUFBNUYsRUFBQTYxQixnQkFBQWg2QixHQUFBb0UsSUFBQXBFLEVBQUFDLEVBQUErNEIsR0FBQTcwQixFQUFBbEUsRUFBQTY0QixHQUFBMzBCLE9BQUFtZ0IsV0FBQSxFQUFBclosR0FBQS9HLEVBQUFDLEVBQUFDLEdBQUFELEVBQUE2MUIsY0FBQWg2QixFQUFBa0UsRUFBQUMsRUFBQXNnQixPQUFBdmdCLEVBQUFvSCxHQUFBcEgsRUFBQUMsR0FBQUQsRUFBbUssT0FBZSxHQUFmRSxFQUFBczFCLEdBQUF2MUIsR0FBZSxPQUFBRCxFQUFBLFVBQUFDLEVBQUEwTixVQUFBLENBQW1DLElBQUF2SCxFQUFBbkcsRUFBQTZaLGFBQUF6VCxFQUFBcEcsRUFBQXlHLEtBQThCM0ssRUFBQTY0QixHQUFBMzBCLEdBQVEsSUFBQTRELEVBQUEsSUFBQTVELEVBQUF5TyxLQUFBLE1BQUF6TyxFQUFBeUcsS0FBQXF1QixhQUEwRDN1QixFQUFBLElBQUFDLEVBQUFELEVBQWZqRyxFQUFBMEQsRUFBQWl4QixHQUFBNzBCLEVBQUFsRSxHQUFBcU8sR0FBNEJuSyxFQUFBMjFCLGNBQUEsT0FDbmV4dkIsRUFBQWxFLFlBQUEsSUFBQWtFLEVBQUFsRSxNQUFBa0UsRUFBQWxFLE1BQUEsS0FBdUNrRSxFQUFBaEIsUUFBQTgwQixHQUFhajZCLEVBQUEwTixVQUFBdkgsRUFBY0EsRUFBQSt6QixvQkFBQWw2QixFQUF3QjRELE9BQUE1RCxFQUFBME4sV0FBQXFuQiw0Q0FBQWo1QixFQUFBOEgsRUFBQW94QiwwQ0FBQTkwQixHQUFpSHk2QixHQUFBMzZCLEVBQUFuRSxHQUFRQyxHQUFBLE1BQUssQ0FBS3NLLEVBQUFwRyxFQUFBeUcsS0FBUzNLLEVBQUFrRSxFQUFBME4sVUFBYzlKLEVBQUE1RCxFQUFBNjFCLGNBQWtCMzFCLEVBQUFGLEVBQUE2WixhQUFpQi9kLEVBQUE2RixNQUFBaUMsRUFBVSxJQUFBM0csRUFBQW5CLEVBQUFtSixRQUF3QmtCLEVBQUEwdUIsR0FBQTcwQixFQUFSbUcsRUFBQXd1QixHQUFBMzBCLElBQWtCLElBQUExRCxFQUFBOEosRUFBQXcwQiwwQkFBaUN4MEIsRUFBQSxtQkFBQTlKLEdBQUEsbUJBQUFSLEVBQUErK0IsMEJBQUEsbUJBQUEvK0IsRUFBQTQrQixrQ0FBQSxtQkFBQTUrQixFQUFBMitCLDRCQUNwVzcyQixJQUFBMUQsR0FBQWpELElBQUFrSixJQUFBcTBCLEdBQUF4NkIsRUFBQWxFLEVBQUFvRSxFQUFBaUcsR0FBNEJ3eEIsSUFBQSxFQUFNLElBQUExekIsRUFBQWpFLEVBQUEyMUIsY0FBc0IxNEIsRUFBQW5CLEVBQUFtRyxNQUFBZ0MsRUFBWSxJQUFBNEMsRUFBQTdHLEVBQUE0MUIsWUFBb0IsT0FBQS91QixJQUFBZ3lCLEdBQUE3NEIsRUFBQTZHLEVBQUEzRyxFQUFBcEUsRUFBQUQsR0FBQW9CLEVBQUErQyxFQUFBMjFCLGVBQTRDL3hCLElBQUExRCxHQUFBK0QsSUFBQWhILEdBQUEySixHQUFBaEIsU0FBQSt4QixJQUFBLG1CQUFBcjdCLElBQUEwOUIsR0FBQWg2QixFQUFBMUQsRUFBQTRELEdBQUFqRCxFQUFBK0MsRUFBQTIxQixnQkFBQS94QixFQUFBK3pCLElBQUEyQyxHQUFBdDZCLEVBQUE0RCxFQUFBMUQsRUFBQStELEVBQUFoSCxFQUFBa0osS0FBQUMsR0FBQSxtQkFBQXRLLEVBQUFnL0IsMkJBQUEsbUJBQUFoL0IsRUFBQWkvQixxQkFBQSxtQkFBQWovQixFQUFBaS9CLG9CQUFBai9CLEVBQUFpL0IscUJBQUEsbUJBQUFqL0IsRUFBQWcvQiwyQkFBQWgvQixFQUFBZy9CLDZCQUFBLG1CQUFBaC9CLEVBQUFrL0Isb0JBQ3BJaDdCLEVBQUFtZ0IsV0FBQSx3QkFBQXJrQixFQUFBay9CLG9CQUFBaDdCLEVBQUFtZ0IsV0FBQSxHQUFBbmdCLEVBQUE2MUIsY0FBQTMxQixFQUFBRixFQUFBMjFCLGNBQUExNEIsR0FBQW5CLEVBQUE2RixNQUFBekIsRUFBQXBFLEVBQUFtRyxNQUFBaEYsRUFBQW5CLEVBQUFtSixRQUFBa0IsRUFBQXJLLEVBQUE4SCxJQUFBLG1CQUFBOUgsRUFBQWsvQixvQkFBQWg3QixFQUFBbWdCLFdBQUEsR0FBQXJrQixHQUFBLFFBQXdOc0ssRUFBQXBHLEVBQUF5RyxLQUFBM0ssRUFBQWtFLEVBQUEwTixVQUFBeE4sRUFBQUYsRUFBQTYxQixjQUFBanlCLEVBQUE1RCxFQUFBNlosYUFBQS9kLEVBQUE2RixNQUFBekIsRUFBQWpELEVBQUFuQixFQUFBbUosUUFBQWtCLEVBQUEwdUIsR0FBQTcwQixFQUFBbUcsRUFBQXd1QixHQUFBMzBCLEtBQUFvRyxFQUFBLG1CQUFBOUosRUFBQThKLEVBQUF3MEIsMkJBQUEsbUJBQUE5K0IsRUFBQSsrQiwwQkFBQSxtQkFBQS8rQixFQUFBNCtCLGtDQUFBLG1CQUFBNStCLEVBQUEyK0IsNEJBQ3hOdjZCLElBQUEwRCxHQUFBM0csSUFBQWtKLElBQUFxMEIsR0FBQXg2QixFQUFBbEUsRUFBQThILEVBQUF1QyxHQUFBd3hCLElBQUEsRUFBQTE2QixFQUFBK0MsRUFBQTIxQixjQUFBMXhCLEVBQUFuSSxFQUFBbUcsTUFBQWhGLEVBQUEsUUFBQTRKLEVBQUE3RyxFQUFBNDFCLGVBQUFpRCxHQUFBNzRCLEVBQUE2RyxFQUFBakQsRUFBQTlILEVBQUFELEdBQUFvSSxFQUFBakUsRUFBQTIxQixlQUFBejFCLElBQUEwRCxHQUFBM0csSUFBQWdILEdBQUEyQyxHQUFBaEIsU0FBQSt4QixJQUFBLG1CQUFBcjdCLElBQUEwOUIsR0FBQWg2QixFQUFBMUQsRUFBQXNILEdBQUFLLEVBQUFqRSxFQUFBMjFCLGdCQUFBcjVCLEVBQUFxN0IsSUFBQTJDLEdBQUF0NkIsRUFBQUUsRUFBQTBELEVBQUEzRyxFQUFBZ0gsRUFBQWtDLEtBQUFDLEdBQUEsbUJBQUF0SyxFQUFBMmdDLDRCQUFBLG1CQUFBM2dDLEVBQUE0Z0Msc0JBQUEsbUJBQUE1Z0MsRUFBQTRnQyxxQkFBQTVnQyxFQUFBNGdDLG9CQUFBOTRCLEVBQUFLLEVBQUFrQyxHQUFBLG1CQUFBckssRUFBQTJnQyw0QkFBQTNnQyxFQUFBMmdDLDJCQUFBNzRCLEVBQUFLLEVBQUFrQyxJQUFBLG1CQUFBckssRUFBQTZnQyxxQkFDQTM4QixFQUFBbWdCLFdBQUEsc0JBQUFya0IsRUFBQSsrQiwwQkFBQTc2QixFQUFBbWdCLFdBQUEsMEJBQUFya0IsRUFBQTZnQyxvQkFBQXo4QixJQUFBSCxFQUFBODFCLGVBQUE1NEIsSUFBQThDLEVBQUE0MUIsZ0JBQUEzMUIsRUFBQW1nQixXQUFBLHNCQUFBcmtCLEVBQUErK0IseUJBQUEzNkIsSUFBQUgsRUFBQTgxQixlQUFBNTRCLElBQUE4QyxFQUFBNDFCLGdCQUFBMzFCLEVBQUFtZ0IsV0FBQSxLQUFBbmdCLEVBQUE2MUIsY0FBQWp5QixFQUFBNUQsRUFBQTIxQixjQUFBMXhCLEdBQUFuSSxFQUFBNkYsTUFBQWlDLEVBQUE5SCxFQUFBbUcsTUFBQWdDLEVBQUFuSSxFQUFBbUosUUFBQWtCLEVBQUFySyxFQUFBUSxJQUFBLG1CQUFBUixFQUFBNmdDLG9CQUFBejhCLElBQUFILEVBQUE4MUIsZUFBQTU0QixJQUFBOEMsRUFBQTQxQixnQkFBQTMxQixFQUFBbWdCLFdBQUEsc0JBQUFya0IsRUFBQSsrQix5QkFDQTM2QixJQUFBSCxFQUFBODFCLGVBQUE1NEIsSUFBQThDLEVBQUE0MUIsZ0JBQUEzMUIsRUFBQW1nQixXQUFBLEtBQUFya0IsR0FBQSxHQUFtRSxPQUFBdWdDLEdBQUF0OEIsRUFBQUMsRUFBQWxFLEVBQUFtRSxFQUFBcEUsR0FBcUIsT0FBdVcsT0FBdld5Z0MsR0FBQXQ4QixHQUE2QixRQUFoQkMsRUFBQUQsRUFBQTQxQixjQUFnQjk1QixFQUFBLFFBQUFBLEVBQUFrRSxFQUFBMjFCLGVBQUE3NUIsRUFBQThnQyxRQUFBLEtBQUEvRCxHQUFBNzRCLEVBQUFDLEVBQUFELEVBQUE2WixhQUFBLEtBQUFoZSxJQUFBb0UsRUFBQUQsRUFBQTIxQixjQUFBaUgsV0FBQTlnQyxHQUFBb2dDLEtBQUFuOEIsRUFBQW9ILEdBQUFwSCxFQUFBQyxLQUE0SWxFLEVBQUFrRSxFQUFBME4sV0FBYzVSLEdBQUEsT0FBQWlFLEdBQUEsT0FBQUEsRUFBQXVnQixRQUFBeGtCLEVBQUFvN0IsV0FBQXlFLEdBQUF2SCxHQUFBcDBCLEVBQUEwTixVQUFBeVksZUFBQXVWLEdBQUExN0IsRUFBQWxFLEVBQUE4L0IsSUFBQSxHQUF5RjkvQixHQUFBa0UsRUFBQW1nQixXQUFBLEVBQUFuZ0IsRUFBQXNnQixNQUFBbWIsR0FBQXo3QixFQUFBLEtBQUFDLEVBQUFwRSxLQUFBcWdDLEtBQUFwMUIsR0FBQS9HLEVBQUFDLEVBQUFDLElBQTBERixFQUFBQyxFQUFBc2dCLFNBQVU0YixLQUFBbjhCLEVBQUFvSCxHQUFBcEgsRUFBQUMsSUFBbUJELEVBQVMsT0FDZixPQUR5QjQ1QixHQUFBRCxHQUFBOXpCLFVBQWUzRixFQUFBMDVCLEdBQUFILEdBQUE1ekIsYUFBaUI5SixFQUFBK3dCLEdBQUE1c0IsRUFDbGZELEVBQUF5RyxTQUFRRSxHQUFBOHlCLEdBQUF6NUIsR0FBQTJHLEdBQUE2eUIsR0FBQTE5QixJQUE2QixPQUFBaUUsR0FBQWc4QixHQUFBLzdCLEdBQWdCQyxFQUFBRCxFQUFBeUcsS0FBUzdDLEVBQUE1RCxFQUFBNjFCLGNBQWtCLzVCLEVBQUFrRSxFQUFBNlosYUFBaUIzWixFQUFBLE9BQUFILElBQUE4MUIsY0FBQSxLQUFnQ2p2QixHQUFBaEIsU0FBQWhDLElBQUE5SCxLQUFzQjhILEVBQUEsRUFBQTVELEVBQUFyRCxRQUFBYixFQUFBK2dDLFVBQUE3OEIsRUFBQWkyQixlQUFBLFlBQXNEcnlCLEdBQUEsYUFBQS9ILElBQXlDK0gsRUFBQTlILEVBQUF1SyxTQUFhMHRCLEdBQUE5ekIsRUFBQW5FLEdBQUE4SCxFQUFBLEtBQUExRCxHQUFBNnpCLEdBQUE5ekIsRUFBQUMsS0FBQUYsRUFBQW1nQixXQUFBLElBQTZDaWMsR0FBQXI4QixFQUFBQyxHQUFRLGFBQUFuRSxHQUFBLEVBQUFtRSxFQUFBckQsTUFBQWIsRUFBQStnQyxRQUFBNzhCLEVBQUFpMkIsZUFBQSxXQUFBajJCLEVBQUE2MUIsY0FBQS81QixFQUFBaUUsRUFBQSxPQUFBK0csR0FBQS9HLEVBQUFDLEVBQUE0RCxHQUFBNUQsRUFBQTYxQixjQUFBLzVCLEVBQUFpRSxFQUFBQyxFQUFBc2dCLFFBQXBGdmdCLEVBQUFvSCxHQUFBcEgsRUFBQUMsR0FBcU5ELEVBQVMscUJBQUFBLEdBQUFnOEIsR0FBQS83QixLQUFBNjFCLGNBQUE3MUIsRUFBQTZaLGFBQ2xjLEtBQUssb0JBQW9CLGNBQUErZixHQUFBNTVCLElBQUEwTixVQUFBeVksZUFBQWxtQixFQUFBRCxFQUFBNlosYUFBQWpULEdBQUFoQixTQUFBNUYsRUFBQTYxQixnQkFBQTUxQixHQUFBLE9BQUFGLEVBQUFDLEVBQUFzZ0IsTUFBQWtiLEdBQUF4N0IsRUFBQSxLQUFBQyxFQUFBcEUsR0FBQWlMLEdBQUEvRyxFQUFBQyxFQUFBQyxHQUFBRCxFQUFBNjFCLGNBQUE1MUIsRUFBQUYsRUFBQUMsRUFBQXNnQixPQUFBdmdCLEVBQUFvSCxHQUFBcEgsRUFBQUMsR0FBQUQsRUFBZ0wsZUFBQUUsRUFBQUQsRUFBQXlHLEtBQUFoRCxPQUFBNUgsRUFBQW1FLEVBQUE2WixhQUFBL2QsRUFBQWtFLEVBQUErRixJQUFBYSxHQUFBaEIsU0FBQTVGLEVBQUE2MUIsZ0JBQUFoNkIsR0FBQUMsS0FBQSxPQUFBaUUsSUFBQWdHLElBQUEsT0FBQWUsR0FBQS9HLEVBQUFDLEVBQUFDLElBQUFwRSxFQUFBQyxJQUFBa0UsRUFBQTYxQixjQUFBaDZCLEVBQUFrRSxFQUFBQyxFQUFBc2dCLE9BQUF2Z0IsRUFBQW9ILEdBQUFwSCxFQUFBQyxHQUFBRCxFQUE2SyxlQUFBbEUsRUFBQW1FLEVBQUE2WixhQUFBalQsR0FBQWhCLFNBQUE1RixFQUFBNjFCLGdCQUFBaDZCLEdBQUFpTCxHQUFBL0csRUFBQUMsRUFBQW5FLEdBQUFtRSxFQUFBNjFCLGNBQUFoNkIsRUFBQWtFLEVBQUFDLEVBQUFzZ0IsT0FBQXZnQixFQUFBb0gsR0FBQXBILEVBQUFDLEdBQUFELEVBQWlILGVBQUFsRSxFQUN2ZW1FLEVBQUE2WixhQUFBeFQsU0FBQU8sR0FBQWhCLFNBQUEsT0FBQS9KLEdBQUFtRSxFQUFBNjFCLGdCQUFBaDZCLEdBQUFpTCxHQUFBL0csRUFBQUMsRUFBQW5FLEdBQUFtRSxFQUFBNjFCLGNBQUFoNkIsRUFBQWtFLEVBQUFDLEVBQUFzZ0IsT0FBQXZnQixFQUFBb0gsR0FBQXBILEVBQUFDLEdBQUFELEVBQW1ILGVBQUFsRSxFQUFBbUUsRUFBQTZaLGFBQUE3WixFQUFBNjFCLGdCQUFBaDZCLEVBQUFrRSxFQUFBb0gsR0FBQXBILEVBQUFDLElBQUE4RyxHQUFBL0csRUFBQUMsRUFBQW5FLEVBQUF3SyxVQUFBckcsRUFBQTYxQixjQUFBaDZCLEVBQUFrRSxFQUFBQyxFQUFBc2dCLE9BQUF2Z0IsRUFBK0csZUFabE8sU0FBQUEsRUFBQUMsRUFBQW5FLEdBQW1CLElBQUFDLEVBQUFrRSxFQUFBeUcsS0FBQXFDLFNBQUE3SSxFQUFBRCxFQUFBNlosYUFBQTNaLEVBQUFGLEVBQUE2MUIsY0FBQTF2QixHQUFBLEVBQThELEdBQUFTLEdBQUFoQixRQUFBTyxHQUFBLE9BQWtCLEdBQUFqRyxJQUFBRCxFQUFBLE9BQUFELEVBQUEwTixVQUFBLEVBQUEyckIsR0FBQXI1QixHQUFBbUgsR0FBQXBILEVBQUFDLEdBQWdELElBQUFvRyxFQUFBbkcsRUFBQXhELE1BQWdDLEdBQWxCdUQsRUFBQTYxQixjQUFBNTFCLEVBQWtCLE9BQUFDLEVBQUFrRyxFQUFBLGdCQUF5QixHQUFBbEcsRUFBQXpELFFBQUF3RCxFQUFBeEQsTUFBQSxDQUEyQixHQUFBeUQsRUFBQW1HLFdBQUFwRyxFQUFBb0csVUFBQUYsRUFBQSxPQUFBbkcsRUFBQTBOLFVBQUEsRUFBQTJyQixHQUFBcjVCLEdBQUFtSCxHQUFBcEgsRUFBQUMsR0FBZ0VvRyxFQUFBLE1BQUksQ0FBSyxJQUFBeEMsRUFBQTFELEVBQUF6RCxNQUFjLEdBQUFtSCxJQUFBd0MsSUFBQSxJQUFBeEMsR0FBQSxFQUFBQSxHQUFBLEVBQUF3QyxJQUFBeEMsTUFBQXdDLEtBQUEsQ0FBNEMsR0FBQWxHLEVBQUFtRyxXQUFBcEcsRUFBQW9HLFVBQUFGLEVBQUEsT0FBQW5HLEVBQUEwTixVQUFBLEVBQUEyckIsR0FBQXI1QixHQUFBbUgsR0FBQXBILEVBQUFDLEdBQWdFb0csRUFBQSxPQUFJLEdBQUFBLEVBQUEsbUJBQUF0SyxFQUFBd00sc0JBQUF4TSxFQUFBd00sc0JBQUExRSxFQUM5YXdDLEdBQUEsZUFBQUEsR0FBQSxJQUEwQixHQUFBbEcsRUFBQW1HLFdBQUFwRyxFQUFBb0csVUFBQUYsRUFBQSxPQUFBbkcsRUFBQTBOLFVBQUEsRUFBQTJyQixHQUFBcjVCLEdBQUFtSCxHQUFBcEgsRUFBQUMsUUFBZ0V1OEIsR0FBQXY4QixFQUFBbEUsRUFBQXNLLEVBQUF2SyxHQUF1RCxPQUF0Q21FLEVBQUEwTixVQUFBdEgsRUFBY2l6QixHQUFBcjVCLEdBQU04RyxHQUFBL0csRUFBQUMsRUFBQUMsRUFBQW9HLFVBQWtCckcsRUFBQXNnQixNQVdpRndjLENBQUEvOEIsRUFBQUMsRUFBQW5FLEdBQXlCLFFBQUFrRSxFQUFBLEdBQUFqRSxFQUFBa0UsRUFBQXlHLEtBQUF2RyxFQUFBRixFQUFBNlosYUFBQWpXLEVBQUE1RCxFQUFBNjFCLGNBQUE1MUIsRUFBQW5FLEVBQUEwTSxjQUFBckMsRUFBQXJLLEVBQUE0TSxhQUFBOUIsR0FBQWhCLFNBQUEsSUFBQU8sR0FBQXZDLElBQUExRCxFQUFBLENBQW9OLEdBQS9GRixFQUFBNjFCLGNBQUEzMUIsT0FBNEMsS0FBMUJrRyxFQUFBbEcsRUFBQTY4Qix3QkFBMEIsT0FBQTMyQixNQUFBLFlBQXFDcEcsRUFBQTBOLFVBQUF0SCxFQUFjLElBQUFELEVBQUFDLEdBQUFtMkIsR0FBQXY4QixFQUFBbEUsRUFBQXFLLEVBQUF0SyxRQUF5QixHQUFBK0gsSUFBQTFELEVBQUEsQ0FBZUgsRUFDdmZvSCxHQUFBcEgsRUFBQUMsR0FBTyxNQUFBRCxFQUFxQmxFLEdBQWJBLEVBQUFxRSxFQUFBbUcsVUFBYXBHLEdBQU9ELEVBQUFtZ0IsV0FBQSxFQUFlclosR0FBQS9HLEVBQUFDLEVBQUFuRSxHQUFTa0UsRUFBQUMsRUFBQXNnQixXQUFVdmdCLEVBQUFvSCxHQUFBcEgsRUFBQUMsR0FBYyxPQUFBRCxFQUFTLFFBQUFzRSxFQUFBLFFBQWtCLFNBQUEyNEIsR0FBQWo5QixHQUFlQSxFQUFBb2dCLFdBQUEsRUFBZSxJQUFBOGMsUUFBQSxFQUFBQyxRQUFBLEVBQUFDLFFBQUEsRUFDNUksU0FBQUMsR0FBQXI5QixFQUFBQyxHQUFpQixJQUFBbkUsRUFBQW1FLEVBQUE2WixhQUFxQixPQUFBN1osRUFBQXlPLEtBQWMsbUJBQW1CLGNBQUF5bUIsR0FBQWwxQixHQUFBLEtBQXlCLE9BQUE4NUIsS0FBYTNFLEtBQU0sSUFBQXI1QixFQUFBa0UsRUFBQTBOLFVBQStJLE9BQTdINVIsRUFBQW03QixpQkFBQW43QixFQUFBbUosUUFBQW5KLEVBQUFtN0IsZUFBQW43QixFQUFBbTdCLGVBQUEsTUFBcUUsT0FBQWwzQixHQUFBLE9BQUFBLEVBQUF1Z0IsUUFBQTJiLEdBQUFqOEIsS0FBQW1nQixZQUFBLEdBQWtEOGMsR0FBQWo5QixHQUFNLEtBQVksT0FBQSs1QixHQUFBLzVCLEdBQWFsRSxFQUFBNjlCLEdBQUFELEdBQUE5ekIsU0FBaUIsSUFBQTNGLEVBQUFELEVBQUF5RyxLQUFhLFVBQUExRyxHQUFBLE1BQUFDLEVBQUEwTixVQUFBLENBQWdDLElBQUF4TixFQUFBSCxFQUFBODFCLGNBQUExdkIsRUFBQW5HLEVBQUEwTixVQUFBdEgsRUFBQXV6QixHQUFBSCxHQUFBNXpCLFNBQXFETyxFQUFBcXNCLEdBQUFyc0IsRUFBQWxHLEVBQUFDLEVBQUFyRSxFQUFBQyxHQUFnQm9oQyxHQUFBbjlCLEVBQUFDLEVBQUFtRyxFQUFBbEcsRUFBQUMsRUFBQXJFLEVBQUFDLEVBQUFzSyxHQUFvQnJHLEVBQUFnRyxNQUFBL0YsRUFBQStGLE1BQUEvRixFQUFBbWdCLFdBQUEsU0FBa0MsQ0FBSyxJQUFBdGtCLEVBQUEsY0FBQW1FLEVBQUEwTixXQUN6ZHJKLEVBQUEsWUFBc0MsR0FBakJ0RSxFQUFBNDVCLEdBQUFILEdBQUE1ekIsU0FBaUJxMkIsR0FBQWo4QixHQUFBbkUsRUFBQW1FLEVBQUEwTixVQUFBek4sRUFBQUQsRUFBQXlHLEtBQUF2RyxFQUFBRixFQUFBNjFCLGNBQUFoNkIsRUFBQTBJLEdBQUF2RSxFQUFBbkUsRUFBQXlTLEdBQUFwTyxFQUFBcEUsRUFBQTQyQixHQUFBNzJCLEVBQUFvRSxFQUFBQyxFQUFBSCxFQUFBakUsR0FBQWtFLEVBQUE0MUIsWUFBQTk1QixFQUFBLE9BQUFBLEdBQUFraEMsR0FBQWg5QixPQUFpSCxFQUFLRCxFQUFBaXlCLEdBQUEveEIsRUFBQXBFLEVBQUFDLEVBQUFpRSxJQUFjd0UsR0FBQXZFLEVBQU9ELEVBQUF1TyxHQUFBelMsRUFBUWtFLEVBQUEsSUFBQUcsRUFBQUYsRUFBQXNnQixNQUFnQixPQUFBcGdCLEdBQVMsQ0FBRSxPQUFBQSxFQUFBdU8sS0FBQSxJQUFBdk8sRUFBQXVPLElBQUExTyxFQUFBc3RCLFlBQUFudEIsRUFBQXdOLGdCQUFtRCxPQUFBeE4sRUFBQXVPLEtBQUEsT0FBQXZPLEVBQUFvZ0IsTUFBQSxDQUFtQ3BnQixFQUFBb2dCLE1BQUFuUixPQUFBalAsRUFBaUJBLElBQUFvZ0IsTUFBVSxTQUFTLEdBQUFwZ0IsSUFBQUYsRUFBQSxNQUFlLEtBQUssT0FBQUUsRUFBQXFnQixTQUFpQixDQUFFLFVBQUFyZ0IsRUFBQWlQLFFBQUFqUCxFQUFBaVAsU0FBQW5QLEVBQUEsTUFBQUQsRUFBeUNHLElBQUFpUCxPQUFXalAsRUFBQXFnQixRQUFBcFIsT0FBQWpQLEVBQUFpUCxPQUEwQmpQLElBQUFxZ0IsUUFBWTZSLEdBQUFyeUIsRUFBQUUsRUFBQXBFLEVBQUFDLEdBQVkrM0IsR0FBQTV6QixFQUFBcEUsSUFBQW1oQyxHQUFBaDlCLEdBQWVBLEVBQUEwTixVQUMxZTNOLEVBQUUsT0FBQUMsRUFBQStGLE1BQUEvRixFQUFBbWdCLFdBQUEsS0FBaUMsWUFBWSxVQUFBcGdCLEdBQUEsTUFBQUMsRUFBQTBOLFVBQUF5dkIsR0FBQXA5QixFQUFBQyxFQUFBRCxFQUFBODFCLGNBQUFoNkIsT0FBeUQsQ0FBSyxvQkFBQUEsRUFBQSxjQUFBbUUsRUFBQTBOLFdBQUFySixFQUFBLFlBQXNFdkksRUFBQTY5QixHQUFBRCxHQUFBOXpCLFNBQWlCK3pCLEdBQUFILEdBQUE1ekIsU0FBZXEyQixHQUFBajhCLElBQUFsRSxFQUFBa0UsRUFBQTBOLFVBQUE3UixFQUFBbUUsRUFBQTYxQixjQUFBLzVCLEVBQUF5SSxHQUFBdkUsRUFBQTJ5QixHQUFBNzJCLEVBQUFELElBQUFtaEMsR0FBQWg5QixNQUFBbEUsRUFBQW8yQixHQUFBcjJCLEVBQUFDLElBQUF5SSxHQUFBdkUsSUFBQTBOLFVBQUE1UixHQUErRixZQUFZLFFBQW9CLFFBQW9CLFFBQW9CLFFBQW9CLG9CQUFvQixjQUFBZytCLEtBQUFtRCxHQUFBajlCLEdBQUEsS0FBK0IsZUFBQXM1QixHQUFBdDVCLEdBQUEsS0FBMEIsb0JBQW9CLE9BQUFxRSxFQUFBLE9BQy9lLFFBQUFBLEVBQUEsUUFBa0IsU0FBQWc1QixHQUFBdDlCLEVBQUFDLEdBQWlCLElBQUFuRSxFQUFBbUUsRUFBQWQsT0FBZSxPQUFBYyxFQUFBaTVCLE9BQUEsT0FBQXA5QixHQUFBa2UsR0FBQWxlLEdBQWdDLE9BQUFBLEdBQUE4ZCxHQUFBOWQsR0FBZ0JtRSxJQUFBdkQsTUFBVSxPQUFBc0QsR0FBQSxJQUFBQSxFQUFBME8sS0FBQWtMLEdBQUE1WixHQUEyQixJQUFJQyxLQUFBczlCLDJCQUFBLzdCLFFBQUFwQixNQUFBSCxHQUFpRCxNQUFBbEUsR0FBU0EsS0FBQXdoQywyQkFBQS83QixRQUFBcEIsTUFBQXJFLElBQWtELFNBQUF5aEMsR0FBQXg5QixHQUFlLElBQUFDLEVBQUFELEVBQUFnRyxJQUFZLFVBQUEvRixFQUFBLHNCQUFBQSxFQUFBLElBQXlDQSxFQUFBLE1BQVEsTUFBQW5FLEdBQVMyaEMsR0FBQXo5QixFQUFBbEUsUUFBUW1FLEVBQUE0RixRQUFBLEtBQ3BWLFNBQUE2M0IsR0FBQTE5QixHQUE2QyxPQUE5QjIzQixHQUFBMzNCLEdBQThCQSxFQUFBME8sS0FBYyxPQUFBOHVCLEdBQUF4OUIsR0FBYSxJQUFBQyxFQUFBRCxFQUFBMk4sVUFBa0Isc0JBQUExTixFQUFBMDlCLHFCQUFBLElBQWtEMTlCLEVBQUEyQixNQUFBNUIsRUFBQTgxQixjQUFBNzFCLEVBQUFpQyxNQUFBbEMsRUFBQTQxQixjQUFBMzFCLEVBQUEwOUIsdUJBQXlFLE1BQUE3aEMsR0FBUzJoQyxHQUFBejlCLEVBQUFsRSxHQUFRLE1BQU0sT0FBQTBoQyxHQUFBeDlCLEdBQWEsTUFBTSxPQUFBNDlCLEdBQUE1OUIsSUFBYyxTQUFBNjlCLEdBQUE3OUIsR0FBZSxXQUFBQSxFQUFBME8sS0FBQSxJQUFBMU8sRUFBQTBPLEtBQUEsSUFBQTFPLEVBQUEwTyxJQUM1UixTQUFBb3ZCLEdBQUE5OUIsR0FBZUEsRUFBQSxDQUFHLFFBQUFDLEVBQUFELEVBQUFvUCxPQUFtQixPQUFBblAsR0FBUyxDQUFFLEdBQUE0OUIsR0FBQTU5QixHQUFBLENBQVUsSUFBQW5FLEVBQUFtRSxFQUFRLE1BQUFELEVBQVFDLElBQUFtUCxPQUFXOUssRUFBQSxPQUFTeEksT0FBQSxFQUFTLElBQUFDLEVBQUFrRSxPQUFBLEVBQWUsT0FBQW5FLEVBQUE0UyxLQUFjLE9BQUF6TyxFQUFBbkUsRUFBQTZSLFVBQXFCNVIsR0FBQSxFQUFLLE1BQU0sT0FBOEMsT0FBQWtFLEVBQUFuRSxFQUFBNlIsVUFBQXlZLGNBQW1DcnFCLEdBQUEsRUFBSyxNQUFNLFFBQUF1SSxFQUFBLE9BQWlCLEdBQUF4SSxFQUFBc2tCLFlBQUFtTixHQUFBdHRCLEVBQUEsSUFBQW5FLEVBQUFza0IsWUFBQSxJQUE0Q3BnQixFQUFBQyxFQUFBLElBQUFuRSxFQUFBa0UsSUFBYSxDQUFFLEtBQUssT0FBQWxFLEVBQUEwa0IsU0FBaUIsQ0FBRSxVQUFBMWtCLEVBQUFzVCxRQUFBeXVCLEdBQUEvaEMsRUFBQXNULFFBQUEsQ0FBa0N0VCxFQUFBLEtBQU8sTUFBQWtFLEVBQVFsRSxJQUFBc1QsT0FBcUMsSUFBMUJ0VCxFQUFBMGtCLFFBQUFwUixPQUFBdFQsRUFBQXNULE9BQTBCdFQsSUFBQTBrQixRQUFnQixJQUFBMWtCLEVBQUE0UyxLQUFBLElBQUE1UyxFQUFBNFMsS0FBcUIsQ0FBRSxLQUFBNVMsRUFBQXNrQixVQUFBLFNBQUFuZ0IsRUFDamUsVUFBQW5FLEVBQUF5a0IsT0FBQSxJQUFBemtCLEVBQUE0UyxJQUFBLFNBQUF6TyxFQUF3Q25FLEVBQUF5a0IsTUFBQW5SLE9BQUF0VCxNQUFBeWtCLE1BQWdDLE9BQUF6a0IsRUFBQXNrQixXQUFBLENBQXFCdGtCLElBQUE2UixVQUFjLE1BQUEzTixHQUFTLFFBQUFFLEVBQUFGLElBQWEsQ0FBRSxPQUFBRSxFQUFBd08sS0FBQSxJQUFBeE8sRUFBQXdPLElBQUEsR0FBQTVTLEVBQUEsR0FBQUMsRUFBQSxDQUFtQyxJQUFBb0UsRUFBQUYsRUFBQW1HLEVBQUFsRyxFQUFBeU4sVUFBQXRILEVBQUF2SyxFQUEwQixJQUFBcUUsRUFBQTRYLFNBQUE1WCxFQUFBc08sV0FBQXN2QixhQUFBMzNCLEVBQUFDLEdBQUFsRyxFQUFBNDlCLGFBQUEzM0IsRUFBQUMsUUFBa0VwRyxFQUFBODlCLGFBQUE3OUIsRUFBQXlOLFVBQUE3UixRQUFtQ0MsR0FBQW9FLEVBQUFGLEVBQUFtRyxFQUFBbEcsRUFBQXlOLFVBQUEsSUFBQXhOLEVBQUE0WCxTQUFBNVgsRUFBQXNPLFdBQUFzdkIsYUFBQTMzQixFQUFBakcsS0FBQW10QixZQUFBbG5CLElBQUFuRyxFQUFBcXRCLFlBQUFwdEIsRUFBQXlOLGdCQUFxSCxPQUFBek4sRUFBQXdPLEtBQUEsT0FBQXhPLEVBQUFxZ0IsTUFBQSxDQUFtQ3JnQixFQUFBcWdCLE1BQUFuUixPQUFBbFAsRUFBaUJBLElBQUFxZ0IsTUFBVSxTQUFTLEdBQUFyZ0IsSUFBQUYsRUFBQSxNQUFlLEtBQUssT0FDcmZFLEVBQUFzZ0IsU0FBVSxDQUFFLFVBQUF0Z0IsRUFBQWtQLFFBQUFsUCxFQUFBa1AsU0FBQXBQLEVBQUEsT0FBd0NFLElBQUFrUCxPQUFXbFAsRUFBQXNnQixRQUFBcFIsT0FBQWxQLEVBQUFrUCxPQUEwQmxQLElBQUFzZ0IsU0FDekYsU0FBQW9kLEdBQUE1OUIsR0FBZSxRQUFBQyxFQUFBRCxFQUFBbEUsR0FBQSxFQUFBQyxPQUFBLEVBQUFtRSxPQUFBLElBQW9DLENBQUUsSUFBQXBFLEVBQUEsQ0FBT0EsRUFBQW1FLEVBQUFtUCxPQUFXcFAsRUFBQSxPQUFRLENBQTJCLE9BQXpCLE9BQUFsRSxHQUFBd0ksRUFBQSxPQUF5QnhJLEVBQUE0UyxLQUFjLE9BQUEzUyxFQUFBRCxFQUFBNlIsVUFBcUJ6TixHQUFBLEVBQUssTUFBQUYsRUFBUSxPQUFnRCxPQUFBakUsRUFBQUQsRUFBQTZSLFVBQUF5WSxjQUFtQ2xtQixHQUFBLEVBQUssTUFBQUYsRUFBUWxFLElBQUFzVCxPQUFXdFQsR0FBQSxFQUFLLE9BQUFtRSxFQUFBeU8sS0FBQSxJQUFBek8sRUFBQXlPLElBQUEsQ0FBeUIxTyxFQUFBLFFBQUFHLEVBQUFGLEVBQUFtRyxFQUFBakcsSUFBbUIsR0FBQXU5QixHQUFBdDNCLEdBQUEsT0FBQUEsRUFBQW1hLE9BQUEsSUFBQW5hLEVBQUFzSSxJQUFBdEksRUFBQW1hLE1BQUFuUixPQUFBaEosTUFBQW1hLFVBQStELENBQUssR0FBQW5hLElBQUFqRyxFQUFBLE1BQWUsS0FBSyxPQUFBaUcsRUFBQW9hLFNBQWlCLENBQUUsVUFBQXBhLEVBQUFnSixRQUFBaEosRUFBQWdKLFNBQUFqUCxFQUFBLE1BQUFILEVBQXlDb0csSUFBQWdKLE9BQVdoSixFQUFBb2EsUUFBQXBSLE9BQUFoSixFQUFBZ0osT0FBMEJoSixJQUFBb2EsUUFBWXRnQixHQUMzZkMsRUFBQXBFLEVBQUFxSyxFQUFBbkcsRUFBQTBOLFVBQUEsSUFBQXhOLEVBQUE0WCxTQUFBNVgsRUFBQXNPLFdBQUE0ZSxZQUFBam5CLEdBQUFqRyxFQUFBa3RCLFlBQUFqbkIsSUFBQXJLLEVBQUFzeEIsWUFBQXB0QixFQUFBME4sZ0JBQTJHLE9BQUExTixFQUFBeU8sSUFBQTNTLEVBQUFrRSxFQUFBME4sVUFBQXlZLGNBQUFzWCxHQUFBejlCLEdBQUEsT0FBQUEsRUFBQXNnQixNQUFBLENBQW9FdGdCLEVBQUFzZ0IsTUFBQW5SLE9BQUFuUCxFQUFpQkEsSUFBQXNnQixNQUFVLFNBQVMsR0FBQXRnQixJQUFBRCxFQUFBLE1BQWUsS0FBSyxPQUFBQyxFQUFBdWdCLFNBQWlCLENBQUUsVUFBQXZnQixFQUFBbVAsUUFBQW5QLEVBQUFtUCxTQUFBcFAsRUFBQSxPQUFtRCxLQUFYQyxJQUFBbVAsUUFBV1YsTUFBQTVTLEdBQUEsR0FBa0JtRSxFQUFBdWdCLFFBQUFwUixPQUFBblAsRUFBQW1QLE9BQTBCblAsSUFBQXVnQixTQUN6VixTQUFBd2QsR0FBQWgrQixFQUFBQyxHQUFpQixPQUFBQSxFQUFBeU8sS0FBYyxhQUFhLFdBQUE1UyxFQUFBbUUsRUFBQTBOLFVBQXlCLFNBQUE3UixFQUFBLENBQVksSUFBQUMsRUFBQWtFLEVBQUE2MUIsY0FBc0I5MUIsRUFBQSxPQUFBQSxJQUFBODFCLGNBQUEvNUIsRUFBNkIsSUFBQW1FLEVBQUFELEVBQUF5RyxLQUFBdkcsRUFBQUYsRUFBQTQxQixZQUE2QjUxQixFQUFBNDFCLFlBQUEsS0FBbUIsT0FBQTExQixJQUFBckUsRUFBQXlTLEdBQUF4UyxFQUFBMjJCLEdBQUE1MkIsRUFBQXFFLEVBQUFELEVBQUFGLEVBQUFqRSxJQUFrQyxNQUFNLGNBQUFrRSxFQUFBME4sV0FBQXJKLEVBQUEsT0FBMENyRSxFQUFBME4sVUFBQThmLFVBQUF4dEIsRUFBQTYxQixjQUFzQyxNQUFNLE9BQWEsUUFBYyxjQUFjLFFBQUF4eEIsRUFBQSxRQUFrQixTQUFBMjVCLEdBQUFqK0IsRUFBQUMsRUFBQW5FLElBQW1CQSxFQUFBdzhCLEdBQUF4OEIsSUFBUTRTLElBQUEsRUFBUTVTLEVBQUF5OEIsU0FBV3NFLFFBQUEsTUFBYyxJQUFBOWdDLEVBQUFrRSxFQUFBdkQsTUFBbUQsT0FBckNaLEVBQUEwOEIsU0FBQSxXQUFzQjBGLEdBQUFuaUMsR0FBTXVoQyxHQUFBdDlCLEVBQUFDLElBQVNuRSxFQUM1ZCxTQUFBcWlDLEdBQUFuK0IsRUFBQUMsRUFBQW5FLElBQW1CQSxFQUFBdzhCLEdBQUF4OEIsSUFBUTRTLElBQUEsRUFBUSxJQUFBM1MsRUFBQWlFLEVBQUEyTixVQUFpTyxPQUEvTSxPQUFBNVIsR0FBQSxtQkFBQUEsRUFBQXFpQyxvQkFBQXRpQyxFQUFBMDhCLFNBQUEsV0FBMEUsT0FBQTZGLE1BQUEsSUFBQS9KLEtBQUFwekIsT0FBQW05QixHQUFBQyxJQUFBcDlCLE1BQTBDLElBQUFwRixFQUFBbUUsRUFBQXZELE1BQUFYLEVBQUFrRSxFQUFBaTVCLE1BQXdCb0UsR0FBQXQ5QixFQUFBQyxHQUFRaUIsS0FBQWs5QixrQkFBQXRpQyxHQUEwQnlpQyxlQUFBLE9BQUF4aUMsSUFBQSxPQUFpQ0QsRUFDcFEsU0FBQTBpQyxHQUFBeCtCLEVBQUFDLEVBQUFuRSxFQUFBQyxFQUFBbUUsRUFBQUMsR0FBeUJyRSxFQUFBc2tCLFdBQUEsSUFBaUJ0a0IsRUFBQWs2QixZQUFBbDZCLEVBQUFpNkIsV0FBQSxLQUFnQ2g2QixFQUFBazlCLEdBQUFsOUIsRUFBQUQsR0FBVWtFLEVBQUFDLEVBQUksR0FBRyxPQUFBRCxFQUFBME8sS0FBYyxPQUErQyxPQUEvQzFPLEVBQUFvZ0IsV0FBQSxVQUFxQ3VZLEdBQUEzNEIsRUFBWmpFLEVBQUFraUMsR0FBQWorQixFQUFBakUsRUFBQW9FLEdBQVlBLEdBQWlCLFVBQUFGLEVBQUFsRSxFQUFBRCxFQUFBa0UsRUFBQTJOLFVBQUEsT0FBQTNOLEVBQUFvZ0IsWUFBQSxPQUFBdGtCLEdBQUEsbUJBQUFBLEVBQUFzaUMsb0JBQUEsT0FBQUMsUUFBQUksSUFBQTNpQyxJQUFzSyxPQUF4Q2tFLEVBQUFvZ0IsV0FBQSxVQUE4QnVZLEdBQUEzNEIsRUFBWmpFLEVBQUFvaUMsR0FBQW4rQixFQUFBQyxFQUFBRSxHQUFZQSxHQUFrQkgsSUFBQW9QLGFBQVcsT0FBQXBQLEdBQ3hWLFNBQUEwK0IsR0FBQTErQixHQUFlLE9BQUFBLEVBQUEwTyxLQUFjLE9BQUF5bUIsR0FBQW4xQixHQUFhLElBQUFDLEVBQUFELEVBQUFvZ0IsVUFBa0IsWUFBQW5nQixHQUFBRCxFQUFBb2dCLFdBQUEsS0FBQW5nQixFQUFBLEdBQUFELEdBQUEsS0FBOEMsY0FBQSs1QixLQUFBM0UsS0FBQSxNQUFBbjFCLEVBQUFELEVBQUFvZ0IsWUFBQXBnQixFQUFBb2dCLFdBQUEsS0FBQW5nQixFQUFBLEdBQUFELEdBQUEsS0FBK0UsY0FBQWc2QixHQUFBaDZCLEdBQUEsS0FBeUIscUJBQUFDLEVBQUFELEVBQUFvZ0IsWUFBQXBnQixFQUFBb2dCLFdBQUEsS0FBQW5nQixFQUFBLEdBQUFELEdBQUEsS0FBb0UsY0FBQSs1QixLQUFBLEtBQXlCLGVBQUFSLEdBQUF2NUIsR0FBQSxLQUEwQixxQkFkM0prOUIsR0FBQSxhQUFnQkMsR0FBQSxTQUFBbjlCLEVBQUFDLEVBQUFuRSxJQUFtQm1FLEVBQUE0MUIsWUFBQS81QixJQUFBbWhDLEdBQUFoOUIsSUFBMEJtOUIsR0FBQSxTQUFBcDlCLEVBQUFDLEVBQUFuRSxFQUFBQyxHQUFxQkQsSUFBQUMsR0FBQWtoQyxHQUFBaDlCLElBYzhGLElBQUEwK0IsR0FBQTFLLEtBQUEySyxHQUFBLEVBQUFDLEdBQUFGLEdBQUFHLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxJQUFBLEVBQUEzM0IsR0FBQSxLQUFBNDNCLEdBQUEsS0FBQTMzQixHQUFBLEVBQUE0M0IsSUFBQSxFQUFBQyxJQUFBLEVBQUF0M0IsR0FBQSxLQUFBdTNCLElBQUEsRUFBQUMsSUFBQSxFQUFBaEIsR0FBQSxLQUM5VixTQUFBaUIsS0FBYyxVQUFBajRCLEdBQUEsUUFBQXJILEVBQUFxSCxHQUFBK0gsT0FBK0IsT0FBQXBQLEdBQVMsQ0FBRSxJQUFBQyxFQUFBRCxFQUFRLE9BQUFDLEVBQUF5TyxLQUFjLE9BQUF5bUIsR0FBQWwxQixHQUFhLE1BQU0sT0FBQTg1QixLQUFhM0UsS0FBTSxNQUFNLE9BQUE0RSxHQUFBLzVCLEdBQWEsTUFBTSxPQUFBODVCLEtBQWEsTUFBTSxRQUFBUixHQUFBdDVCLEdBQWNELElBQUFvUCxPQUFXNnZCLEdBQUEsS0FBUTMzQixHQUFBLEVBQUk0M0IsSUFBQSxFQUFNQyxJQUFBLEVBQU05M0IsR0FBQSxLQUFPZzRCLElBQUEsRUFDeE4sU0FBQUUsR0FBQXYvQixHQUFlLE9BQU0sQ0FBRSxJQUFBQyxFQUFBRCxFQUFBK1AsVUFBQWpVLEVBQUFrRSxFQUFBb1AsT0FBQXJULEVBQUFpRSxFQUFBd2dCLFFBQXlDLFdBQUF4Z0IsRUFBQW9nQixXQUFBLENBQTBCbmdCLEVBQUFvOUIsR0FBQXA5QixFQUFBRCxHQUFZLElBQUFFLEVBQUFGLEVBQVEsZ0JBQUFzSCxJQUFBLGFBQUFwSCxFQUFBZzJCLGVBQUEsQ0FBa0QsSUFBQS8xQixFQUFBLEVBQVEsT0FBQUQsRUFBQXdPLEtBQWMsa0JBQUF0SSxFQUFBbEcsRUFBQTIxQixZQUFrQyxPQUFBenZCLElBQUFqRyxFQUFBaUcsRUFBQTh2QixnQkFBK0IsSUFBQTl2QixFQUFBbEcsRUFBQXFnQixNQUFjLE9BQUFuYSxHQUFTLElBQUFBLEVBQUE4dkIsaUJBQUEsSUFBQS8xQixLQUFBaUcsRUFBQTh2QixrQkFBQS8xQixFQUFBaUcsRUFBQTh2QixnQkFBQTl2QixJQUFBb2EsUUFBcUZ0Z0IsRUFBQWcyQixlQUFBLzFCLEVBQW1CLFVBQUFGLEVBQUEsT0FBQUEsRUFDOUwsR0FEbU4sT0FBQW5FLEdBQUEsUUFBQUEsRUFBQXNrQixhQUFBLE9BQUF0a0IsRUFBQWs2QixjQUFBbDZCLEVBQUFrNkIsWUFBQWgyQixFQUFBZzJCLGFBQUEsT0FBQWgyQixFQUFBKzFCLGFBQzNZLE9BQUFqNkIsRUFBQWk2QixhQUFBajZCLEVBQUFpNkIsV0FBQUUsV0FBQWoyQixFQUFBZzJCLGFBQUFsNkIsRUFBQWk2QixXQUFBLzFCLEVBQUErMUIsWUFBQSxFQUFBLzFCLEVBQUFvZ0IsWUFBQSxPQUFBdGtCLEVBQUFpNkIsV0FBQWo2QixFQUFBaTZCLFdBQUFFLFdBQUFqMkIsRUFBQWxFLEVBQUFrNkIsWUFBQWgyQixFQUFBbEUsRUFBQWk2QixXQUFBLzFCLElBQXdMLE9BQUFqRSxFQUFBLE9BQUFBLEVBQXFCLFVBQUFELEVBQWdCLENBQUt1akMsSUFBQSxFQUFNLE1BQTNCci9CLEVBQUFsRSxNQUFrQyxDQUFrQixXQUFia0UsRUFBQTArQixHQUFBMStCLElBQWEsT0FBQUEsRUFBQW9nQixXQUFBLElBQUFwZ0IsRUFBbUcsR0FBN0QsT0FBQWxFLE1BQUFrNkIsWUFBQWw2QixFQUFBaTZCLFdBQUEsS0FBQWo2QixFQUFBc2tCLFdBQUEsS0FBNkQsT0FBQXJrQixFQUFBLE9BQUFBLEVBQXFCLFVBQUFELEVBQWdCLE1BQWhCa0UsRUFBQWxFLEdBQTRCLFlBQ3JaLFNBQUEwakMsR0FBQXgvQixHQUFlLElBQUFDLEVBQUF3OEIsR0FBQXo4QixFQUFBK1AsVUFBQS9QLEVBQUFzSCxJQUE4RCxPQUFwQyxPQUFBckgsTUFBQXMvQixHQUFBdi9CLElBQW9COFksR0FBQWpULFFBQUEsS0FBZ0I1RixFQUM3RSxTQUFBdy9CLEdBQUF6L0IsRUFBQUMsRUFBQW5FLEdBQW1Ca2pDLElBQUExNkIsRUFBQSxPQUFtQjA2QixJQUFBLEVBQU0vK0IsSUFBQXFILElBQUF0SCxJQUFBaS9CLElBQUEsT0FBQTUzQixLQUFBaTRCLEtBQUFoNEIsR0FBQXJILEVBQUFpL0IsSUFBQSxFQUFBNzNCLEdBQUE4dUIsSUFBQThJLEdBQUFqL0IsR0FBQTZGLFFBQUEsS0FBQXlCLElBQUF0SCxFQUFBZzNCLDRCQUFBLEdBQXVHLElBQUFqN0IsR0FBQSxFQUFzQixJQUFib2pDLElBQUFyakMsR0FBQXdMLElBQUFzM0IsS0FBYSxDQUFHLElBQUksR0FBQTlpQyxFQUFBLEtBQVUsT0FBQXVMLEtBQUFxNEIsTUFBZ0JyNEIsR0FBQW00QixHQUFBbjRCLFNBQVMsS0FBVSxPQUFBQSxJQUFTQSxHQUFBbTRCLEdBQUFuNEIsSUFBUyxNQUFBbEgsR0FBUyxVQUFBa0gsR0FBQXRMLEdBQUEsRUFBQW1pQyxHQUFBLzlCLE9BQXVCLENBQUssT0FBQWtILElBQUEvQyxFQUFBLE9BQTZCLElBQUFwRSxHQUFKcEUsRUFBQXVMLElBQUkrSCxPQUFlLFVBQUFsUCxFQUFBLENBQWFuRSxHQUFBLEVBQUttaUMsR0FBQS85QixHQUFNLE1BQU1xK0IsR0FBQXgrQixFQUFBRSxFQUFBcEUsRUFBQXFFLEVBQUFnL0IsRUFBQTczQixJQUFvQkQsR0FBQWs0QixHQUFBempDLElBQVMsTUFBcUIsR0FBTmtqQyxJQUFBLEVBQU1qakMsRUFBQSxZQUFpQixVQUFBc0wsR0FBQSxDQUFhLEdBQUFnNEIsR0FBQSxPQUFBci9CLEVBQUFnM0IsNEJBQUEvMkIsRUFBQUQsRUFBQTZGLFFBQUFrSyxVQUFpRW92QixJQUFBNzZCLEVBQUEsT0FDeGUsR0FBQTQ2QixJQUFBdFYsV0FBQSxXQUE2QixJQUFBM3BCLEVBQUFELEVBQUE2RixRQUFBcXdCLGVBQStCLElBQUFqMkIsSUFBQSxJQUFBRCxFQUFBbzNCLHlCQUFBcDNCLEVBQUFvM0Isd0JBQUFuM0IsSUFBQTAvQixHQUFBMy9CLEVBQUFDLElBQTZFaS9CLElBa0IzRCxTQUFBbC9CLEdBQWUsT0FBQWdJLElBQUExRCxFQUFBLE9BQXlCMEQsR0FBQW92Qix3QkFBQXAzQixFQWxCd0I0L0IsQ0FBQTUvQixFQUFBNkYsUUFBQXF3QixnQkFBNkIsWUFDbEwsU0FBQXVILEdBQUF6OUIsRUFBQUMsR0FBaUIsSUFBQW5FLEVBQU1rRSxFQUFBLENBQTJCLElBQXhCZy9CLEtBQUFJLElBQUE5NkIsRUFBQSxPQUF3QnhJLEVBQUFrRSxFQUFBb1AsT0FBZSxPQUFBdFQsR0FBUyxDQUFFLE9BQUFBLEVBQUE0UyxLQUFjLFdBQUEzUyxFQUFBRCxFQUFBNlIsVUFBeUIsc0JBQUE3UixFQUFBNEssS0FBQW01QiwwQkFBQSxtQkFBQTlqQyxFQUFBcWlDLG9CQUFBLE9BQUFDLFFBQUFJLElBQUExaUMsSUFBQSxDQUFnSjI4QixHQUFBNThCLEVBQVprRSxFQUFBbStCLEdBQUFyaUMsRUFBVmtFLEVBQUFpNUIsR0FBQWg1QixFQUFBRCxHQUFVLEdBQVksR0FBVXM2QixHQUFBeCtCLEVBQUEsR0FBUUEsT0FBQSxFQUFTLE1BQUFrRSxFQUFRLE1BQU0sT0FBNkIwNEIsR0FBQTU4QixFQUFaa0UsRUFBQWkrQixHQUFBbmlDLEVBQWpCa0UsRUFBQWk1QixHQUFBaDVCLEVBQUFELEdBQWlCLEdBQVksR0FBVXM2QixHQUFBeCtCLEVBQUEsR0FBUUEsT0FBQSxFQUFTLE1BQUFrRSxFQUFRbEUsSUFBQXNULE9BQVcsSUFBQXBQLEVBQUEwTyxNQUFBZ3FCLEdBQUExNEIsRUFBQWxFLEVBQUFtaUMsR0FBQWorQixFQUFBbEUsRUFBQW05QixHQUFBaDVCLEVBQUFELEdBQUEsTUFBQXM2QixHQUFBdDZCLEVBQUEsSUFBcURsRSxPQUFBLEVBQVMsT0FBQUEsRUFDcmIsU0FBQWdrQyxLQUFjLElBQUE5L0IsRUFBQSxVQUFBbzZCLEtBQUEsY0FBbUQsT0FBaEJwNkIsR0FBQTgrQixLQUFBOStCLEVBQUE4K0IsR0FBQSxHQUFnQkEsR0FBQTkrQixFQUFZLFNBQUFxNkIsR0FBQXI2QixFQUFBQyxHQUFtSSxPQUFsSEQsRUFBQSxJQUFBKytCLE1BQUFDLEdBQUFJLEdBQUEsRUFBQTkzQixHQUFBLEVBQUFySCxFQUFBckQsS0FBQW1qQyxHQUFBLFVBQUEvL0IsRUFBQSx1QkFBQUEsRUFBQSxnQkFBdUYrL0IsS0FBQSxJQUFBQyxJQUFBaGdDLEVBQUFnZ0MsU0FBQWhnQyxHQUEyQkEsRUFDaE4sU0FBQXM2QixHQUFBdDZCLEVBQUFDLEdBQWlCLEtBQUssT0FBQUQsR0FBUyxDQUFvTCxJQUFsTCxJQUFBQSxFQUFBazJCLGdCQUFBbDJCLEVBQUFrMkIsZUFBQWoyQixLQUFBRCxFQUFBazJCLGVBQUFqMkIsR0FBK0QsT0FBQUQsRUFBQStQLFlBQUEsSUFBQS9QLEVBQUErUCxVQUFBbW1CLGdCQUFBbDJCLEVBQUErUCxVQUFBbW1CLGVBQUFqMkIsS0FBQUQsRUFBQStQLFVBQUFtbUIsZUFBQWoyQixHQUFtSCxPQUFBRCxFQUFBb1AsT0FBQSxRQUFBcFAsRUFBQTBPLElBQWlKLE1BQWhILElBQUE1UyxFQUFBa0UsRUFBQTJOLFdBQWtCcXhCLElBQUEsSUFBQTEzQixJQUFBckgsRUFBQXFILElBQUFnNEIsS0FBc0IsSUFBQXZqQyxFQUFBRCxFQUFBK0osUUFBQXF3QixlQUErQjhJLEtBQUFJLElBQUFILEtBQUFuakMsR0FBQTZqQyxHQUFBN2pDLEVBQUFDLEdBQXlCa2tDLEdBQUFDLElBQUE1N0IsRUFBQSxPQUEyQnRFLElBQUFvUCxRQUFZLFNBQUFnckIsS0FBeUIsT0FBWHlFLEdBQUE1SyxLQUFBMEssR0FBV0MsR0FBQSxHQUFBQyxHQUFBLE1BQ3BaLFNBQUFzQixHQUFBbmdDLEdBQWUsSUFBQUMsRUFBQTgrQixHQUFTQSxHQUFBLFVBQUEzRSxLQUFBLGNBQWdDLElBQUksT0FBQXA2QixJQUFXLFFBQVErK0IsR0FBQTkrQixHQUFNLFNBQUFtZ0MsR0FBQXBnQyxFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEdBQXVCLElBQUFDLEVBQUE0K0IsR0FBU0EsR0FBQSxFQUFLLElBQUksT0FBQS8rQixFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEdBQWtCLFFBQVE2K0IsR0FBQTUrQixHQUFNLElBQUFrZ0MsR0FBQSxLQUFBdjRCLEdBQUEsS0FBQXc0QixHQUFBLEVBQUFDLFFBQUEsRUFBQXg0QixJQUFBLEVBQUFDLEdBQUEsS0FBQTJCLEdBQUEsRUFBQXEyQixHQUFBLEVBQUFRLElBQUEsRUFBQUMsSUFBQSxFQUFBQyxHQUFBLEtBQUFDLEdBQUEsS0FBQS8yQixJQUFBLEVBQUFnM0IsSUFBQSxFQUFBYixJQUFBLEVBQUFjLEdBQUEsS0FBQVgsR0FBQSxJQUFBRCxHQUFBLEVBQUFhLEdBQUEsRUFBNkgsU0FBQUMsR0FBQS9nQyxHQUFlLE9BQUFzZ0MsR0FBQSxDQUFXLEdBQUF0Z0MsRUFBQXNnQyxHQUFBLE9BQWUsT0FBQUMsSUFBQXBNLEdBQUFvTSxJQUFrQixJQUFBdGdDLEVBQUFnMEIsS0FBQTBLLEdBQWMyQixHQUFBdGdDLEVBQUt1Z0MsR0FBQXJNLEdBQUE4TSxJQUFVM1YsUUFBQSxJQUFBcnJCLEVBQUEsR0FBQUMsSUFDblgsU0FBQTAvQixHQUFBMy9CLEVBQUFDLEdBQWlCLFVBQUFELEVBQUFzM0Isa0JBQUF0M0IsRUFBQW8zQix3QkFBQW4zQixFQUFBLE9BQUE2SCxJQUFBdTRCLEdBQUF2NEIsR0FBQTlILElBQUFzM0Isa0JBQUF0M0IsSUFBQThILE1BQUF3dkIsa0JBQUF0M0IsR0FBQXMzQixrQkFBQStJLE9BQW1KLENBQUssSUFBQXZrQyxFQUFBa0UsRUFBQW8zQix5QkFBZ0MsSUFBQXQ3QixHQUFBbUUsRUFBQW5FLEtBQUFrRSxFQUFBbzNCLHdCQUFBbjNCLEdBQTBDOEgsS0FBQTZCLEdBQUFnM0IsS0FBQTU0QixHQUFBaEksRUFBQTJKLEdBQUEsRUFBQXMzQixHQUFBamhDLEVBQUEsV0FBQUMsRUFBQWloQyxLQUFBSCxHQUFBOWdDLElBQ25QLFNBQUFraEMsS0FBYyxJQUFBbmhDLEVBQUEsRUFBQUMsRUFBQSxLQUFlLFVBQUE2SCxHQUFBLFFBQUFoTSxFQUFBZ00sR0FBQS9MLEVBQUFza0MsR0FBNkIsT0FBQXRrQyxHQUFTLENBQUUsSUFBQW1FLEVBQUFuRSxFQUFBcTdCLHdCQUFnQyxPQUFBbDNCLEVBQUEsQ0FBNkMsSUFBbkMsT0FBQXBFLEdBQUEsT0FBQWdNLEtBQUF4RCxFQUFBLE9BQW1DdkksTUFBQXU3QixrQkFBQSxDQUE0QitJLEdBQUF2NEIsR0FBQS9MLEVBQUF1N0Isa0JBQUEsS0FBOEIsTUFBTSxHQUFBdjdCLElBQUFza0MsTUFBQW5nQyxFQUFBbkUsRUFBQXU3QixrQkFBQXh2QixHQUFBd3ZCLGtCQUFBcDNCLEVBQUFuRSxFQUFBdTdCLGtCQUFBLFNBQXVGLElBQUF2N0IsSUFBQStMLEdBQUEsRUFBZUEsR0FBQWhNLEdBQUl3N0Isa0JBQUErSSxHQUF1QnRrQyxFQUFBdTdCLGtCQUFBLEtBQXlCLE1BQU14N0IsRUFBQXc3QixrQkFBQXY3QixFQUFBdTdCLGtCQUFBdjdCLEVBQUF1N0Isa0JBQUEsS0FBc0V2N0IsRUFBQUQsRUFBQXc3QixzQkFBc0IsQ0FBMkIsSUFBdEIsSUFBQXQzQixHQUFBRSxFQUFBRixPQUFBRSxFQUFBRCxFQUFBbEUsR0FBc0JBLElBQUErTCxHQUFBLE1BQ3plaE0sRUFBQUMsRUFBSUEsSUFBQXU3QixtQkFBMkIsUUFBSng3QixFQUFBa00sS0FBSWxNLElBQUFtRSxHQUFBLElBQUFELEVBQUFpZ0MsUUFBQSxFQUFpQ2o0QixHQUFBL0gsRUFBSTBKLEdBQUEzSixFQUFJLFNBQUFnaEMsR0FBQWhoQyxHQUFlb2hDLEdBQUEsS0FBQXBoQyxHQUFXLFNBQUFraEMsS0FBY0UsR0FBQSxXQUFjLFNBQUFBLEdBQUFwaEMsRUFBQUMsRUFBQW5FLEdBQTZCLEdBQVY2a0MsR0FBQTdrQyxFQUFLcWxDLEtBQUtsaEMsRUFBQSxLQUFVLE9BQUErSCxJQUFBLElBQUEyQixLQUFBLElBQUEzSixNQUFBMkosT0FBQTYyQixJQUFBcEcsTUFBQXp3QixLQUErQ3l3QixLQUFBNkcsR0FBQWo1QixHQUFBMkIsSUFBQTYyQixJQUFBVyxVQUF1QixLQUFVLE9BQUFuNUIsSUFBQSxJQUFBMkIsS0FBQSxJQUFBM0osTUFBQTJKLEtBQStCczNCLEdBQUFqNUIsR0FBQTJCLElBQUEsR0FBQXczQixLQUFpQixPQUFBUixLQUFBTCxHQUFBLEVBQUFDLEdBQUEsTUFBMEIsSUFBQTUyQixJQUFBbzNCLEdBQUFwM0IsSUFBYWczQixHQUFBLEtBQVFILElBQUEsRUFBTWEsS0FBSyxTQUFBQyxHQUFBdGhDLEVBQUFDLEdBQWlCOEgsSUFBQXpELEVBQUEsT0FBa0IwRCxHQUFBaEksRUFBSTJKLEdBQUExSixFQUFJZ2hDLEdBQUFqaEMsRUFBQUMsR0FBQSxHQUFXaWhDLEtBQUtHLEtBQzFaLFNBQUFBLEtBQW1CLEdBQUxwQixHQUFBLEVBQUssT0FBQVksR0FBQSxDQUFjLElBQUE3Z0MsRUFBQTZnQyxHQUFTQSxHQUFBLEtBQVEsUUFBQTVnQyxFQUFBLEVBQVlBLEVBQUFELEVBQUFKLE9BQVdLLElBQUEsQ0FBSyxJQUFBbkUsRUFBQWtFLEVBQUFDLEdBQVcsSUFBSW5FLEVBQUF5bEMsY0FBZ0IsTUFBQXhsQyxHQUFTMGtDLFNBQUEsRUFBQUMsR0FBQTNrQyxLQUFtQixHQUFBMGtDLEdBQUEsTUFBQXpnQyxFQUFBMGdDLE1BQUEsS0FBQUQsSUFBQSxFQUFBemdDLEVBQWtDLFNBQUFpaEMsR0FBQWpoQyxFQUFBQyxFQUFBbkUsR0FBbUJpTSxJQUFBekQsRUFBQSxPQUFrQnlELElBQUEsRUFBS2pNLEVBQUEsUUFBQUEsRUFBQWtFLEVBQUFpM0IsY0FBQXVLLEdBQUF4aEMsRUFBQWxFLEVBQUFtRSxHQUFBLFFBQUFuRSxFQUFBMmpDLEdBQUF6L0IsRUFBQUMsR0FBQSxNQUFBeS9CLEtBQUExL0IsRUFBQWkzQixhQUFBbjdCLEVBQUEwbEMsR0FBQXhoQyxFQUFBbEUsRUFBQW1FLElBQUEsUUFBQW5FLEVBQUFrRSxFQUFBaTNCLGNBQUF1SyxHQUFBeGhDLEVBQUFsRSxFQUFBbUUsR0FBQSxRQUFBbkUsRUFBQTJqQyxHQUFBei9CLEVBQUFDLEdBQUEsS0FBQXVoQyxHQUFBeGhDLEVBQUFsRSxFQUFBbUUsR0FBNEs4SCxJQUFBLEVBQ2pZLFNBQUF5NUIsR0FBQXhoQyxFQUFBQyxFQUFBbkUsR0FBbUIsSUFBQUMsRUFBQWlFLEVBQUFxM0IsV0FBbUIsVUFBQXQ3QixLQUFBMGxDLGlCQUFBM2xDLElBQUEsT0FBQStrQyxPQUFBOWtDLEdBQUE4a0MsR0FBQTc5QixLQUFBakgsS0FBQTJsQyxRQUF3SCxPQUE3QzFoQyxFQUFBaTNCLGFBQUFoM0IsT0FBaUJELEVBQUFvM0Isd0JBQUEsR0FBdU4sR0FBcExwM0IsRUFBQWkzQixhQUFBLEtBQW9CbUksR0FBQUosSUFBQSxHQUFTbGpDLEVBQUFtRSxFQUFBME4sV0FBYzlILFVBQUE1RixHQUFBcUUsRUFBQSxPQUE4RCxLQUFoQ3ZJLEVBQUFELEVBQUFrN0IsOEJBQWdDMXlCLEVBQUEsT0FBc0J4SSxFQUFBazdCLDRCQUFBLEVBQWdDb0QsS0FBS3RoQixHQUFBalQsUUFBQSxLQUFnQixFQUFBNUYsRUFBQW1nQixVQUFBLFVBQUFuZ0IsRUFBQTgxQixXQUFBLENBQXlDOTFCLEVBQUE4MUIsV0FBQUUsV0FBQWgyQixFQUEwQixJQUFBQyxFQUFBRCxFQUFBKzFCLGlCQUFvQjkxQixFQUFBRCxPQUFTQyxFQUFBRCxFQUFBKzFCLFlBQXFCcEMsR0FBQXROLEdBQU0sSUFBQW5tQixFQUFBOEosSUFBVyxHQUFBNmQsR0FBQTNuQixHQUFBLENBQVUsc0JBQ3plQSxFQUFBLElBQUFpRyxHQUFTb2lCLE1BQUFyb0IsRUFBQXNvQixlQUFBQyxJQUFBdm9CLEVBQUF3b0IsbUJBQTJDM29CLEVBQUEsQ0FBUSxJQUFBcUcsRUFBQXpJLE9BQUFnckIsY0FBQWhyQixPQUFBZ3JCLGVBQWlELEdBQUF2aUIsR0FBQSxJQUFBQSxFQUFBczdCLFdBQUEsQ0FBd0J2N0IsRUFBQUMsRUFBQXdpQixXQUFlLElBQUFobEIsRUFBQXdDLEVBQUF5aUIsYUFBQTVyQixFQUFBbUosRUFBQTBpQixVQUFtQzFpQixJQUFBMmlCLFlBQWdCLElBQUk1aUIsRUFBQTJSLFNBQUE3YSxFQUFBNmEsU0FBc0IsTUFBQTZwQixHQUFVeDdCLEVBQUEsS0FBTyxNQUFBcEcsRUFBUSxJQUFBekQsRUFBQSxFQUFBMkgsR0FBQSxFQUFBNEMsR0FBQSxFQUFBeTBCLEVBQUEsRUFBQUMsRUFBQSxFQUFBNTJCLEVBQUF6RSxFQUFBeEQsRUFBQSxLQUF1Q3NELEVBQUEsT0FBUSxDQUFFLFFBQUFrRSxFQUFhUyxJQUFBd0IsR0FBQSxJQUFBdkMsR0FBQSxJQUFBZSxFQUFBbVQsV0FBQTdULEVBQUEzSCxFQUFBc0gsR0FBc0NlLElBQUExSCxHQUFBLElBQUFtSixHQUFBLElBQUF6QixFQUFBbVQsV0FBQWpSLEVBQUF2SyxFQUFBOEosR0FBc0MsSUFBQXpCLEVBQUFtVCxXQUFBeGIsR0FBQXFJLEVBQUE2b0IsVUFBQTd0QixRQUF3QyxRQUFBdUUsRUFBQVMsRUFBQTRpQixhQUFpQzdxQixFQUFBaUksRUFBSUEsRUFBQVQsRUFBSSxPQUFNLENBQUUsR0FBQVMsSUFBQXpFLEVBQUEsTUFBQUYsRUFDdGIsR0FEdWN0RCxJQUFBeUosS0FDOWVtMUIsSUFBQTEzQixJQUFBSyxFQUFBM0gsR0FBZ0JJLElBQUFPLEtBQUFzK0IsSUFBQW4xQixJQUFBUyxFQUFBdkssR0FBdUIsUUFBQTRILEVBQUFTLEVBQUFpakIsYUFBQSxNQUFzQ2xyQixHQUFKaUksRUFBQWpJLEdBQUk4UixXQUFlN0osRUFBQVQsRUFBSWlDLEdBQUEsSUFBQWxDLElBQUEsSUFBQTRDLEVBQUEsTUFBdUIwaEIsTUFBQXRrQixFQUFBd2tCLElBQUE1aEIsUUFBZVYsRUFBQSxLQUFZQSxNQUFNb2lCLE1BQUEsRUFBQUUsSUFBQSxRQUFldGlCLEVBQUEsS0FBdUQsSUFBM0N5dEIsSUFBSWdPLFlBQUExaEMsRUFBQTJoQyxlQUFBMTdCLEdBQWdDbWdCLElBQUEsR0FBTzFlLEdBQUEzSCxFQUFRLE9BQUEySCxJQUFTLENBQUUxSCxHQUFBLEVBQUtpRyxPQUFBLEVBQVMsSUFBSSxLQUFLLE9BQUF5QixJQUFTLENBQUUsT0FBQUEsR0FBQXVZLFVBQUEsQ0FBb0IsSUFBQXBjLEVBQUE2RCxHQUFBa0ksVUFBc0IsUUFBSmxNLEVBQUFnRSxJQUFJNkcsS0FBYyxjQUFBN0ssRUFBQXVjLFdBQUEsT0FBQXBjLEVBQUEsQ0FBcUMsSUFBQUksRUFBQUosRUFBQTh4QixjQUFBcHhCLEVBQUFWLEVBQUE0eEIsY0FBQW1NLEVBQUFsK0IsRUFBQThKLFVBQXVEbzBCLEVBQUFuZ0MsTUFBQWlDLEVBQUFpeUIsY0FBeUJpTSxFQUFBNy9CLE1BQUEyQixFQUFBK3hCLGNBQXlCLElBQUFvTSxFQUFBRCxFQUFBakgsd0JBQUExMkIsRUFDemRNLEdBQUdxOUIsRUFBQUUsb0NBQUFELEVBQTBDLE1BQU0sa0NBQWtDLFFBQUExOUIsRUFBQSxRQUFrQnVELE1BQUFvdUIsWUFBZ0IsTUFBQTJMLEdBQVV6aEMsR0FBQSxFQUFBaUcsRUFBQXc3QixFQUFVemhDLElBQUEsT0FBQTBILElBQUF2RCxFQUFBLE9BQUFtNUIsR0FBQTUxQixHQUFBekIsR0FBQSxPQUFBeUIsV0FBQW91QixhQUFpRSxJQUFBcHVCLEdBQUEzSCxFQUFRLE9BQUEySCxJQUFTLENBQUU3RCxHQUFBLEVBQUtJLE9BQUEsRUFBUyxJQUFJLEtBQUssT0FBQXlELElBQVMsQ0FBRSxJQUFBL0QsRUFBQStELEdBQUF1WSxVQUEyQyxHQUF6QixHQUFBdGMsR0FBQXlwQixHQUFBMWxCLEdBQUE4RixVQUFBLElBQXlCLElBQUE3SixFQUFBLENBQVUsSUFBQU8sRUFBQXdELEdBQUFrSSxVQUFrQixVQUFBMUwsRUFBQSxDQUFhLElBQUEzSSxFQUFBMkksRUFBQTJCLElBQVksT0FBQXRLLElBQUEsbUJBQUFBLElBQUEsTUFBQUEsRUFBQW1LLFFBQUEsT0FBMEQsVUFBQS9CLEdBQWEsT0FBQWc2QixHQUFBajJCLElBQWFBLEdBQUF1WSxZQUFBLEVBQWdCLE1BQU0sT0FBQTBkLEdBQUFqMkIsSUFBYUEsR0FBQXVZLFlBQUEsRUFBZ0I0ZCxHQUFBbjJCLEdBQUFrSSxVQUN4ZWxJLElBQUcsTUFBTSxPQUFBbTJCLEdBQUFuMkIsR0FBQWtJLFVBQUFsSSxJQUF5QixNQUFNLE9BQUErMUIsR0FBQWw1QixFQUFBbUQsSUFBQW5ELEVBQUEwSyxPQUFBLEtBQUExSyxFQUFBNmIsTUFBQSxLQUFBN2IsRUFBQXFMLFlBQUFyTCxFQUFBcUwsVUFBQXdRLE1BQUEsS0FBQTdiLEVBQUFxTCxVQUFBWCxPQUFBLE1BQTBHdkgsTUFBQW91QixZQUFnQixNQUFBMkwsR0FBVTU5QixHQUFBLEVBQUFJLEVBQUF3OUIsRUFBVTU5QixJQUFBLE9BQUE2RCxJQUFBdkQsRUFBQSxPQUFBbTVCLEdBQUE1MUIsR0FBQXpELEdBQUEsT0FBQXlELFdBQUFvdUIsYUFBZ0gsR0FBL0N2NkIsRUFBQW00QixHQUFLeHZCLEVBQUE0RixJQUFPbkcsRUFBQXBJLEVBQUFtbUMsWUFBZ0I3OUIsRUFBQXRJLEVBQUFvbUMsZUFBbUJ6OUIsSUFBQVAsR0FBQXFHLEVBQUF4RyxTQUFBK04sZ0JBQUE1TixHQUFBLENBQTBDLE9BQUFFLEdBQUE4akIsR0FBQWhrQixLQUFBTyxFQUFBTCxFQUFBd2tCLFdBQUEsS0FBQTlzQixFQUFBc0ksRUFBQTBrQixPQUFBaHRCLEVBQUEySSxHQUFBLG1CQUFBUCxLQUFBMmtCLGVBQUFwa0IsRUFBQVAsRUFBQTZrQixhQUFBdGEsS0FBQTZ6QixJQUFBeG1DLEVBQUFvSSxFQUFBcEgsTUFBQWtELFNBQUFoQyxPQUFBZ3JCLGVBQUF2a0IsRUFBQXpHLE9BQUFnckIsZUFDaFZ4a0IsRUFBQU4sRUFBQTJOLE1BQUE3UixPQUFBbEUsRUFBQTJTLEtBQUE2ekIsSUFBQWwrQixFQUFBd2tCLE1BQUFwa0IsR0FBQUosT0FBQSxJQUFBQSxFQUFBMGtCLElBQUFodEIsRUFBQTJTLEtBQUE2ekIsSUFBQWwrQixFQUFBMGtCLElBQUF0a0IsSUFBQUMsRUFBQWtQLFFBQUE3WCxFQUFBc0ksSUFBQUksRUFBQUosSUFBQXRJLElBQUEwSSxLQUFBcWpCLEdBQUEzakIsRUFBQXBJLEdBQUFnSixFQUFBK2lCLEdBQUEzakIsRUFBQUUsR0FBQUksR0FBQU0sSUFBQSxJQUFBTCxFQUFBczlCLFlBQUF0OUIsRUFBQXdrQixhQUFBemtCLEVBQUF1akIsTUFBQXRqQixFQUFBeWtCLGVBQUExa0IsRUFBQXdqQixRQUFBdmpCLEVBQUEwa0IsWUFBQXJrQixFQUFBaWpCLE1BQUF0akIsRUFBQTJrQixjQUFBdGtCLEVBQUFrakIsV0FBQW1hLEVBQUFwK0IsU0FBQXcrQixlQUFBQyxTQUFBaCtCLEVBQUF1akIsS0FBQXZqQixFQUFBd2pCLFFBQUF2akIsRUFBQWcrQixrQkFBQTNtQyxFQUFBc0ksR0FBQUssRUFBQWkrQixTQUFBUCxHQUFBMTlCLEVBQUFrUCxPQUFBN08sRUFBQWlqQixLQUFBampCLEVBQUFrakIsVUFBQW1hLEVBQUFRLE9BQUE3OUIsRUFBQWlqQixLQUFBampCLEVBQUFrakIsUUFBQXZqQixFQUFBaStCLFNBQUFQLE9BQW9hMTlCLEtBQUssSUFBQTNJLEVBQUFvSSxFQUFRcEksSUFBQStTLFlBQWUsSUFBQS9TLEVBQUFxYyxVQUFBMVQsRUFBQXJCLE1BQXlCNjVCLFFBQUFuaEMsRUFBQThtQyxLQUFBOW1DLEVBQUErbUMsV0FDemRDLElBQUFobkMsRUFBQWluQyxZQUF5RCxJQUF2QyxtQkFBQTcrQixFQUFBa3VCLE9BQUFsdUIsRUFBQWt1QixRQUF1Q2x1QixFQUFBLEVBQVFBLEVBQUFPLEVBQUF6RSxPQUFXa0UsS0FBQXBJLEVBQUEySSxFQUFBUCxJQUFBKzRCLFFBQUE0RixXQUFBL21DLEVBQUE4bUMsS0FBQTltQyxFQUFBbWhDLFFBQUE4RixVQUFBam5DLEVBQUFnbkMsSUFBb0csSUFBbkM3TyxHQUFBLEtBQVF0TixHQUFBcU4sSUFBT0EsR0FBQSxLQUFROTNCLEVBQUErSixRQUFBNUYsRUFBWTRILEdBQUEzSCxFQUFRLE9BQUEySCxJQUFTLENBQUUzSCxHQUFBLEVBQUs0RCxPQUFBLEVBQVMsSUFBSSxJQUFBTyxFQUFBdEksRUFBUSxPQUFBOEwsSUFBUyxDQUFFLElBQUErNkIsRUFBQS82QixHQUFBdVksVUFBbUIsTUFBQXdpQixFQUFBLENBQVUsSUFBQUMsRUFBQWg3QixHQUFBa0ksVUFBMkIsT0FBSi9MLEVBQUFLLEdBQUozSSxFQUFBbU0sSUFBUTZHLEtBQWMsV0FBQW8wQixFQUFBcG5DLEVBQUFpUyxVQUEwQixLQUFBalMsRUFBQTBrQixVQUFBLFVBQUF5aUIsRUFBQUMsRUFBQWxoQyxNQUFBbEcsRUFBQW82QixjQUFBZ04sRUFBQTVnQyxNQUFBeEcsRUFBQWs2QixjQUFBa04sRUFBQTdILHdCQUF1RyxDQUFLLElBQUE4SCxFQUFBRixFQUFBL00sY0FBQWtOLEVBQUFILEVBQUFqTixjQUE0Q2tOLEVBQUFsaEMsTUFBQWxHLEVBQUFvNkIsY0FDaGVnTixFQUFBNWdDLE1BQUF4RyxFQUFBazZCLGNBQXlCa04sRUFBQWxHLG1CQUFBbUcsRUFBQUMsRUFBQUYsRUFBQWIscUNBQW9FLElBQUFnQixFQUFBdm5DLEVBQUFtNkIsWUFBcUIsT0FBQW9OLElBQUFILEVBQUFsaEMsTUFBQWxHLEVBQUFvNkIsY0FBQWdOLEVBQUE1Z0MsTUFBQXhHLEVBQUFrNkIsY0FBQW9ELEdBQUF0OUIsRUFBQXVuQyxFQUFBSCxJQUE2RSxNQUFNLFdBQUFJLEVBQUF4bkMsRUFBQW02QixZQUE0QixVQUFBcU4sRUFBQSxDQUFxQixHQUFQOStCLEVBQUEsS0FBTyxPQUFBMUksRUFBQTZrQixNQUFBLE9BQUE3a0IsRUFBQTZrQixNQUFBN1IsS0FBc0MsT0FBQXRLLEVBQUExSSxFQUFBNmtCLE1BQUE1UyxVQUEyQixNQUFNLE9BQUF2SixFQUFBMUksRUFBQTZrQixNQUFBNVMsVUFBMkJxckIsR0FBQXQ5QixFQUFBd25DLEVBQUE5K0IsR0FBYSxNQUFNLFdBQUErK0IsRUFBQXpuQyxFQUFBaVMsVUFBMEIsT0FBQWsxQixHQUFBLEVBQUFubkMsRUFBQTBrQixXQUFBMFQsR0FBQXA0QixFQUFBZ0wsS0FBQWhMLEVBQUFvNkIsZ0JBQUFxTixFQUFBblIsUUFBaUUsTUFBTSxPQUFhLE9BQWEsUUFBYyxjQUNwZixRQUFBMXRCLEVBQUEsUUFBa0IsT0FBQXMrQixFQUFBLENBQVdsbkMsT0FBQSxFQUFTLElBQUEwbkMsRUFBQXY3QixHQUFBN0IsSUFBYSxVQUFBbzlCLEVBQUEsQ0FBYyxJQUFBQyxFQUFBeDdCLEdBQUE4RixVQUFtQixPQUFBOUYsR0FBQTZHLEtBQWMsT0FBQWhULEVBQUEybkMsRUFBWSxNQUFNLFFBQUEzbkMsRUFBQTJuQyxFQUFhLG1CQUFBRCxJQUFBMW5DLEdBQUEwbkMsRUFBQXY5QixRQUFBbkssR0FBMkMsSUFBQTRuQyxFQUFBejdCLEdBQUFvdUIsV0FBb0JwdUIsR0FBQW91QixXQUFBLEtBQWtCcHVCLEdBQUF5N0IsR0FBTSxNQUFBMUIsR0FBVTFoQyxHQUFBLEVBQUE0RCxFQUFBODlCLEVBQVUxaEMsSUFBQSxPQUFBMkgsSUFBQXZELEVBQUEsT0FBQW01QixHQUFBNTFCLEdBQUEvRCxHQUFBLE9BQUErRCxXQUFBb3VCLGFBQWlFK0ksR0FBQUksSUFBQSxFQUFTMUgsR0FBQXozQixFQUFBME4sV0FBbUUsS0FBM0IxTixFQUFBbkUsRUFBQStKLFFBQUFxd0Isa0JBQTJCbUksR0FBQSxNQUFpQnIrQixFQUFBbzNCLHdCQUFBbjNCLEVBQTRCLFNBQUF5L0IsS0FBYyxlQUFBaUIsT0FBQTdWLGdCQUFBZ1csTUFBQU4sSUFBQSxHQUNwYixTQUFBdEMsR0FBQWwrQixHQUFlLE9BQUFnSSxJQUFBMUQsRUFBQSxPQUF5QjBELEdBQUFvdkIsd0JBQUEsRUFBNEJxSixTQUFBLEVBQUFDLEdBQUExZ0MsR0FBcUYsU0FBQXVqQyxHQUFBdmpDLEVBQUFDLEdBQWlCLElBQUFuRSxFQUFBOE4sR0FBUUEsSUFBQSxFQUFLLElBQUksT0FBQTVKLEVBQUFDLEdBQVksU0FBUTJKLEdBQUE5TixJQUFBaU0sSUFBQW01QixNQUFnQixTQUFBc0MsR0FBQXhqQyxFQUFBQyxHQUFpQixHQUFBMkosS0FBQWczQixHQUFBLENBQVdBLElBQUEsRUFBTSxJQUFJLE9BQUE1Z0MsRUFBQUMsR0FBWSxRQUFRMmdDLElBQUEsR0FBTyxPQUFBNWdDLEVBQUFDLEdBQVksU0FBQXdqQyxHQUFBempDLEVBQUFDLEdBQWlCOEgsSUFBQXpELEVBQUEsT0FBa0IsSUFBQXhJLEVBQUE4TixHQUFRQSxJQUFBLEVBQUssSUFBSSxPQUFBdzJCLEdBQUFwZ0MsRUFBQUMsR0FBZSxRQUFRMkosR0FBQTlOLEVBQUFvbEMsTUFDdlgsU0FBQXdDLEdBQUExakMsRUFBQUMsRUFBQW5FLEdBQW1CLEdBQUFpa0MsR0FBQSxPQUFBLy9CLEVBQUFDLEVBQUFuRSxHQUFvQjhOLElBQUE3QixJQUFBLElBQUFpNEIsS0FBQW9CLEdBQUFwQixJQUFBLFFBQUFBLEdBQUEsR0FBb0MsSUFBQWprQyxFQUFBZ2tDLEdBQUE3L0IsRUFBQTBKLEdBQWFBLEdBQUFtMkIsSUFBQSxFQUFRLElBQUksT0FBQS8vQixFQUFBQyxFQUFBbkUsR0FBYyxRQUFRaWtDLEdBQUFoa0MsR0FBQTZOLEdBQUExSixJQUFBNkgsSUFBQW01QixNQUFxQixTQUFBeUMsR0FBQTNqQyxHQUFlLElBQUFDLEVBQUEySixHQUFRQSxJQUFBLEVBQUssSUFBSXcyQixHQUFBcGdDLEdBQU0sU0FBUTRKLEdBQUEzSixJQUFBOEgsSUFBQXE1QixHQUFBLFlBQzdMLFNBQUF3QyxHQUFBNWpDLEVBQUFDLEVBQUFuRSxFQUFBQyxFQUFBbUUsR0FBdUIsSUFBQUMsRUFBQUYsRUFBQTRGLFFBQWdCLEdBQUEvSixFQUFBLENBQThCLElBQUFzSyxFQUF4QnRLLElBQUFxK0Isb0JBQThCbDZCLEVBQUEsQ0FBd0MsSUFBckMsSUFBQWtnQixHQUFBcmtCLElBQUEsSUFBQUEsRUFBQTRTLEtBQUFwSyxFQUFBLE9BQXFDOEIsRUFBQXRLLEVBQVEsSUFBQXNLLEVBQUFzSSxLQUFVLENBQUUsR0FBQW1tQixHQUFBenVCLEdBQUEsQ0FBVUEsSUFBQXVILFVBQUE4bkIsMENBQXdELE1BQUF4MUIsR0FBUW1HLElBQUFnSixTQUFBOUssRUFBQSxPQUE2QjhCLElBQUF1SCxVQUFBekksUUFBc0JwSixFQUFBKzRCLEdBQUEvNEIsR0FBQXc1QixHQUFBeDVCLEVBQUFzSyxVQUFrQnRLLEVBQUFzTyxFQUEySixPQUFqSixPQUFBbkssRUFBQWlGLFFBQUFqRixFQUFBaUYsUUFBQXBKLEVBQUFtRSxFQUFBaTNCLGVBQUFwN0IsRUFBZ0RtRSxFQUFBQyxHQUFJQSxFQUFBbzRCLEdBQUF2OEIsSUFBUXc4QixTQUFXc0UsUUFBQTc4QixHQUErQixRQUFwQkMsT0FBQSxJQUFBQSxFQUFBLEtBQUFBLEtBQW9CQyxFQUFBczRCLFNBQUF2NEIsR0FBeUJ5NEIsR0FBQXY0QixFQUFBRCxFQUFBbkUsR0FBVXUrQixHQUFBbjZCLEVBQUFwRSxHQUFRQSxFQUNqYixTQUFBOG5DLEdBQUE3akMsR0FBZSxJQUFBQyxFQUFBRCxFQUFBbTZCLG9CQUFnSCxZQUFwRixJQUFBbDZCLElBQUEsbUJBQUFELEVBQUEwRCxPQUFBWSxFQUFBLE9BQUFBLEVBQUEsTUFBQW5JLE9BQUE0QyxLQUFBaUIsS0FBb0YsUUFBUkEsRUFBQXlnQixHQUFBeGdCLElBQVEsS0FBQUQsRUFBQTJOLFVBQWlDLFNBQUFtMkIsR0FBQTlqQyxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBcUIsSUFBQW1FLEVBQUFELEVBQUE0RixRQUFpQyxPQUFBKzlCLEdBQUE1akMsRUFBQUMsRUFBQW5FLEVBQVZvRSxFQUFBbTZCLEdBQXZCRCxLQUF1Qmw2QixHQUFVbkUsR0FBcUIsU0FBQWdvQyxHQUFBL2pDLEdBQTJCLEtBQVpBLElBQUE2RixTQUFZMGEsTUFBQSxZQUF3QixPQUFBdmdCLEVBQUF1Z0IsTUFBQTdSLEtBQW9CLE9BQWdDLGVBQUExTyxFQUFBdWdCLE1BQUE1UyxXQUNsVixTQUFBcTJCLEdBQUFoa0MsR0FBZSxJQUFBQyxFQUFBRCxFQUFBaWtDLHdCQUFnQyxPQTFGL0MsU0FBQWprQyxHQUFlLHVCQUFBOEosK0JBQUEsU0FBZ0UsSUFBQTdKLEVBQUE2SiwrQkFBcUMsR0FBQTdKLEVBQUFpa0MsYUFBQWprQyxFQUFBa2tDLGNBQUEsU0FBMkMsSUFBSSxJQUFBcm9DLEVBQUFtRSxFQUFBbWtDLE9BQUFwa0MsR0FBa0J1M0IsR0FBQUUsR0FBQSxTQUFBejNCLEdBQWtCLE9BQUFDLEVBQUFva0Msa0JBQUF2b0MsRUFBQWtFLEtBQWtDdzNCLEdBQUFDLEdBQUEsU0FBQXozQixHQUFrQixPQUFBQyxFQUFBcWtDLHFCQUFBeG9DLEVBQUFrRSxLQUFxQyxNQUFBakUsSUFBVSxTQTBGM1B3b0MsQ0FBQWhuQyxLQUFjeUMsR0FBSXdrQyx3QkFBQSxTQUFBeGtDLEdBQTRDLGVBQVJBLEVBQUF5Z0IsR0FBQXpnQixJQUFRLEtBQUFBLEVBQUEyTixXQUFpQ3MyQix3QkFBQSxTQUFBamtDLEdBQXFDLE9BQUFDLElBQUFELEdBQUEsU0FDbkwsSUFBQXlrQyxHQUE0RmxCLEdBQTVGa0IsR0FBNEZmLEdBQTVGZSxHQUE0RixXQUFpTjE4QixJQUFBLElBQUFpNEIsS0FBQW9CLEdBQUFwQixJQUFBLFFBQUFBLEdBQUEsSUFDeEYsU0FBQTBFLEdBQUExa0MsR0FBZWtCLEtBQUF1Z0MsZ0JBQUEzQixLQUEwQjUrQixLQUFBeVEsTUFBQTNSLEVBQWFrQixLQUFBeWpDLFdBQUF6akMsS0FBQTBqQyxNQUFBLEtBQWdDMWpDLEtBQUEyakMsYUFBQTNqQyxLQUFBNGpDLGNBQUEsRUFBdUM1akMsS0FBQTZqQyxVQUFBLEtBQW9CN2pDLEtBQUF3Z0MsUUFBQSxFQUd2TCxTQUFBc0QsS0FBYzlqQyxLQUFBeWpDLFdBQUEsS0FBcUJ6akMsS0FBQStqQyxZQUFBLEVBQW1CL2pDLEtBQUFna0MsVUFBQWhrQyxLQUFBZ2tDLFVBQUFqb0MsS0FBQWlFLE1BQ25DLFNBQUFpa0MsR0FBQW5sQyxFQUFBQyxFQUFBbkUsR0FBbUJvRixLQUFBa2tDLGNBQUExTyxHQUFBMTJCLEVBQUFDLEVBQUFuRSxHQUUwQyxTQUFBdXBDLEdBQUFybEMsR0FBZSxTQUFBQSxHQUFBLElBQUFBLEVBQUErWCxVQUFBLElBQUEvWCxFQUFBK1gsVUFBQSxLQUFBL1gsRUFBQStYLFdBQUEsSUFBQS9YLEVBQUErWCxVQUFBLGlDQUFBL1gsRUFBQXl0QixZQUU5USxTQUFBNlgsR0FBQXRsQyxFQUFBQyxFQUFBbkUsRUFBQUMsRUFBQW1FLEdBQXVCbWxDLEdBQUF2cEMsSUFBQXdJLEVBQUEsT0FBc0IsSUFBQW5FLEVBQUFyRSxFQUFBeXBDLG9CQUE0QixHQUFBcGxDLEVBQUEsQ0FBTSxzQkFBQUQsRUFBQSxDQUEwQixJQUFBa0csRUFBQWxHLEVBQVFBLEVBQUEsV0FBYSxJQUFBRixFQUFBK2pDLEdBQUE1akMsRUFBQWlsQyxlQUEwQmgvQixFQUFBeEssS0FBQW9FLElBQVcsTUFBQUEsRUFBQUcsRUFBQXFsQyxrQ0FBQXhsQyxFQUFBQyxFQUFBQyxHQUFBQyxFQUFBdUQsT0FBQXpELEVBQUFDLE9BQWlFLENBQXFDLEdBQWhDQyxFQUFBckUsRUFBQXlwQyxvQkFEek8sU0FBQXZsQyxFQUFBQyxHQUF3SSxHQUF2SEEsWUFBQUQsRUFBQSxJQUFBQSxFQUFBK1gsU0FBQS9YLEVBQUEwUixnQkFBQTFSLEVBQUF3bkIsV0FBQSxXQUFBdm5CLEVBQUE4WCxXQUFBOVgsRUFBQXdsQyxhQUFBLHFCQUF1SHhsQyxFQUFBLFFBQUFuRSxFQUFnQkEsRUFBQWtFLEVBQUF3dEIsV0FBY3h0QixFQUFBcXRCLFlBQUF2eEIsR0FBa0IsV0FBQXFwQyxHQUFBbmxDLEdBQUEsRUFBQUMsR0FDaUR5bEMsQ0FBQTVwQyxFQUFBQyxHQUFnQyxtQkFBQW1FLEVBQUEsQ0FBMEIsSUFBQW1HLEVBQUFuRyxFQUFRQSxFQUFBLFdBQWEsSUFBQUYsRUFBQStqQyxHQUFBNWpDLEVBQUFpbEMsZUFBMEIvK0IsRUFBQXpLLEtBQUFvRSxJQUFXd2pDLEdBQUEsV0FBYyxNQUFBeGpDLEVBQUFHLEVBQUFxbEMsa0NBQUF4bEMsRUFBQUMsRUFBQUMsR0FBQUMsRUFBQXVELE9BQUF6RCxFQUFBQyxLQUFtRSxPQUFBNmpDLEdBQUE1akMsRUFBQWlsQyxlQUM5YSxTQUFBTyxHQUFBM2xDLEVBQUFDLEdBQWlCLElBQUFuRSxFQUFBLEVBQUE2RCxVQUFBQyxhQUFBLElBQUFELFVBQUEsR0FBQUEsVUFBQSxRQUF3RixPQUF0QjBsQyxHQUFBcGxDLElBQUFxRSxFQUFBLE9BVG5GLFNBQUF0RSxFQUFBQyxFQUFBbkUsR0FBbUIsSUFBQUMsRUFBQSxFQUFBNEQsVUFBQUMsYUFBQSxJQUFBRCxVQUFBLEdBQUFBLFVBQUEsUUFBa0UsT0FBTzhHLFNBQUF3UyxHQUFBamMsSUFBQSxNQUFBakIsRUFBQSxRQUFBQSxFQUFBdUssU0FBQXRHLEVBQUFvbUIsY0FBQW5tQixFQUFBdzJCLGVBQUEzNkIsR0FTYThwQyxDQUFBNWxDLEVBQUFDLEVBQUEsS0FBQW5FLEdBVGtFMFosR0FBQUMsbUNBQUFvZCxJQUMzSzZSLEdBQUFybkMsVUFBQXFHLE9BQUEsU0FBQTFELEdBQWdDa0IsS0FBQXdnQyxRQUFBcDlCLEVBQUEsT0FBNEJwRCxLQUFBMmpDLGNBQUEsRUFBcUIzakMsS0FBQTZqQyxVQUFBL2tDLEVBQWlCLElBQUFDLEVBQUFpQixLQUFBeVEsTUFBQXl6QixjQUFBdHBDLEVBQUFvRixLQUFBdWdDLGdCQUFBMWxDLEVBQUEsSUFBQWlwQyxHQUEwRixPQUEzQnBCLEdBQUE1akMsRUFBQUMsRUFBQSxLQUFBbkUsRUFBQUMsRUFBQW1wQyxXQUEyQm5wQyxHQUFVMm9DLEdBQUFybkMsVUFBQXdvQyxLQUFBLFNBQUE3bEMsR0FBOEIsR0FBQWtCLEtBQUE0akMsYUFBQTlrQyxRQUF5QixDQUFLLElBQUFDLEVBQUFpQixLQUFBeWpDLFdBQXNCLE9BQUExa0MsTUFBQWlCLEtBQUF5akMsZUFBaUMxa0MsRUFBQStDLEtBQUFoRCxLQUN6VDBrQyxHQUFBcm5DLFVBQUF5b0MsT0FBQSxXQUErQixJQUFBOWxDLEVBQUFrQixLQUFBeVEsTUFBQXl6QixjQUFBbmxDLEVBQUFELEVBQUFxM0IsV0FBb0YsR0FBdENuMkIsS0FBQXdnQyxRQUFBLE9BQUF6aEMsR0FBQXFFLEVBQUEsT0FBc0NwRCxLQUFBMmpDLGFBQUEsQ0FBc0IsSUFBQS9vQyxFQUFBb0YsS0FBQXVnQyxnQkFBMkIsR0FBQXhoQyxJQUFBaUIsS0FBQSxDQUFhQSxLQUFBMmpDLGVBQUEvb0MsRUFBQW9GLEtBQUF1Z0MsZ0JBQUF4aEMsRUFBQXdoQyxnQkFBQXZnQyxLQUFBd0MsT0FBQXhDLEtBQUE2akMsWUFBMEYsUUFBQWhwQyxFQUFBLEtBQUFtRSxFQUFBRCxFQUFtQkMsSUFBQWdCLE1BQVNuRixFQUFBbUUsTUFBQTBrQyxNQUFlLE9BQUE3b0MsR0FBQXVJLEVBQUEsT0FBeUJ2SSxFQUFBNm9DLE1BQUExa0MsRUFBQTBrQyxNQUFnQjFqQyxLQUFBMGpDLE1BQUEza0MsRUFBYUQsRUFBQXEzQixXQUFBbjJCLEtBQWtCQSxLQUFBd2dDLFFBQUEsRUFBZUosR0FBQXRoQyxFQUFBbEUsR0FBUW1FLEVBQUFpQixLQUFBMGpDLE1BQWExakMsS0FBQTBqQyxNQUFBLEtBQWlDLFFBQWpCM2tDLEVBQUFELEVBQUFxM0IsV0FBQXAzQixJQUFpQkEsRUFBQTRrQyxjQUFBNWtDLEVBQUF5RCxPQUFBekQsRUFBQThrQyxnQkFBZ0Q3akMsS0FBQTBqQyxNQUNuZixLQUFBMWpDLEtBQUF3Z0MsUUFBQSxHQUFxQmdELEdBQUFybkMsVUFBQWtrQyxZQUFBLFdBQW9DLElBQUFyZ0MsS0FBQTRqQyxhQUFBLENBQXVCNWpDLEtBQUE0akMsY0FBQSxFQUFxQixJQUFBOWtDLEVBQUFrQixLQUFBeWpDLFdBQXNCLFVBQUEza0MsRUFBQSxRQUFBQyxFQUFBLEVBQXdCQSxFQUFBRCxFQUFBSixPQUFXSyxLQUFBLEVBQUFELEVBQUFDLFFBQWdIK2tDLEdBQUEzbkMsVUFBQXdvQyxLQUFBLFNBQUE3bEMsR0FBOEIsR0FBQWtCLEtBQUErakMsV0FBQWpsQyxRQUF1QixDQUFLLElBQUFDLEVBQUFpQixLQUFBeWpDLFdBQXNCLE9BQUExa0MsTUFBQWlCLEtBQUF5akMsZUFBaUMxa0MsRUFBQStDLEtBQUFoRCxLQUMvWGdsQyxHQUFBM25DLFVBQUE2bkMsVUFBQSxXQUFrQyxJQUFBaGtDLEtBQUErakMsV0FBQSxDQUFxQi9qQyxLQUFBK2pDLFlBQUEsRUFBbUIsSUFBQWpsQyxFQUFBa0IsS0FBQXlqQyxXQUFzQixVQUFBM2tDLEVBQUEsUUFBQUMsRUFBQSxFQUF3QkEsRUFBQUQsRUFBQUosT0FBV0ssSUFBQSxDQUFLLElBQUFuRSxFQUFBa0UsRUFBQUMsR0FBVyxtQkFBQW5FLEdBQUF3SSxFQUFBLE1BQUF4SSxHQUF3Q0EsT0FBdURxcEMsR0FBQTluQyxVQUFBcUcsT0FBQSxTQUFBMUQsRUFBQUMsR0FBa0MsSUFBQW5FLEVBQUFvRixLQUFBa2tDLGNBQUFycEMsRUFBQSxJQUFBaXBDLEdBQW1HLE9BQTdDLFFBQXBCL2tDLE9BQUEsSUFBQUEsRUFBQSxLQUFBQSxJQUFvQmxFLEVBQUE4cEMsS0FBQTVsQyxHQUFvQjZqQyxHQUFBOWpDLEVBQUFsRSxFQUFBLEtBQUFDLEVBQUFtcEMsV0FBeUJucEMsR0FDdlhvcEMsR0FBQTluQyxVQUFBMG9DLFFBQUEsU0FBQS9sQyxHQUFpQyxJQUFBQyxFQUFBaUIsS0FBQWtrQyxjQUFBdHBDLEVBQUEsSUFBQWtwQyxHQUFzRyxPQUFoRCxRQUFwQmhsQyxPQUFBLElBQUFBLEVBQUEsS0FBQUEsSUFBb0JsRSxFQUFBK3BDLEtBQUE3bEMsR0FBb0I4akMsR0FBQSxLQUFBN2pDLEVBQUEsS0FBQW5FLEVBQUFvcEMsV0FBNEJwcEMsR0FBVXFwQyxHQUFBOW5DLFVBQUFtb0Msa0NBQUEsU0FBQXhsQyxFQUFBQyxFQUFBbkUsR0FBK0QsSUFBQUMsRUFBQW1GLEtBQUFra0MsY0FBQWxsQyxFQUFBLElBQUE4a0MsR0FBZ0csT0FBMUMsUUFBcEJscEMsT0FBQSxJQUFBQSxFQUFBLEtBQUFBLElBQW9Cb0UsRUFBQTJsQyxLQUFBL3BDLEdBQW9CZ29DLEdBQUE3akMsRUFBQWxFLEVBQUFpRSxFQUFBRSxFQUFBZ2xDLFdBQXNCaGxDLEdBQ2hUaWxDLEdBQUE5bkMsVUFBQTJvQyxZQUFBLFdBQW9DLElBQUFobUMsRUFBQSxJQUFBMGtDLEdBQUF4akMsTUFBQWpCLEVBQUFELEVBQUF5aEMsZ0JBQUEzbEMsRUFBQW9GLEtBQUFra0MsY0FBQXJwQyxFQUFBRCxFQUFBdTdCLFdBQTJFLFVBQUF0N0IsRUFBQUQsRUFBQXU3QixXQUFBcjNCLElBQUE0a0MsTUFBQSxTQUF3QyxDQUFLLElBQUE5b0MsRUFBQSxLQUFXLE9BQUFDLEtBQUEwbEMsaUJBQUF4aEMsR0FBK0JuRSxFQUFBQyxNQUFBNm9DLE1BQWU1a0MsRUFBQTRrQyxNQUFBN29DLEVBQVUsT0FBQUQsTUFBQThvQyxNQUFBNWtDLEdBQXNCLE9BQUFBLEdBQXNKcVcsR0FBQW91QixHQUFxQm51QixHQUFBbXVCLEdBQXlCbHVCLEdBQUFrdUIsR0FJemIsSUFBQXdCLElBQVFDLGFBQUFQLEdBQUFRLFlBQUEsU0FBQW5tQyxHQUF3QyxhQUFBQSxFQUFBLFNBQUFBLEVBQUErWCxTQUFBL1gsRUFBQTZqQyxHQUFBN2pDLElBQTJDbTNCLFFBQUEsU0FBQW4zQixFQUFBQyxFQUFBbkUsR0FBeUIsT0FBQXdwQyxHQUFBLEtBQUF0bEMsRUFBQUMsR0FBQSxFQUFBbkUsSUFBeUI0SCxPQUFBLFNBQUExRCxFQUFBQyxFQUFBbkUsR0FBd0IsT0FBQXdwQyxHQUFBLEtBQUF0bEMsRUFBQUMsR0FBQSxFQUFBbkUsSUFBeUJzcUMsb0NBQUEsU0FBQXBtQyxFQUFBQyxFQUFBbkUsRUFBQUMsR0FBOEcsT0FBdkQsTUFBQWlFLFFBQUEsSUFBQUEsRUFBQW02QixzQkFBQTcxQixFQUFBLE1BQXVEZ2hDLEdBQUF0bEMsRUFBQUMsRUFBQW5FLEdBQUEsRUFBQUMsSUFBc0JzcUMsdUJBQUEsU0FBQXJtQyxHQUF5RCxPQUFyQnFsQyxHQUFBcmxDLElBQUFzRSxFQUFBLFFBQXFCdEUsRUFBQXVsQyxzQkFBQS9CLEdBQUEsV0FBNEM4QixHQUFBLFVBQUF0bEMsR0FBQSxhQUE2QkEsRUFBQXVsQyxvQkFBQSxVQUE2QixJQUFTZSxzQkFBQSxXQUFrQyxPQUFBWCxHQUFBaDdCLFdBQUEsRUFDNWdCaEwsWUFBVzRtQyx3QkFBQWhELEdBQUFpRCx5QkFBQXJHLEdBQUFzRyw0QkFBQS9DLEdBQUFnRCxVQUFBakQsR0FBQWtELHlCQUFBaEQsR0FBQWw2QixvREFBb0xtOUIsZUFBQTc0QixFQUFBODRCLG9CQUFBNzZCLEVBQUE4NkIsaUJBQUE5MkIsR0FBQSsyQix5QkFBQTl3QixHQUFBK3dCLHNCQUFBbjRCLEVBQUFvNEIsc0JBQUFyZ0IsSUFBMklzZ0Isb0JBQUEsU0FBQWxuQyxFQUFBQyxHQUFtQyxXQUFBa2xDLEdBQUFubEMsR0FBQSxRQUFBQyxJQUFBLElBQUFBLEVBQUFrM0IsV0FBOEM2TSxJQUFJQyx3QkFBQXoxQixFQUFBMjRCLFdBQUEsRUFBQTM5QixRQUFBLFNBQUE0OUIsb0JBQUEsY0FDL1osSUFBQUMsSUFBUWprQyxRQUFBNmlDLElBQVdxQixHQUFBRCxJQUFBcEIsSUFBQW9CLEdBQWU3ckMsRUFBQUQsUUFBQStyQyxHQUFBbGtDLFFBQUFra0MsR0FBQWxrQyxRQUFBa2tDLGlDQ3JPbEMsSUFBQXYyQixJQUFBLG9CQUFBblQsZ0JBQUErRixXQUFBL0YsT0FBQStGLFNBQUFOLGVBUUFra0MsR0FFQXgyQixZQUVBeTJCLGNBQUEsb0JBQUFDLE9BRUFDLHFCQUFBMzJCLE1BQUFuVCxPQUFBOG9CLG1CQUFBOW9CLE9BQUEwZixhQUVBcXFCLGVBQUE1MkIsS0FBQW5ULE9BQUFncUMsT0FFQUMsWUFBQTkyQixHQUlBdlYsRUFBQUQsUUFBQWdzQyxnQ0NHQS9yQyxFQUFBRCxRQVpBLFNBQUF1c0MsR0FFQSxhQURBQSxNQUFBLG9CQUFBbmtDLHVCQUFBbkUsSUFFQSxZQUVBLElBQ0EsT0FBQXNvQyxFQUFBdnJCLGVBQUF1ckIsRUFBQUMsS0FDRyxNQUFBN25DLEdBQ0gsT0FBQTRuQyxFQUFBQyxxQ0NqQkEsSUFBQXpxQyxFQUFBbkIsT0FBQWtCLFVBQUFDLGVBTUEsU0FBQXMwQixFQUFBenRCLEVBQUFDLEdBRUEsT0FBQUQsSUFBQUMsRUFJQSxJQUFBRCxHQUFBLElBQUFDLEdBQUEsRUFBQUQsR0FBQSxFQUFBQyxFQUdBRCxNQUFBQyxLQW1DQTVJLEVBQUFELFFBMUJBLFNBQUF5c0MsRUFBQUMsR0FDQSxHQUFBclcsRUFBQW9XLEVBQUFDLEdBQ0EsU0FHQSxvQkFBQUQsR0FBQSxPQUFBQSxHQUFBLGlCQUFBQyxHQUFBLE9BQUFBLEVBQ0EsU0FHQSxJQUFBQyxFQUFBL3JDLE9BQUE0QyxLQUFBaXBDLEdBQ0FHLEVBQUFoc0MsT0FBQTRDLEtBQUFrcEMsR0FFQSxHQUFBQyxFQUFBdG9DLFNBQUF1b0MsRUFBQXZvQyxPQUNBLFNBSUEsUUFBQW5FLEVBQUEsRUFBaUJBLEVBQUF5c0MsRUFBQXRvQyxPQUFrQm5FLElBQ25DLElBQUE2QixFQUFBMUIsS0FBQXFzQyxFQUFBQyxFQUFBenNDLE1BQUFtMkIsRUFBQW9XLEVBQUFFLEVBQUF6c0MsSUFBQXdzQyxFQUFBQyxFQUFBenNDLEtBQ0EsU0FJQSx3Q0NsREEsSUFBQTJzQyxFQUFBL3NDLEVBQUEsSUF5QkFHLEVBQUFELFFBbEJBLFNBQUE4c0MsRUFBQUMsRUFBQUMsR0FDQSxTQUFBRCxJQUFBQyxLQUVHRCxJQUFBQyxJQUVBSCxFQUFBRSxLQUVBRixFQUFBRyxHQUNIRixFQUFBQyxFQUFBQyxFQUFBOTVCLFlBQ0csYUFBQTY1QixFQUNIQSxFQUFBRSxTQUFBRCxLQUNHRCxFQUFBRyw0QkFDSCxHQUFBSCxFQUFBRyx3QkFBQUYscUNDbkJBLElBQUFHLEVBQUFydEMsRUFBQSxJQVVBRyxFQUFBRCxRQUpBLFNBQUE0QixHQUNBLE9BQUF1ckMsRUFBQXZyQyxJQUFBLEdBQUFBLEVBQUE0YSx3Q0NHQXZjLEVBQUFELFFBTkEsU0FBQTRCLEdBQ0EsSUFDQThpQixHQURBOWlCLElBQUFtZixlQUFBbmYsRUFBQXdHLFVBQ0FzYyxhQUFBcmlCLE9BQ0EsU0FBQVQsS0FBQSxtQkFBQThpQixFQUFBMG9CLEtBQUF4ckMsYUFBQThpQixFQUFBMG9CLEtBQUEsaUJBQUF4ckMsR0FBQSxpQkFBQUEsRUFBQTRhLFVBQUEsaUJBQUE1YSxFQUFBd2EsaVZDVkFpeEIsR0FDQUMsS0FBQSxlQUFBeDZCLEtBQUFDLFNBQUExRyxTQUFBLElBQUE2b0IsVUFBQSxHQUFBN3hCLE1BQUEsSUFBQUYsS0FBQSxLQUNBb3FDLFFBQUEsa0JBQUF6NkIsS0FBQUMsU0FBQTFHLFNBQUEsSUFBQTZvQixVQUFBLEdBQUE3eEIsTUFBQSxJQUFBRixLQUFBLE1BR0FxcUMsRUFBQSxtQkFBQXZzQyxRQUFBLGlCQUFBQSxPQUFBaUksU0FBQSxTQUFBdWtDLEdBQ0EsY0FBQUEsR0FDQyxTQUFBQSxHQUNELE9BQUFBLEdBQUEsbUJBQUF4c0MsUUFBQXdzQyxFQUFBdGpDLGNBQUFsSixRQUFBd3NDLElBQUF4c0MsT0FBQWEsVUFBQSxnQkFBQTJyQyxHQUdBQyxFQUFBOXNDLE9BQUFnQyxRQUFBLFNBQUFlLEdBQ0EsUUFBQXpELEVBQUEsRUFBaUJBLEVBQUFrRSxVQUFBQyxPQUFzQm5FLElBQUEsQ0FDdkMsSUFBQTBELEVBQUFRLFVBQUFsRSxHQUVBLFFBQUF1QixLQUFBbUMsRUFDQWhELE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQXVELEVBQUFuQyxLQUNBa0MsRUFBQWxDLEdBQUFtQyxFQUFBbkMsSUFLQSxPQUFBa0MsR0FPQSxTQUFBZ3FDLEVBQUFGLEdBQ0Esd0JBQUFBLEVBQUEsWUFBQUQsRUFBQUMsS0FBQSxPQUFBQSxFQUFBLFNBR0EsSUFEQSxJQUFBRyxFQUFBSCxFQUNBLE9BQUE3c0MsT0FBQThGLGVBQUFrbkMsSUFDQUEsRUFBQWh0QyxPQUFBOEYsZUFBQWtuQyxHQUdBLE9BQUFodEMsT0FBQThGLGVBQUErbUMsS0FBQUcsRUE0QkEsU0FBQXpuQyxFQUFBMG5DLEVBQUFDLEVBQUFDLEdBQ0EsSUFBQUMsRUFPQSxHQUxBLG1CQUFBRixRQUFBLElBQUFDLElBQ0FBLEVBQUFELEVBQ0FBLE9BQUE3cEMsUUFHQSxJQUFBOHBDLEVBQUEsQ0FDQSxzQkFBQUEsRUFDQSxVQUFBanBDLE1BQUEsMkNBR0EsT0FBQWlwQyxFQUFBNW5DLEVBQUE0bkMsQ0FBQUYsRUFBQUMsR0FHQSxzQkFBQUQsRUFDQSxVQUFBL29DLE1BQUEsMENBR0EsSUFBQW1wQyxFQUFBSixFQUNBSyxFQUFBSixFQUNBSyxLQUNBQyxFQUFBRCxFQUNBRSxHQUFBLEVBRUEsU0FBQUMsSUFDQUYsSUFBQUQsSUFDQUMsRUFBQUQsRUFBQWgvQixTQVNBLFNBQUFvL0IsSUFDQSxHQUFBRixFQUNBLFVBQUF2cEMsTUFBQSx3TUFHQSxPQUFBb3BDLEVBMEJBLFNBQUFNLEVBQUFDLEdBQ0Esc0JBQUFBLEVBQ0EsVUFBQTNwQyxNQUFBLDJDQUdBLEdBQUF1cEMsRUFDQSxVQUFBdnBDLE1BQUEsK1RBR0EsSUFBQTRwQyxHQUFBLEVBS0EsT0FIQUosSUFDQUYsRUFBQTNtQyxLQUFBZ25DLEdBRUEsV0FDQSxHQUFBQyxFQUFBLENBSUEsR0FBQUwsRUFDQSxVQUFBdnBDLE1BQUEsb0tBR0E0cEMsR0FBQSxFQUVBSixJQUNBLElBQUE1bUMsRUFBQTBtQyxFQUFBeCtCLFFBQUE2K0IsR0FDQUwsRUFBQXptQyxPQUFBRCxFQUFBLEtBNkJBLFNBQUFpbkMsRUFBQUMsR0FDQSxJQUFBakIsRUFBQWlCLEdBQ0EsVUFBQTlwQyxNQUFBLDJFQUdBLFlBQUE4cEMsRUFBQXpqQyxLQUNBLFVBQUFyRyxNQUFBLHNGQUdBLEdBQUF1cEMsRUFDQSxVQUFBdnBDLE1BQUEsc0NBR0EsSUFDQXVwQyxHQUFBLEVBQ0FILEVBQUFELEVBQUFDLEVBQUFVLEdBQ0ssUUFDTFAsR0FBQSxFQUlBLElBREEsSUFBQVEsRUFBQVYsRUFBQUMsRUFDQWx1QyxFQUFBLEVBQW1CQSxFQUFBMnVDLEVBQUF4cUMsT0FBc0JuRSxJQUFBLEVBRXpDdXVDLEVBREFJLEVBQUEzdUMsTUFJQSxPQUFBMHVDLEVBa0VBLE9BRkFELEdBQVl4akMsS0FBQWtpQyxFQUFBQyxRQUVaVSxHQUNBVyxXQUNBSCxZQUNBRCxXQUNBTyxlQXpEQSxTQUFBQyxHQUNBLHNCQUFBQSxFQUNBLFVBQUFqcUMsTUFBQSw4Q0FHQW1wQyxFQUFBYyxFQUNBSixHQUFjeGpDLEtBQUFraUMsRUFBQUUsYUFvRFh5QixFQUFBLEdBM0NILFdBQ0EsSUFBQUMsRUFFQUMsRUFBQVYsRUFDQSxPQUFBUyxHQVNBVCxVQUFBLFNBQUFXLEdBQ0Esd0JBQUFBLEVBQUEsWUFBQTNCLEVBQUEyQixLQUFBLE9BQUFBLEVBQ0EsVUFBQWpyQyxVQUFBLDBDQUdBLFNBQUFrckMsSUFDQUQsRUFBQWxqQyxNQUNBa2pDLEVBQUFsakMsS0FBQXNpQyxLQU1BLE9BRkFhLEtBRWdCQyxZQURoQkgsRUFBQUUsT0FHS0osRUFBQSxjQUNMLE9BQUFycEMsTUFDS3NwQyxHQWFGakIsRUF1QkgsU0FBQXNCLEVBQUE3dEMsRUFBQW10QyxHQUNBLElBQUFXLEVBQUFYLEtBQUF6akMsS0FHQSxnQkFGQW9rQyxHQUFBLFdBQUF6c0MsT0FBQXlzQyxHQUFBLGtCQUVBLGNBQUE5dEMsRUFBQSxpTEE4REEsU0FBQSt0QyxFQUFBQyxHQUdBLElBRkEsSUFBQUMsRUFBQTl1QyxPQUFBNEMsS0FBQWlzQyxHQUNBRSxLQUNBenZDLEVBQUEsRUFBaUJBLEVBQUF3dkMsRUFBQXJyQyxPQUF3Qm5FLElBQUEsQ0FDekMsSUFBQXVCLEVBQUFpdUMsRUFBQXh2QyxHQUVBLEVBTUEsbUJBQUF1dkMsRUFBQWh1QyxLQUNBa3VDLEVBQUFsdUMsR0FBQWd1QyxFQUFBaHVDLElBR0EsSUFBQW11QyxFQUFBaHZDLE9BQUE0QyxLQUFBbXNDLEdBT0EsSUFBQUUsT0FBQSxFQUNBLEtBeERBLFNBQUFKLEdBQ0E3dUMsT0FBQTRDLEtBQUFpc0MsR0FBQW5zQyxRQUFBLFNBQUE3QixHQUNBLElBQUFvc0MsRUFBQTRCLEVBQUFodUMsR0FHQSxZQUZBb3NDLE9BQUE1cEMsR0FBMkNrSCxLQUFBa2lDLEVBQUFDLE9BRzNDLFVBQUF4b0MsTUFBQSxZQUFBckQsRUFBQSxpUkFJQSxRQUFnRCxJQUFoRG9zQyxPQUFBNXBDLEdBQW1Da0gsS0FEbkMsZ0NBQUEySCxLQUFBQyxTQUFBMUcsU0FBQSxJQUFBNm9CLFVBQUEsR0FBQTd4QixNQUFBLElBQUFGLEtBQUEsT0FFQSxVQUFBMkIsTUFBQSxZQUFBckQsRUFBQSw2RUFBQTRyQyxFQUFBQyxLQUFBLGlUQThDQXdDLENBQUFILEdBQ0csTUFBQWhyQyxHQUNIa3JDLEVBQUFsckMsRUFHQSxrQkFDQSxJQUFBZ0MsRUFBQXZDLFVBQUFDLE9BQUEsUUFBQUosSUFBQUcsVUFBQSxHQUFBQSxVQUFBLE1BQ0F3cUMsRUFBQXhxQyxVQUFBLEdBRUEsR0FBQXlyQyxFQUNBLE1BQUFBLEVBWUEsSUFGQSxJQUFBRSxHQUFBLEVBQ0FDLEtBQ0FDLEVBQUEsRUFBb0JBLEVBQUFMLEVBQUF2ckMsT0FBOEI0ckMsSUFBQSxDQUNsRCxJQUFBQyxFQUFBTixFQUFBSyxHQUNBcEMsRUFBQThCLEVBQUFPLEdBQ0FDLEVBQUF4cEMsRUFBQXVwQyxHQUNBRSxFQUFBdkMsRUFBQXNDLEVBQUF2QixHQUNBLFlBQUF3QixFQUFBLENBQ0EsSUFBQUMsRUFBQWYsRUFBQVksRUFBQXRCLEdBQ0EsVUFBQTlwQyxNQUFBdXJDLEdBRUFMLEVBQUFFLEdBQUFFLEVBQ0FMLEtBQUFLLElBQUFELEVBRUEsT0FBQUosRUFBQUMsRUFBQXJwQyxHQUlBLFNBQUEycEMsRUFBQUMsRUFBQTVCLEdBQ0Esa0JBQ0EsT0FBQUEsRUFBQTRCLEVBQUFuaEMsTUFBQXpKLEtBQUF2QixhQXlCQSxTQUFBb3NDLEVBQUFDLEVBQUE5QixHQUNBLHNCQUFBOEIsRUFDQSxPQUFBSCxFQUFBRyxFQUFBOUIsR0FHQSx3QkFBQThCLEVBQUEsWUFBQWpELEVBQUFpRCxLQUFBLE9BQUFBLEVBQ0EsVUFBQTNyQyxNQUFBLGlGQUFBMnJDLEVBQUEsZ0JBQUFBLEVBQUEsWUFBQWpELEVBQUFpRCxJQUFBLDhGQUtBLElBRkEsSUFBQWp0QyxFQUFBNUMsT0FBQTRDLEtBQUFpdEMsR0FDQUMsS0FDQXh3QyxFQUFBLEVBQWlCQSxFQUFBc0QsRUFBQWEsT0FBaUJuRSxJQUFBLENBQ2xDLElBQUF1QixFQUFBK0IsRUFBQXRELEdBQ0Fxd0MsRUFBQUUsRUFBQWh2QyxHQUNBLG1CQUFBOHVDLElBQ0FHLEVBQUFqdkMsR0FBQTZ1QyxFQUFBQyxFQUFBNUIsSUFHQSxPQUFBK0IsRUFjQSxTQUFBQyxJQUNBLFFBQUFDLEVBQUF4c0MsVUFBQUMsT0FBQXdzQyxFQUFBN2xDLE1BQUE0bEMsR0FBQVYsRUFBQSxFQUFrRUEsRUFBQVUsRUFBYVYsSUFDL0VXLEVBQUFYLEdBQUE5ckMsVUFBQThyQyxHQUdBLFdBQUFXLEVBQUF4c0MsT0FDQSxTQUFBZSxHQUNBLE9BQUFBLEdBSUEsSUFBQXlyQyxFQUFBeHNDLE9BQ0F3c0MsRUFBQSxHQUdBQSxFQUFBQyxPQUFBLFNBQUFyc0MsRUFBQUMsR0FDQSxrQkFDQSxPQUFBRCxFQUFBQyxFQUFBMEssV0FBQW5MLEVBQUFHLGVBcUJBLFNBQUEyc0MsSUFDQSxRQUFBSCxFQUFBeHNDLFVBQUFDLE9BQUEyc0MsRUFBQWhtQyxNQUFBNGxDLEdBQUFWLEVBQUEsRUFBd0VBLEVBQUFVLEVBQWFWLElBQ3JGYyxFQUFBZCxHQUFBOXJDLFVBQUE4ckMsR0FHQSxnQkFBQS9wQyxHQUNBLGtCQUNBLFFBQUE4cUMsRUFBQTdzQyxVQUFBQyxPQUFBVSxFQUFBaUcsTUFBQWltQyxHQUFBQyxFQUFBLEVBQXdFQSxFQUFBRCxFQUFlQyxJQUN2Rm5zQyxFQUFBbXNDLEdBQUE5c0MsVUFBQThzQyxHQUdBLElBQUFDLEVBQUFockMsRUFBQWlKLFdBQUFuTCxFQUFBYyxHQUNBcXNDLEVBQUEsV0FDQSxVQUFBdHNDLE1BQUEsMkhBR0F1c0MsR0FDQTlDLFNBQUE0QyxFQUFBNUMsU0FDQUksU0FBQSxXQUNBLE9BQUF5QyxFQUFBaGlDLFdBQUFuTCxFQUFBRyxhQUdBa3RDLEVBQUFOLEVBQUE5dEMsSUFBQSxTQUFBcXVDLEdBQ0EsT0FBQUEsRUFBQUYsS0FJQSxPQUZBRCxFQUFBVCxFQUFBdmhDLFdBQUFuTCxFQUFBcXRDLEVBQUFYLENBQUFRLEVBQUF4QyxVQUVBakIsS0FBd0J5RCxHQUN4QnhDLFNBQUF5QyxzQkMzakJBLElBQUF2bUMsRUFHQUEsRUFBQSxXQUNBLE9BQUFsRixLQURBLEdBSUEsSUFFQWtGLEtBQUEybUMsU0FBQSxjQUFBQSxLQUFBLEVBQUFDLE1BQUEsUUFDQyxNQUFBOXNDLEdBRUQsaUJBQUF0QyxTQUFBd0ksRUFBQXhJLFFBT0FwQyxFQUFBRCxRQUFBNkssaUJDbkJBNUssRUFBQUQsUUFBQSxTQUFBMHhDLEdBQ0EsSUFBQUEsRUFBQUMsZ0JBQUEsQ0FDQSxJQUFBMXhDLEVBQUFXLE9BQUFZLE9BQUFrd0MsR0FFQXp4QyxFQUFBOEssV0FBQTlLLEVBQUE4SyxhQUNBbkssT0FBQUMsZUFBQVosRUFBQSxVQUNBYSxZQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBZCxFQUFBRSxLQUdBUyxPQUFBQyxlQUFBWixFQUFBLE1BQ0FhLFlBQUEsRUFDQUMsSUFBQSxXQUNBLE9BQUFkLEVBQUFDLEtBR0FVLE9BQUFDLGVBQUFaLEVBQUEsV0FDQWEsWUFBQSxJQUVBYixFQUFBMHhDLGdCQUFBLEVBRUEsT0FBQTF4QywyVUN0QkE4RixFQUFBakcsRUFBQSxjQUNBQSxFQUFBLDJEQUVNOHhDLGdyQkFBYXhxQyxpREFDVCxJQUFBeXFDLEVBQUFsc0MsS0FDTixPQUNFaUMsRUFBQUMsUUFBQUMsY0FBQSxPQUFLZ3FDLFVBQVUsaUJBQ2JscUMsRUFBQUMsUUFBQUMsY0FBQSxRQUFNaXFDLFNBQVUsU0FBQ3B0QyxHQUFELE9BQU9rdEMsRUFBS3hyQyxNQUFNVyxhQUFhckMsS0FDN0NpRCxFQUFBQyxRQUFBQyxjQUFBLFNBQ0VxRCxLQUFLLE9BQ0w2bUMsU0FBVSxTQUFDcnRDLEdBQUQsT0FBT2t0QyxFQUFLeHJDLE1BQU1VLGFBQWFwQyxJQUN6Q3hELE1BQU93RSxLQUFLVSxNQUFNTyxXQUNsQnFyQyxZQUFZLGdDQUVkcnFDLEVBQUFDLFFBQUFDLGNBQUEsU0FBT3FELEtBQUssU0FBU2hLLE1BQU0saUJBT3JDeXdDLEVBQUtNLFdBQ0h0ckMsV0FBWXVyQyxVQUFVQyxPQUFPQyxXQUM3QnRyQyxhQUFjb3JDLFVBQVV4bUMsS0FBSzBtQyxXQUM3QnJyQyxhQUFjbXJDLFVBQVV4bUMsS0FBSzBtQyxzQkFHaEJULGdDQ2xCZixJQUFBVSxFQUFBeHlDLEVBQUEsSUFFQSxTQUFBdUYsS0FFQXBGLEVBQUFELFFBQUEsV0FDQSxTQUFBdXlDLEVBQUFsc0MsRUFBQW1zQyxFQUFBQyxFQUFBMXBCLEVBQUEycEIsRUFBQUMsR0FDQSxHQUFBQSxJQUFBTCxFQUFBLENBSUEsSUFBQTd1QyxFQUFBLElBQUFxQixNQUNBLG1MQUtBLE1BREFyQixFQUFBaEQsS0FBQSxzQkFDQWdELEdBR0EsU0FBQW12QyxJQUNBLE9BQUFMLEVBRkFBLEVBQUFGLFdBQUFFLEVBTUEsSUFBQU0sR0FDQUMsTUFBQVAsRUFDQVEsS0FBQVIsRUFDQTVtQyxLQUFBNG1DLEVBQ0E3MkIsT0FBQTYyQixFQUNBM3dDLE9BQUEyd0MsRUFDQUgsT0FBQUcsRUFDQVMsT0FBQVQsRUFFQVUsSUFBQVYsRUFDQVcsUUFBQU4sRUFDQXRSLFFBQUFpUixFQUNBWSxXQUFBUCxFQUNBeG1CLEtBQUFtbUIsRUFDQWEsU0FBQVIsRUFDQVMsTUFBQVQsRUFDQVUsVUFBQVYsRUFDQVcsTUFBQVgsRUFDQVksTUFBQVosR0FNQSxPQUhBQyxFQUFBWSxlQUFBcHVDLEVBQ0F3dEMsRUFBQVYsVUFBQVUsRUFFQUEsaUNDOUNBNXlDLEVBQUFELFFBRkEsdVhDVEErRixFQUFBakcsRUFBQSxjQUNBQSxFQUFBLFFBRUFBLEVBQUEsNERBRU00ekMsZ3JCQUFhdHNDLGlEQUNULElBQUF5cUMsRUFBQWxzQyxLQUNOLFNBQVNndUMsRUFBV2pzQyxFQUFPVCxFQUFjMnNDLEVBQU0xc0MsR0FDN0MsT0FDRVUsRUFBQUMsUUFBQUMsY0FBQytyQyxFQUFBaHNDLFNBQ0NwRyxJQUFLaUcsRUFDTEEsTUFBT0EsRUFDUFQsYUFBY0EsRUFDZDJzQyxLQUFNQSxFQUNOMXNDLGFBQWNBLElBSXBCLE9BQ0VVLEVBQUFDLFFBQUFDLGNBQUEsT0FBS2dxQyxVQUFVLGlCQUNabnNDLEtBQUtVLE1BQU1RLE1BQU0zRCxJQUFJLFNBQUMwd0MsRUFBS2xzQyxHQUMxQixNQUF1QixRQUFwQm1xQyxFQUFLeHJDLE1BQU1TLEtBQ0w2c0MsRUFBV2pzQyxFQUFPbXFDLEVBQUt4ckMsTUFBTVksYUFBYzJzQyxFQUFNL0IsRUFBS3hyQyxNQUFNYSxjQUU3RDBzQyxFQUFLcHNDLFFBQThCLFNBQXBCcXFDLEVBQUt4ckMsTUFBTVMsTUFDekI2c0MsRUFBV2pzQyxFQUFPbXFDLEVBQUt4ckMsTUFBTVksYUFBYzJzQyxFQUFNL0IsRUFBS3hyQyxNQUFNYSxtQkFEaEUsY0FTZndzQyxFQUFLeEIsV0FDSHJyQyxNQUFPc3JDLFVBQVVXLE1BQU1ULFdBQ3ZCcHJDLGFBQWNrckMsVUFBVXhtQyxLQUFLMG1DLFdBQzdCbnJDLGFBQWNpckMsVUFBVXhtQyxLQUFLMG1DLFdBQzdCdnJDLEtBQU1xckMsVUFBVUMsT0FBT0Msc0JBR1ZxQiwwVUN4Q2YzdEMsRUFBQWpHLEVBQUEsY0FDQUEsRUFBQSwyREFFTWcwQyxnckJBQWExc0MsaURBQ1QsSUFBQXlxQyxFQUFBbHNDLEtBQ04sT0FDRWlDLEVBQUFDLFFBQUFDLGNBQUEsT0FBS2dxQyxVQUFVLGlCQUNibHFDLEVBQUFDLFFBQUFDLGNBQUEsU0FDRXFELEtBQUssV0FDTG1TLFFBQVMzWCxLQUFLVSxNQUFNdXRDLEtBQUtwc0MsS0FDekJ3cUMsU0FBVSxrQkFBTUgsRUFBS3hyQyxNQUFNWSxhQUFhNHFDLEVBQUt4ckMsTUFBTXFCLFVBRXJERSxFQUFBQyxRQUFBQyxjQUFBLFFBQU0yTixPQUFRcytCLGVBQWdCcHVDLEtBQUtVLE1BQU11dEMsS0FBS3BzQyxLQUFPLGVBQWlCLFNBQ25FN0IsS0FBS1UsTUFBTXV0QyxLQUFLenlDLE9BRW5CeUcsRUFBQUMsUUFBQUMsY0FBQSxVQUFRa3ZCLFFBQVMsU0FBQ3J5QixHQUFELE9BQU9rdEMsRUFBS3hyQyxNQUFNYSxhQUFhdkMsRUFBR2t0QyxFQUFLeHJDLE1BQU1xQixTQUE5RCxvQkFNUm9zQyxFQUFLNUIsV0FDSDBCLEtBQU16QixVQUFVdndDLE9BQU95d0MsV0FDdkJwckMsYUFBY2tyQyxVQUFVeG1DLEtBQUswbUMsV0FDN0IzcUMsTUFBT3lxQyxVQUFVejJCLE9BQU8yMkIsV0FDeEJuckMsYUFBY2lyQyxVQUFVeG1DLEtBQUswbUMsc0JBR2hCeUIsMFVDNUJmL3RDLEVBQUFqRyxFQUFBLGNBQ0FBLEVBQUEsMkRBRU1rMEMsZ3JCQUFZNXNDLGlEQUNSLElBQUF5cUMsRUFBQWxzQyxLQUNOLE9BQ0VpQyxFQUFBQyxRQUFBQyxjQUFBLFdBQ0VGLEVBQUFDLFFBQUFDLGNBQUEsU0FBT3FELEtBQUssU0FBUzZyQixRQUFTLFNBQUNyeUIsR0FBRCxPQUFPa3RDLEVBQUt4ckMsTUFBTWMsV0FBV3hDLElBQUl4RCxNQUFNLFFBQ3JFeUcsRUFBQUMsUUFBQUMsY0FBQSxTQUFPcUQsS0FBSyxTQUFTNnJCLFFBQVMsU0FBQ3J5QixHQUFELE9BQU9rdEMsRUFBS3hyQyxNQUFNYyxXQUFXeEMsSUFBSXhELE1BQU0sV0FDckV5RyxFQUFBQyxRQUFBQyxjQUFBLFNBQU9xRCxLQUFLLFNBQVM2ckIsUUFBUyxTQUFDcnlCLEdBQUQsT0FBT2t0QyxFQUFLeHJDLE1BQU1jLFdBQVd4QyxJQUFJeEQsTUFBTSxtQkFNN0U2eUMsRUFBSTlCLFdBQ0ZwckMsS0FBTXFyQyxVQUFVQyxPQUFPQyxXQUN2QmxyQyxXQUFZZ3JDLFVBQVV4bUMsS0FBSzBtQyxzQkFHZDJCLG1CQ25CZixJQUFBQyxFQUFBbjBDLEVBQUEsSUFFQSxpQkFBQW0wQyxRQUFBaDBDLEVBQUFDLEVBQUErekMsRUFBQSxNQU9BLElBQUExakIsR0FBZTJqQixLQUFBLEVBRWZDLGVBUEFBLEVBUUFDLGdCQUFBbndDLEdBRUFuRSxFQUFBLEdBQUFBLENBQUFtMEMsRUFBQTFqQixHQUVBMGpCLEVBQUFJLFNBQUFwMEMsRUFBQUQsUUFBQWkwQyxFQUFBSSx5QkNqQkEsSUFBQWpvQyxFQUFBdE0sRUFBQSxLQUNBRyxFQUFBRCxRQUFBRixFQUFBLEdBQUFBLEVBQUEsSUFLQTJILE1BQUF4SCxFQUFBQyxFQUFBLGs3Q0FBaTdDa00sRUFBQXRNLEVBQUEsb1BBQWlULG9CQ05sdURHLEVBQUFELFFBQUEsU0FBQWljLEdBQ0EsdUJBQUFBLEVBQ0FBLEdBR0EsZUFBQTZELEtBQUE3RCxLQUNBQSxJQUFBOU0sTUFBQSxPQUlBLGNBQUEyUSxLQUFBN0QsR0FDQSxJQUFBQSxFQUFBaFgsUUFBQSxZQUFBQSxRQUFBLGlCQUdBZ1gsbUJDVEFoYyxFQUFBRCxRQUFBLFNBQUFzMEMsR0FDQSxJQUFBQyxLQXdDQSxPQXJDQUEsRUFBQWxvQyxTQUFBLFdBQ0EsT0FBQTFHLEtBQUF6QyxJQUFBLFNBQUFzeEMsR0FDQSxJQUFBUCxFQXNDQSxTQUFBTyxFQUFBRixHQUNBLElBQUFMLEVBQUFPLEVBQUEsT0FDQUMsRUFBQUQsRUFBQSxHQUNBLElBQUFDLEVBQ0EsT0FBQVIsRUFHQSxHQUFBSyxHQUFBLG1CQUFBSSxLQUFBLENBQ0EsSUFBQUMsRUFZQSxTQUFBQyxHQUtBLHlFQUhBRixLQUFBRyxTQUFBenJDLG1CQUFBOHVCLEtBQUFDLFVBQUF5YyxNQUdBLE1BakJBRSxDQUFBTCxHQUNBTSxFQUFBTixFQUFBTyxRQUFBOXhDLElBQUEsU0FBQVUsR0FDQSx1QkFBQTZ3QyxFQUFBUSxXQUFBcnhDLEVBQUEsUUFHQSxPQUFBcXdDLEdBQUExaUMsT0FBQXdqQyxHQUFBeGpDLFFBQUFvakMsSUFBQXh4QyxLQUFBLE1BR0EsT0FBQTh3QyxHQUFBOXdDLEtBQUEsTUF0REEreEMsQ0FBQVYsRUFBQUYsR0FDQSxPQUFBRSxFQUFBLEdBQ0EsVUFBQUEsRUFBQSxPQUFtQ1AsRUFBQSxJQUVuQ0EsSUFFRzl3QyxLQUFBLEtBSUhveEMsRUFBQXIwQyxFQUFBLFNBQUFFLEVBQUErMEMsR0FDQSxpQkFBQS8wQyxJQUNBQSxJQUFBLEtBQUFBLEVBQUEsTUFFQSxJQURBLElBQUFnMUMsS0FDQWwxQyxFQUFBLEVBQWdCQSxFQUFBeUYsS0FBQXRCLE9BQWlCbkUsSUFBQSxDQUNqQyxJQUFBc2UsRUFBQTdZLEtBQUF6RixHQUFBLEdBQ0EsaUJBQUFzZSxJQUNBNDJCLEVBQUE1MkIsSUFBQSxHQUVBLElBQUF0ZSxFQUFBLEVBQVlBLEVBQUFFLEVBQUFpRSxPQUFvQm5FLElBQUEsQ0FDaEMsSUFBQXMwQyxFQUFBcDBDLEVBQUFGLEdBS0EsaUJBQUFzMEMsRUFBQSxJQUFBWSxFQUFBWixFQUFBLE1BQ0FXLElBQUFYLEVBQUEsR0FDQUEsRUFBQSxHQUFBVyxFQUNLQSxJQUNMWCxFQUFBLE9BQUFBLEVBQUEsYUFBQVcsRUFBQSxLQUVBWixFQUFBOXNDLEtBQUErc0MsTUFJQUQsb0JDekNBLElBQUFjLEtBV0FDLEVBVEEsU0FBQUMsR0FDQSxJQUFBQyxFQUVBLGtCQUVBLFlBREEsSUFBQUEsTUFBQUQsRUFBQW5tQyxNQUFBekosS0FBQXZCLFlBQ0FveEMsR0FJQUMsQ0FBQSxXQU1BLE9BQUFwekMsUUFBQStGLG1CQUFBc3RDLE1BQUFyekMsT0FBQXN6QyxPQVVBQyxFQUFBLFNBQUFMLEdBQ0EsSUFBQUMsS0FFQSxnQkFBQTd4QyxFQUFBa3lDLEdBTUEsc0JBQUFseUMsRUFDQSxPQUFBQSxJQUVBLFlBQUE2eEMsRUFBQTd4QyxHQUFBLENBQ0EsSUFBQW15QyxFQXBCQSxTQUFBbnlDLEVBQUFreUMsR0FDQSxPQUFBQSxFQUNBQSxFQUFBeHRDLGNBQUExRSxHQUVBeUUsU0FBQUMsY0FBQTFFLElBZ0JBdEQsS0FBQXNGLEtBQUFoQyxFQUFBa3lDLEdBRUEsR0FBQXh6QyxPQUFBMHpDLG1CQUFBRCxhQUFBenpDLE9BQUEwekMsa0JBQ0EsSUFHQUQsSUFBQUUsZ0JBQUFDLEtBQ0ssTUFBQXR4QyxHQUNMbXhDLEVBQUEsS0FHQU4sRUFBQTd4QyxHQUFBbXlDLEVBRUEsT0FBQU4sRUFBQTd4QyxJQTFCQSxHQThCQXV5QyxFQUFBLEtBQ0FDLEVBQUEsRUFDQUMsS0FFQUMsRUFBQXYyQyxFQUFBLElBcURBLFNBQUF3MkMsRUFBQUMsRUFBQWhtQixHQUNBLFFBQUFyd0IsRUFBQSxFQUFnQkEsRUFBQXEyQyxFQUFBbHlDLE9BQW1CbkUsSUFBQSxDQUNuQyxJQUFBczBDLEVBQUErQixFQUFBcjJDLEdBQ0FzMkMsRUFBQW5CLEVBQUFiLEVBQUFoMkIsSUFFQSxHQUFBZzRCLEVBQUEsQ0FDQUEsRUFBQTVzQyxPQUVBLFFBQUE2c0MsRUFBQSxFQUFpQkEsRUFBQUQsRUFBQUUsTUFBQXJ5QyxPQUEyQm95QyxJQUM1Q0QsRUFBQUUsTUFBQUQsR0FBQWpDLEVBQUFrQyxNQUFBRCxJQUdBLEtBQVFBLEVBQUFqQyxFQUFBa0MsTUFBQXJ5QyxPQUF1Qm95QyxJQUMvQkQsRUFBQUUsTUFBQWp2QyxLQUFBa3ZDLEVBQUFuQyxFQUFBa0MsTUFBQUQsR0FBQWxtQixRQUVHLENBQ0gsSUFBQW1tQixLQUVBLElBQUFELEVBQUEsRUFBaUJBLEVBQUFqQyxFQUFBa0MsTUFBQXJ5QyxPQUF1Qm95QyxJQUN4Q0MsRUFBQWp2QyxLQUFBa3ZDLEVBQUFuQyxFQUFBa0MsTUFBQUQsR0FBQWxtQixJQUdBOGtCLEVBQUFiLEVBQUFoMkIsS0FBMkJBLEdBQUFnMkIsRUFBQWgyQixHQUFBNVUsS0FBQSxFQUFBOHNDLFdBSzNCLFNBQUFFLEVBQUFyQyxFQUFBaGtCLEdBSUEsSUFIQSxJQUFBZ21CLEtBQ0FNLEtBRUEzMkMsRUFBQSxFQUFnQkEsRUFBQXEwQyxFQUFBbHdDLE9BQWlCbkUsSUFBQSxDQUNqQyxJQUFBczBDLEVBQUFELEVBQUFyMEMsR0FDQXNlLEVBQUErUixFQUFBK0UsS0FBQWtmLEVBQUEsR0FBQWprQixFQUFBK0UsS0FBQWtmLEVBQUEsR0FJQXNDLEdBQWNDLElBSGR2QyxFQUFBLEdBR2N3QyxNQUZkeEMsRUFBQSxHQUVjSSxVQURkSixFQUFBLElBR0FxQyxFQUFBcjRCLEdBQ0FxNEIsRUFBQXI0QixHQUFBazRCLE1BQUFqdkMsS0FBQXF2QyxHQURBUCxFQUFBOXVDLEtBQUFvdkMsRUFBQXI0QixJQUFrREEsS0FBQWs0QixPQUFBSSxLQUlsRCxPQUFBUCxFQUdBLFNBQUFVLEVBQUExbUIsRUFBQTlhLEdBQ0EsSUFBQTlSLEVBQUFpeUMsRUFBQXJsQixFQUFBNmpCLFlBRUEsSUFBQXp3QyxFQUNBLFVBQUFtQixNQUFBLCtHQUdBLElBQUFveUMsRUFBQWQsSUFBQS94QyxPQUFBLEdBRUEsV0FBQWtzQixFQUFBNG1CLFNBQ0FELEVBRUdBLEVBQUE1cUIsWUFDSDNvQixFQUFBNitCLGFBQUEvc0IsRUFBQXloQyxFQUFBNXFCLGFBRUEzb0IsRUFBQW91QixZQUFBdGMsR0FKQTlSLEVBQUE2K0IsYUFBQS9zQixFQUFBOVIsRUFBQXNvQixZQU1BbXFCLEVBQUEzdUMsS0FBQWdPLFFBQ0UsY0FBQThhLEVBQUE0bUIsU0FDRnh6QyxFQUFBb3VCLFlBQUF0YyxPQUNFLHFCQUFBOGEsRUFBQTRtQixXQUFBNW1CLEVBQUE0bUIsU0FBQUMsT0FJRixVQUFBdHlDLE1BQUEsOExBSEEsSUFBQXduQixFQUFBc3BCLEVBQUFybEIsRUFBQTRtQixTQUFBQyxPQUFBenpDLEdBQ0FBLEVBQUE2K0IsYUFBQS9zQixFQUFBNlcsSUFNQSxTQUFBK3FCLEVBQUE1aEMsR0FDQSxVQUFBQSxFQUFBdkMsV0FBQSxTQUNBdUMsRUFBQXZDLFdBQUE0ZSxZQUFBcmMsR0FFQSxJQUFBNmhDLEVBQUFsQixFQUFBeG1DLFFBQUE2RixHQUNBNmhDLEdBQUEsR0FDQWxCLEVBQUF6dUMsT0FBQTJ2QyxFQUFBLEdBSUEsU0FBQUMsRUFBQWhuQixHQUNBLElBQUE5YSxFQUFBck4sU0FBQU4sY0FBQSxTQU1BLFFBSkE3RCxJQUFBc3NCLEVBQUFpbkIsTUFBQXJzQyxPQUNBb2xCLEVBQUFpbkIsTUFBQXJzQyxLQUFBLGlCQUdBbEgsSUFBQXNzQixFQUFBaW5CLE1BQUFDLE1BQUEsQ0FDQSxJQUFBQSxFQWdDQSxXQUNBLEVBSUEsT0FBQTMzQyxFQUFBa2dDLEdBckNBMFgsR0FDQUQsSUFDQWxuQixFQUFBaW5CLE1BQUFDLFNBT0EsT0FIQUUsRUFBQWxpQyxFQUFBOGEsRUFBQWluQixPQUNBUCxFQUFBMW1CLEVBQUE5YSxHQUVBQSxFQWlCQSxTQUFBa2lDLEVBQUFDLEVBQUFKLEdBQ0E1MkMsT0FBQTRDLEtBQUFnMEMsR0FBQWwwQyxRQUFBLFNBQUE3QixHQUNBbTJDLEVBQUFsN0IsYUFBQWpiLEVBQUErMUMsRUFBQS8xQyxNQVlBLFNBQUFrMUMsRUFBQWxKLEVBQUFsZCxHQUNBLElBQUE5YSxFQUFBb2lDLEVBQUFDLEVBQUF2MUMsRUFHQSxHQUFBZ3VCLEVBQUE0akIsV0FBQTFHLEVBQUFzSixJQUFBLENBR0EsS0FGQXgwQyxFQUFBZ3VCLEVBQUE0akIsVUFBQTFHLEVBQUFzSixNQVNBLG9CQUpBdEosRUFBQXNKLElBQUF4MEMsRUFVQSxHQUFBZ3VCLEVBQUEybEIsVUFBQSxDQUNBLElBQUE2QixFQUFBNUIsSUFFQTFnQyxFQUFBeWdDLE1BQUFxQixFQUFBaG5CLElBRUFzbkIsRUFBQUcsRUFBQXQyQyxLQUFBLEtBQUErVCxFQUFBc2lDLEdBQUEsR0FDQUQsRUFBQUUsRUFBQXQyQyxLQUFBLEtBQUErVCxFQUFBc2lDLEdBQUEsUUFHQXRLLEVBQUFtSCxXQUNBLG1CQUFBcUQsS0FDQSxtQkFBQUEsSUFBQUMsaUJBQ0EsbUJBQUFELElBQUFFLGlCQUNBLG1CQUFBQyxNQUNBLG1CQUFBMUQsTUFFQWovQixFQWhFQSxTQUFBOGEsR0FDQSxJQUFBdUYsRUFBQTF0QixTQUFBTixjQUFBLFFBVUEsWUFSQTdELElBQUFzc0IsRUFBQWluQixNQUFBcnNDLE9BQ0FvbEIsRUFBQWluQixNQUFBcnNDLEtBQUEsWUFFQW9sQixFQUFBaW5CLE1BQUFhLElBQUEsYUFFQVYsRUFBQTdoQixFQUFBdkYsRUFBQWluQixPQUNBUCxFQUFBMW1CLEVBQUF1RixHQUVBQSxFQXFEQXdpQixDQUFBL25CLEdBQ0FzbkIsRUFpRkEsU0FBQS9oQixFQUFBdkYsRUFBQWtkLEdBQ0EsSUFBQXNKLEVBQUF0SixFQUFBc0osSUFDQW5DLEVBQUFuSCxFQUFBbUgsVUFRQTJELE9BQUF0MEMsSUFBQXNzQixFQUFBaW9CLHVCQUFBNUQsR0FFQXJrQixFQUFBaW9CLHVCQUFBRCxLQUNBeEIsRUFBQVYsRUFBQVUsSUFHQW5DLElBRUFtQyxHQUFBLHVEQUF1RHJDLEtBQUFHLFNBQUF6ckMsbUJBQUE4dUIsS0FBQUMsVUFBQXljLE1BQUEsT0FHdkQsSUFBQTZELEVBQUEsSUFBQUwsTUFBQXJCLElBQTZCNXJDLEtBQUEsYUFFN0J1dEMsRUFBQTVpQixFQUFBNmlCLEtBRUE3aUIsRUFBQTZpQixLQUFBVixJQUFBQyxnQkFBQU8sR0FFQUMsR0FBQVQsSUFBQUUsZ0JBQUFPLElBNUdBaDNDLEtBQUEsS0FBQStULEVBQUE4YSxHQUNBdW5CLEVBQUEsV0FDQVQsRUFBQTVoQyxHQUVBQSxFQUFBa2pDLE1BQUFWLElBQUFFLGdCQUFBMWlDLEVBQUFrakMsU0FHQWxqQyxFQUFBOGhDLEVBQUFobkIsR0FDQXNuQixFQXNEQSxTQUFBcGlDLEVBQUFnNEIsR0FDQSxJQUFBc0osRUFBQXRKLEVBQUFzSixJQUNBQyxFQUFBdkosRUFBQXVKLE1BRUFBLEdBQ0F2aEMsRUFBQWlILGFBQUEsUUFBQXM2QixHQUdBLEdBQUF2aEMsRUFBQW1qQyxXQUNBbmpDLEVBQUFtakMsV0FBQUMsUUFBQTlCLE1BQ0UsQ0FDRixLQUFBdGhDLEVBQUF3VyxZQUNBeFcsRUFBQXFjLFlBQUFyYyxFQUFBd1csWUFHQXhXLEVBQUFzYyxZQUFBM3BCLFNBQUF5dUIsZUFBQWtnQixNQXJFQXIxQyxLQUFBLEtBQUErVCxHQUNBcWlDLEVBQUEsV0FDQVQsRUFBQTVoQyxLQU1BLE9BRkFvaUMsRUFBQXBLLEdBRUEsU0FBQXFMLEdBQ0EsR0FBQUEsRUFBQSxDQUNBLEdBQ0FBLEVBQUEvQixNQUFBdEosRUFBQXNKLEtBQ0ErQixFQUFBOUIsUUFBQXZKLEVBQUF1SixPQUNBOEIsRUFBQWxFLFlBQUFuSCxFQUFBbUgsVUFFQSxPQUdBaUQsRUFBQXBLLEVBQUFxTCxRQUVBaEIsS0F4UEE3M0MsRUFBQUQsUUFBQSxTQUFBdTBDLEVBQUFoa0IsR0FDQSx1QkFBQXdvQixjQUNBLGlCQUFBM3dDLFNBQUEsVUFBQXRELE1BQUEsaUVBR0F5ckIsU0FFQWluQixNQUFBLGlCQUFBam5CLEVBQUFpbkIsTUFBQWpuQixFQUFBaW5CLFNBSUFqbkIsRUFBQTJsQixXQUFBLGtCQUFBM2xCLEVBQUEybEIsWUFBQTNsQixFQUFBMmxCLFVBQUFaLEtBR0Eva0IsRUFBQTZqQixhQUFBN2pCLEVBQUE2akIsV0FBQSxRQUdBN2pCLEVBQUE0bUIsV0FBQTVtQixFQUFBNG1CLFNBQUEsVUFFQSxJQUFBWixFQUFBSyxFQUFBckMsRUFBQWhrQixHQUlBLE9BRkErbEIsRUFBQUMsRUFBQWhtQixHQUVBLFNBQUF5b0IsR0FHQSxJQUZBLElBQUFDLEtBRUEvNEMsRUFBQSxFQUFpQkEsRUFBQXEyQyxFQUFBbHlDLE9BQW1CbkUsSUFBQSxDQUNwQyxJQUFBczBDLEVBQUErQixFQUFBcjJDLElBQ0FzMkMsRUFBQW5CLEVBQUFiLEVBQUFoMkIsS0FFQTVVLE9BQ0FxdkMsRUFBQXh4QyxLQUFBK3VDLEdBR0F3QyxHQUVBMUMsRUFEQU0sRUFBQW9DLEVBQUF6b0IsR0FDQUEsR0FHQSxJQUFBcndCLEVBQUEsRUFBaUJBLEVBQUErNEMsRUFBQTUwQyxPQUFzQm5FLElBQUEsQ0FDdkMsSUFBQXMyQyxFQUVBLFFBRkFBLEVBQUF5QyxFQUFBLzRDLElBRUEwSixLQUFBLENBQ0EsUUFBQTZzQyxFQUFBLEVBQW1CQSxFQUFBRCxFQUFBRSxNQUFBcnlDLE9BQTJCb3lDLElBQUFELEVBQUFFLE1BQUFELFlBRTlDcEIsRUFBQW1CLEVBQUFoNEIsUUFnTkEsSUFBQTA2QixFQUFBLFdBQ0EsSUFBQUMsS0FFQSxnQkFBQXp4QyxFQUFBMHhDLEdBR0EsT0FGQUQsRUFBQXp4QyxHQUFBMHhDLEVBRUFELEVBQUFFLE9BQUFDLFNBQUFuMkMsS0FBQSxPQU5BLEdBVUEsU0FBQTYwQyxFQUFBdmlDLEVBQUEvTixFQUFBb3dDLEVBQUFySyxHQUNBLElBQUFzSixFQUFBZSxFQUFBLEdBQUFySyxFQUFBc0osSUFFQSxHQUFBdGhDLEVBQUFtakMsV0FDQW5qQyxFQUFBbWpDLFdBQUFDLFFBQUFLLEVBQUF4eEMsRUFBQXF2QyxPQUNFLENBQ0YsSUFBQXdDLEVBQUFueEMsU0FBQXl1QixlQUFBa2dCLEdBQ0F5QyxFQUFBL2pDLEVBQUErakMsV0FFQUEsRUFBQTl4QyxJQUFBK04sRUFBQXFjLFlBQUEwbkIsRUFBQTl4QyxJQUVBOHhDLEVBQUFuMUMsT0FDQW9SLEVBQUErc0IsYUFBQStXLEVBQUFDLEVBQUE5eEMsSUFFQStOLEVBQUFzYyxZQUFBd25CLG9CQzNVQXQ1QyxFQUFBRCxRQUFBLFNBQUErMkMsR0FFQSxJQUFBaHVCLEVBQUEsb0JBQUExbUIsZUFBQTBtQixTQUVBLElBQUFBLEVBQ0EsVUFBQWprQixNQUFBLG9DQUlBLElBQUFpeUMsR0FBQSxpQkFBQUEsRUFDQSxPQUFBQSxFQUdBLElBQUEwQyxFQUFBMXdCLEVBQUEyd0IsU0FBQSxLQUFBM3dCLEVBQUE0d0IsS0FDQUMsRUFBQUgsRUFBQTF3QixFQUFBOHdCLFNBQUE1MEMsUUFBQSxpQkEyREEsT0EvQkE4eEMsRUFBQTl4QyxRQUFBLCtEQUFBNjBDLEVBQUFDLEdBRUEsSUFXQUMsRUFYQUMsRUFBQUYsRUFDQWhsQixPQUNBOXZCLFFBQUEsb0JBQUF0RSxFQUFBdTVDLEdBQXdDLE9BQUFBLElBQ3hDajFDLFFBQUEsb0JBQUF0RSxFQUFBdTVDLEdBQXdDLE9BQUFBLElBR3hDLDBEQUFBcDZCLEtBQUFtNkIsR0FDQUgsR0FRQUUsRUFGQSxJQUFBQyxFQUFBcnFDLFFBQUEsTUFFQXFxQyxFQUNHLElBQUFBLEVBQUFycUMsUUFBQSxLQUVINnBDLEVBQUFRLEVBR0FMLEVBQUFLLEVBQUFoMUMsUUFBQSxZQUlBLE9BQUFpekIsS0FBQUMsVUFBQTZoQixHQUFBIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gOSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qIGdsb2JhbCB3aW5kb3cgKi9cbmltcG9ydCBwb255ZmlsbCBmcm9tICcuL3BvbnlmaWxsLmpzJztcblxudmFyIHJvb3Q7XG5cbmlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IHNlbGY7XG59IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSB3aW5kb3c7XG59IGVsc2UgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBnbG9iYWw7XG59IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBtb2R1bGU7XG59IGVsc2Uge1xuICByb290ID0gRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbn1cblxudmFyIHJlc3VsdCA9IHBvbnlmaWxsKHJvb3QpO1xuZXhwb3J0IGRlZmF1bHQgcmVzdWx0O1xuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpO1xuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlbXB0eU9iamVjdCA9IHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBPYmplY3QuZnJlZXplKGVtcHR5T2JqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eU9iamVjdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIzMTdhOGZmMTFkZWFiZWIxMGI3NWI1MjQwNDRmMmYwNS5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzeW1ib2xPYnNlcnZhYmxlUG9ueWZpbGwocm9vdCkge1xuXHR2YXIgcmVzdWx0O1xuXHR2YXIgU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cblx0aWYgKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicpIHtcblx0XHRpZiAoU3ltYm9sLm9ic2VydmFibGUpIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbC5vYnNlcnZhYmxlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXN1bHQgPSBTeW1ib2woJ29ic2VydmFibGUnKTtcblx0XHRcdFN5bWJvbC5vYnNlcnZhYmxlID0gcmVzdWx0O1xuXHRcdH1cblx0fSBlbHNlIHtcblx0XHRyZXN1bHQgPSAnQEBvYnNlcnZhYmxlJztcblx0fVxuXG5cdHJldHVybiByZXN1bHQ7XG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiO1xyXG5pbXBvcnQgeyBjcmVhdGVTdG9yZSB9IGZyb20gXCJyZWR1eFwiO1xyXG5cclxuaW1wb3J0IEZvcm0gZnJvbSBcIi4vRm9ybVwiO1xyXG5pbXBvcnQgTGlzdCBmcm9tIFwiLi9MaXN0XCI7XHJcbmltcG9ydCBUYWIgZnJvbSBcIi4vVGFiXCI7XHJcbmltcG9ydCBcIi4uLy4uL3N0eWxlLmNzc1wiO1xyXG5pbXBvcnQgaW1nIGZyb20gXCIuLi8uLi9pbWcvYWRkLnBuZ1wiO1xyXG5cclxuY29uc29sZS5sb2coY3JlYXRlU3RvcmUpO1xyXG5cclxuY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgaW5wdXRWYWx1ZTogXCJcIixcclxuICAgICAgdG9kb3M6IFtcclxuICAgICAgICAvLyB7dmFsdWU6IFwiY2xlYW5cIiwgZG9uZTogZmFsc2V9LCBcclxuICAgICAgICAvL3t2YWx1ZTogXCJ3YXNoXCIsIGRvbmU6IHRydWV9XHJcbiAgICAgIF0sXHJcbiAgICAgIHRhYnM6IFwiQWxsXCJcclxuICAgIH07XHJcbiAgICB0aGlzLmhhbmRsZUNoYW5nZSA9IHRoaXMuaGFuZGxlQ2hhbmdlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZVN1Ym1pdCA9IHRoaXMuaGFuZGxlU3VibWl0LmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZUZpbmlzaCA9IHRoaXMuaGFuZGxlRmluaXNoLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZURlbGV0ZSA9IHRoaXMuaGFuZGxlRGVsZXRlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZVRhYnMgPSB0aGlzLmhhbmRsZVRhYnMuYmluZCh0aGlzKTtcclxuICB9XHJcbiAgaGFuZGxlQ2hhbmdlKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIHRoaXMuc2V0U3RhdGUoe2lucHV0VmFsdWU6IGUudGFyZ2V0LnZhbHVlfSk7XHJcbiAgfVxyXG4gIGhhbmRsZVN1Ym1pdChlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBjb25zdCBuZXdUb2RvID0ge1xyXG4gICAgICB2YWx1ZTogdGhpcy5zdGF0ZS5pbnB1dFZhbHVlLFxyXG4gICAgICBkb25lOiBmYWxzZVxyXG4gICAgfTtcclxuICAgIGNvbnN0IHRvZG9zID0gdGhpcy5zdGF0ZS50b2RvcztcclxuICAgIHRvZG9zLnB1c2gobmV3VG9kbyk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgdG9kb3M6IHRvZG9zLCBpbnB1dFZhbHVlOiBcIlwifSk7IC8vIHRvZG9zIOWPquimgeaUvuS4gOWAi++8jOWboOeCuiBFUzYg6IulIGtleSDlkowgdmFsdWUg55u45ZCM77yM5pS+5LiA5YCL5Y2z5Y+vXHJcbiAgfVxyXG4gIGhhbmRsZUZpbmlzaChpbmRleCl7XHJcbiAgICBjb25zdCB0b2RvcyA9IHRoaXMuc3RhdGUudG9kb3M7XHJcbiAgICAvL3VzZSBzdGF0dXMgKHRydWUgLyBmYWxzZSkgb2YgdG9kby5kb25lIHRvIGNvbnRyb2wgY2hlY2tlZCBzdGF0dXMgb2YgY2hlY2tib3ggYW5kIHN0eWxlIG9mIHRhc2sgY29udGVudFxyXG4gICAgdG9kb3NbaW5kZXhdLmRvbmUgPSAhdG9kb3NbaW5kZXhdLmRvbmU7XHJcbiAgICB0aGlzLnNldFN0YXRlKHt0b2Rvc30pO1xyXG4gICAgY29uc29sZS5sb2codG9kb3MpO1xyXG4gIH1cclxuICBoYW5kbGVEZWxldGUoZSwgaW5kZXgpe1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgY29uc3QgdG9kb3MgPSB0aGlzLnN0YXRlLnRvZG9zO1xyXG4gICAgdG9kb3Muc3BsaWNlKGluZGV4LCAxKTtcclxuICAgIHRoaXMuc2V0U3RhdGUoe3RvZG9zfSk7XHJcbiAgICBjb25zb2xlLmxvZyh0b2Rvcyk7XHJcbiAgfVxyXG4gIGhhbmRsZVRhYnMoZSl7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHt0YWJzOiBlLnRhcmdldC52YWx1ZX0pO1xyXG4gIH1cclxuICByZW5kZXIoKXsgXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8c3Bhbj48L3NwYW4+XHJcbiAgICAgICAgICA8aDE+TWFrZSB5b3VyIFRvZG9saXN0PC9oMT5cclxuICAgICAgICA8L2Rpdj4gICAgICAgIFxyXG4gICAgICAgIDxGb3JtXHJcbiAgICAgICAgICBoYW5kbGVTdWJtaXQ9e3RoaXMuaGFuZGxlU3VibWl0fVxyXG4gICAgICAgICAgaGFuZGxlQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX1cclxuICAgICAgICAgIGlucHV0VmFsdWU9e3RoaXMuc3RhdGUuaW5wdXRWYWx1ZX1cclxuICAgICAgICAvPlxyXG4gICAgICAgIDxUYWJcclxuICAgICAgICAgIHRhYnM9e3RoaXMuc3RhdGUudGFic31cclxuICAgICAgICAgIGhhbmRsZVRhYnM9e3RoaXMuaGFuZGxlVGFic31cclxuICAgICAgICAvPlxyXG4gICAgICAgIDxMaXN0XHJcbiAgICAgICAgICBoYW5kbGVGaW5pc2g9e3RoaXMuaGFuZGxlRmluaXNofVxyXG4gICAgICAgICAgdG9kb3M9e3RoaXMuc3RhdGUudG9kb3N9XHJcbiAgICAgICAgICBoYW5kbGVEZWxldGU9e3RoaXMuaGFuZGxlRGVsZXRlfVxyXG4gICAgICAgICAgdGFicz17dGhpcy5zdGF0ZS50YWJzfVxyXG4gICAgICAgIC8+ICAgICAgICBcclxuICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5leHBvcnQgZGVmYXVsdCBBcHA7XHJcblxyXG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hcHBDb250YWluZXJcIikpO1xyXG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjQuMlxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1yZXF1aXJlKFwiZmJqcy9saWIvaW52YXJpYW50XCIpLHA9cmVxdWlyZShcImZianMvbGliL2VtcHR5T2JqZWN0XCIpLHE9cmVxdWlyZShcImZianMvbGliL2VtcHR5RnVuY3Rpb25cIikscj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHQ9cj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyx1PXI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNix2PXI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHc9cj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgseD1yP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx5PXI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHo9cj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxBPXI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsQj1cbnI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyO3ImJlN5bWJvbC5mb3IoXCJyZWFjdC50aW1lb3V0XCIpO3ZhciBDPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBEKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZT1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0wO2M8YjtjKyspZSs9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7bighMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGUpfVxudmFyIEU9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319O2Z1bmN0aW9uIEYoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9cDt0aGlzLnVwZGF0ZXI9ZXx8RX1GLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0YucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT9EKFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRygpe31cbkcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9cDt0aGlzLnVwZGF0ZXI9ZXx8RX12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7ayhJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixlKXt2YXIgYz12b2lkIDAsZD17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnQsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT10fWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGUsYyl7aWYoUC5sZW5ndGgpe3ZhciBkPVAucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1lO2QuY29udGV4dD1jO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzplLGNvbnRleHQ6Yyxjb3VudDowfX1mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHQ6Y2FzZSB1Omc9ITB9fWlmKGcpcmV0dXJuIGUoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZD1hW2hdO3ZhciBmPWIrVChkLGgpO2crPVMoZCxmLGUsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhP2Y9bnVsbDooZj1DJiZhW0NdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLFxuaD0wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitUKGQsaCsrKSxnKz1TKGQsZixlLGMpO2Vsc2VcIm9iamVjdFwiPT09ZCYmKGU9XCJcIithLEQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmUsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFQoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFUoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gVihhLGIsZSl7dmFyIGM9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9XKGEsYyxlLHEudGhhdFJldHVybnNBcmd1bWVudCk6bnVsbCE9YSYmKE4oYSkmJihiPWQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpK2UsYT17JCR0eXBlb2Y6dCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9KSxjLnB1c2goYSkpfWZ1bmN0aW9uIFcoYSxiLGUsYyxkKXt2YXIgZz1cIlwiO251bGwhPWUmJihnPShcIlwiK2UpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIik7Yj1RKGIsZyxjLGQpO251bGw9PWF8fFMoYSxcIlwiLFYsYik7UihiKX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1coYSxjLG51bGwsYixlKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZSk7bnVsbD09YXx8UyhhLFwiXCIsVSxiKTtSKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT8wOlMoYSxcIlwiLHEudGhhdFJldHVybnNOdWxsLG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1coYSxiLG51bGwscS50aGF0UmV0dXJuc0FyZ3VtZW50KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtOKGEpP3ZvaWQgMDpEKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpGLFB1cmVDb21wb25lbnQ6SCxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6eixcbl9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9kZWZhdWx0VmFsdWU6YSxfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfY2hhbmdlZEJpdHM6MCxfY2hhbmdlZEJpdHMyOjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp5LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkIscmVuZGVyOmF9fSxGcmFnbWVudDp2LFN0cmljdE1vZGU6dyx1bnN0YWJsZV9Bc3luY01vZGU6QSx1bnN0YWJsZV9Qcm9maWxlcjp4LGNyZWF0ZUVsZW1lbnQ6TSxjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGUpe251bGw9PT1hfHx2b2lkIDA9PT1hP0QoXCIyNjdcIixhKTp2b2lkIDA7dmFyIGM9dm9pZCAwLGQ9ayh7fSxhLnByb3BzKSxnPWEua2V5LGg9YS5yZWYsZj1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1KLmN1cnJlbnQpO3ZvaWQgMCE9PVxuYi5rZXkmJihnPVwiXCIrYi5rZXkpO3ZhciBsPXZvaWQgMDthLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMmJihsPWEudHlwZS5kZWZhdWx0UHJvcHMpO2ZvcihjIGluIGIpSy5jYWxsKGIsYykmJiFMLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT12b2lkIDA9PT1iW2NdJiZ2b2lkIDAhPT1sP2xbY106YltjXSl9Yz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWMpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxjKXtsPUFycmF5KGMpO2Zvcih2YXIgbT0wO208YzttKyspbFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWx9cmV0dXJueyQkdHlwZW9mOnQsdHlwZTphLnR5cGUsa2V5OmcscmVmOmgscHJvcHM6ZCxfb3duZXI6Zn19LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LGlzVmFsaWRFbGVtZW50Ok4sdmVyc2lvbjpcIjE2LjQuMlwiLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpKLFxuYXNzaWduOmt9fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHQ/Wi5kZWZhdWx0Olo7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjQuMlxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJmYmpzL2xpYi9pbnZhcmlhbnRcIiksYmE9cmVxdWlyZShcInJlYWN0XCIpLG09cmVxdWlyZShcImZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50XCIpLHA9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksdj1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlGdW5jdGlvblwiKSxkYT1yZXF1aXJlKFwiZmJqcy9saWIvZ2V0QWN0aXZlRWxlbWVudFwiKSxlYT1yZXF1aXJlKFwiZmJqcy9saWIvc2hhbGxvd0VxdWFsXCIpLGZhPXJlcXVpcmUoXCJmYmpzL2xpYi9jb250YWluc05vZGVcIiksaGE9cmVxdWlyZShcImZianMvbGliL2VtcHR5T2JqZWN0XCIpO1xuZnVuY3Rpb24gQShhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGM9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGQ9MDtkPGI7ZCsrKWMrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2QrMV0pO2FhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsYyl9YmE/dm9pZCAwOkEoXCIyMjdcIik7XG5mdW5jdGlvbiBpYShhLGIsYyxkLGUsZixnLGgsayl7dGhpcy5faGFzQ2F1Z2h0RXJyb3I9ITE7dGhpcy5fY2F1Z2h0RXJyb3I9bnVsbDt2YXIgbj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxuKX1jYXRjaChyKXt0aGlzLl9jYXVnaHRFcnJvcj1yLHRoaXMuX2hhc0NhdWdodEVycm9yPSEwfX1cbnZhciBCPXtfY2F1Z2h0RXJyb3I6bnVsbCxfaGFzQ2F1Z2h0RXJyb3I6ITEsX3JldGhyb3dFcnJvcjpudWxsLF9oYXNSZXRocm93RXJyb3I6ITEsaW52b2tlR3VhcmRlZENhbGxiYWNrOmZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCxrKXtpYS5hcHBseShCLGFyZ3VtZW50cyl9LGludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvcjpmdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsayl7Qi5pbnZva2VHdWFyZGVkQ2FsbGJhY2suYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKEIuaGFzQ2F1Z2h0RXJyb3IoKSl7dmFyIG49Qi5jbGVhckNhdWdodEVycm9yKCk7Qi5faGFzUmV0aHJvd0Vycm9yfHwoQi5faGFzUmV0aHJvd0Vycm9yPSEwLEIuX3JldGhyb3dFcnJvcj1uKX19LHJldGhyb3dDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBrYS5hcHBseShCLGFyZ3VtZW50cyl9LGhhc0NhdWdodEVycm9yOmZ1bmN0aW9uKCl7cmV0dXJuIEIuX2hhc0NhdWdodEVycm9yfSxjbGVhckNhdWdodEVycm9yOmZ1bmN0aW9uKCl7aWYoQi5faGFzQ2F1Z2h0RXJyb3Ipe3ZhciBhPVxuQi5fY2F1Z2h0RXJyb3I7Qi5fY2F1Z2h0RXJyb3I9bnVsbDtCLl9oYXNDYXVnaHRFcnJvcj0hMTtyZXR1cm4gYX1BKFwiMTk4XCIpfX07ZnVuY3Rpb24ga2EoKXtpZihCLl9oYXNSZXRocm93RXJyb3Ipe3ZhciBhPUIuX3JldGhyb3dFcnJvcjtCLl9yZXRocm93RXJyb3I9bnVsbDtCLl9oYXNSZXRocm93RXJyb3I9ITE7dGhyb3cgYTt9fXZhciBsYT1udWxsLG1hPXt9O1xuZnVuY3Rpb24gbmEoKXtpZihsYSlmb3IodmFyIGEgaW4gbWEpe3ZhciBiPW1hW2FdLGM9bGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDpBKFwiOTZcIixhKTtpZighb2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6QShcIjk3XCIsYSk7b2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtwYS5oYXNPd25Qcm9wZXJ0eShoKT9BKFwiOTlcIixoKTp2b2lkIDA7cGFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmcWEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6QShcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHFhKGEsYixjKXtyYVthXT9BKFwiMTAwXCIsYSk6dm9pZCAwO3JhW2FdPWI7c2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgb2E9W10scGE9e30scmE9e30sc2E9e307ZnVuY3Rpb24gdGEoYSl7bGE/QShcIjEwMVwiKTp2b2lkIDA7bGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7bmEoKX1mdW5jdGlvbiB1YShhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTttYS5oYXNPd25Qcm9wZXJ0eShjKSYmbWFbY109PT1kfHwobWFbY10/QShcIjEwMlwiLGMpOnZvaWQgMCxtYVtjXT1kLGI9ITApfWImJm5hKCl9XG52YXIgdmE9e3BsdWdpbnM6b2EsZXZlbnROYW1lRGlzcGF0Y2hDb25maWdzOnBhLHJlZ2lzdHJhdGlvbk5hbWVNb2R1bGVzOnJhLHJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXM6c2EscG9zc2libGVSZWdpc3RyYXRpb25OYW1lczpudWxsLGluamVjdEV2ZW50UGx1Z2luT3JkZXI6dGEsaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOnVhfSx3YT1udWxsLHhhPW51bGwseWE9bnVsbDtmdW5jdGlvbiB6YShhLGIsYyxkKXtiPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXlhKGQpO0IuaW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yKGIsYyx2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiBBYShhLGIpe251bGw9PWI/QShcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19ZnVuY3Rpb24gQmEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIENhPW51bGw7XG5mdW5jdGlvbiBEYShhLGIpe2lmKGEpe3ZhciBjPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGQ9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShjKSlmb3IodmFyIGU9MDtlPGMubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2UrKyl6YShhLGIsY1tlXSxkW2VdKTtlbHNlIGMmJnphKGEsYixjLGQpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIEVhKGEpe3JldHVybiBEYShhLCEwKX1mdW5jdGlvbiBGYShhKXtyZXR1cm4gRGEoYSwhMSl9dmFyIEdhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOnRhLGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTp1YX07XG5mdW5jdGlvbiBIYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXdhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP0EoXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBJYShhLGIpe251bGwhPT1hJiYoQ2E9QWEoQ2EsYSkpO2E9Q2E7Q2E9bnVsbDthJiYoYj9CYShhLEVhKTpCYShhLEZhKSxDYT9BKFwiOTVcIik6dm9pZCAwLEIucmV0aHJvd0NhdWdodEVycm9yKCkpfWZ1bmN0aW9uIEphKGEsYixjLGQpe2Zvcih2YXIgZT1udWxsLGY9MDtmPG9hLmxlbmd0aDtmKyspe3ZhciBnPW9hW2ZdO2cmJihnPWcuZXh0cmFjdEV2ZW50cyhhLGIsYyxkKSkmJihlPUFhKGUsZykpfUlhKGUsITEpfXZhciBLYT17aW5qZWN0aW9uOkdhLGdldExpc3RlbmVyOkhhLHJ1bkV2ZW50c0luQmF0Y2g6SWEscnVuRXh0cmFjdGVkRXZlbnRzSW5CYXRjaDpKYX0sTGE9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksQz1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0xhLE1hPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrTGE7XG5mdW5jdGlvbiBOYShhKXtpZihhW0NdKXJldHVybiBhW0NdO2Zvcig7IWFbQ107KWlmKGEucGFyZW50Tm9kZSlhPWEucGFyZW50Tm9kZTtlbHNlIHJldHVybiBudWxsO2E9YVtDXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIE9hKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTtBKFwiMzNcIil9ZnVuY3Rpb24gUGEoYSl7cmV0dXJuIGFbTWFdfHxudWxsfXZhciBRYT17cHJlY2FjaGVGaWJlck5vZGU6ZnVuY3Rpb24oYSxiKXtiW0NdPWF9LGdldENsb3Nlc3RJbnN0YW5jZUZyb21Ob2RlOk5hLGdldEluc3RhbmNlRnJvbU5vZGU6ZnVuY3Rpb24oYSl7YT1hW0NdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZz9udWxsOmF9LGdldE5vZGVGcm9tSW5zdGFuY2U6T2EsZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZTpQYSx1cGRhdGVGaWJlclByb3BzOmZ1bmN0aW9uKGEsYil7YVtNYV09Yn19O1xuZnVuY3Rpb24gRihhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIFJhKGEsYixjKXtmb3IodmFyIGQ9W107YTspZC5wdXNoKGEpLGE9RihhKTtmb3IoYT1kLmxlbmd0aDswPGEtLTspYihkW2FdLFwiY2FwdHVyZWRcIixjKTtmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKWIoZFthXSxcImJ1YmJsZWRcIixjKX1mdW5jdGlvbiBTYShhLGIsYyl7aWYoYj1IYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPUFhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPUFhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfWZ1bmN0aW9uIFRhKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMmJlJhKGEuX3RhcmdldEluc3QsU2EsYSl9XG5mdW5jdGlvbiBVYShhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXt2YXIgYj1hLl90YXJnZXRJbnN0O2I9Yj9GKGIpOm51bGw7UmEoYixTYSxhKX19ZnVuY3Rpb24gVmEoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9SGEoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPUFhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPUFhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBYYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlZhKGEuX3RhcmdldEluc3QsbnVsbCxhKX1mdW5jdGlvbiBZYShhKXtCYShhLFRhKX1cbmZ1bmN0aW9uIFphKGEsYixjLGQpe2lmKGMmJmQpYTp7dmFyIGU9Yztmb3IodmFyIGY9ZCxnPTAsaD1lO2g7aD1GKGgpKWcrKztoPTA7Zm9yKHZhciBrPWY7aztrPUYoaykpaCsrO2Zvcig7MDxnLWg7KWU9RihlKSxnLS07Zm9yKDswPGgtZzspZj1GKGYpLGgtLTtmb3IoO2ctLTspe2lmKGU9PT1mfHxlPT09Zi5hbHRlcm5hdGUpYnJlYWsgYTtlPUYoZSk7Zj1GKGYpfWU9bnVsbH1lbHNlIGU9bnVsbDtmPWU7Zm9yKGU9W107YyYmYyE9PWY7KXtnPWMuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09ZilicmVhaztlLnB1c2goYyk7Yz1GKGMpfWZvcihjPVtdO2QmJmQhPT1mOyl7Zz1kLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWYpYnJlYWs7Yy5wdXNoKGQpO2Q9RihkKX1mb3IoZD0wO2Q8ZS5sZW5ndGg7ZCsrKVZhKGVbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGE9Yy5sZW5ndGg7MDxhLS07KVZhKGNbYV0sXCJjYXB0dXJlZFwiLGIpfVxudmFyICRhPXthY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzOllhLGFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXNTa2lwVGFyZ2V0OmZ1bmN0aW9uKGEpe0JhKGEsVWEpfSxhY2N1bXVsYXRlRW50ZXJMZWF2ZURpc3BhdGNoZXM6WmEsYWNjdW11bGF0ZURpcmVjdERpc3BhdGNoZXM6ZnVuY3Rpb24oYSl7QmEoYSxYYSl9fTtmdW5jdGlvbiBhYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO2NbXCJtc1wiK2FdPVwiTVNcIitiO2NbXCJPXCIrYV09XCJvXCIrYi50b0xvd2VyQ2FzZSgpO3JldHVybiBjfVxudmFyIGJiPXthbmltYXRpb25lbmQ6YWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246YWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDphYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDphYihcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LGNiPXt9LGRiPXt9O20uY2FuVXNlRE9NJiYoZGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgYmIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgYmIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgYmIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgYmIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtcbmZ1bmN0aW9uIGViKGEpe2lmKGNiW2FdKXJldHVybiBjYlthXTtpZighYmJbYV0pcmV0dXJuIGE7dmFyIGI9YmJbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gZGIpcmV0dXJuIGNiW2FdPWJbY107cmV0dXJuIGF9dmFyIGZiPWViKFwiYW5pbWF0aW9uZW5kXCIpLGdiPWViKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLGhiPWViKFwiYW5pbWF0aW9uc3RhcnRcIiksaWI9ZWIoXCJ0cmFuc2l0aW9uZW5kXCIpLGpiPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxrYj1udWxsO1xuZnVuY3Rpb24gbGIoKXsha2ImJm0uY2FuVXNlRE9NJiYoa2I9XCJ0ZXh0Q29udGVudFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50P1widGV4dENvbnRlbnRcIjpcImlubmVyVGV4dFwiKTtyZXR1cm4ga2J9dmFyIEc9e19yb290Om51bGwsX3N0YXJ0VGV4dDpudWxsLF9mYWxsYmFja1RleHQ6bnVsbH07ZnVuY3Rpb24gbWIoKXtpZihHLl9mYWxsYmFja1RleHQpcmV0dXJuIEcuX2ZhbGxiYWNrVGV4dDt2YXIgYSxiPUcuX3N0YXJ0VGV4dCxjPWIubGVuZ3RoLGQsZT1uYigpLGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7Ry5fZmFsbGJhY2tUZXh0PWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCk7cmV0dXJuIEcuX2ZhbGxiYWNrVGV4dH1mdW5jdGlvbiBuYigpe3JldHVyblwidmFsdWVcImluIEcuX3Jvb3Q/Ry5fcm9vdC52YWx1ZTpHLl9yb290W2xiKCldfVxudmFyIG9iPVwiZGlzcGF0Y2hDb25maWcgX3RhcmdldEluc3QgbmF0aXZlRXZlbnQgaXNEZWZhdWx0UHJldmVudGVkIGlzUHJvcGFnYXRpb25TdG9wcGVkIF9kaXNwYXRjaExpc3RlbmVycyBfZGlzcGF0Y2hJbnN0YW5jZXNcIi5zcGxpdChcIiBcIikscGI9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OnYudGhhdFJldHVybnNOdWxsLGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5mdW5jdGlvbiBIKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT92LnRoYXRSZXR1cm5zVHJ1ZTp2LnRoYXRSZXR1cm5zRmFsc2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD12LnRoYXRSZXR1cm5zRmFsc2U7cmV0dXJuIHRoaXN9XG5wKEgucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9di50aGF0UmV0dXJuc1RydWUpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9di50aGF0UmV0dXJuc1RydWUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9di50aGF0UmV0dXJuc1RydWV9LGlzUGVyc2lzdGVudDp2LnRoYXRSZXR1cm5zRmFsc2UsXG5kZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDtmb3IoYT0wO2E8b2IubGVuZ3RoO2ErKyl0aGlzW29iW2FdXT1udWxsfX0pO0guSW50ZXJmYWNlPXBiO0guZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO3AoZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPXAoe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7cWIoYyk7cmV0dXJuIGN9O3FiKEgpO1xuZnVuY3Rpb24gcmIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gc2IoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOkEoXCIyMjNcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIHFiKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPXJiO2EucmVsZWFzZT1zYn12YXIgdGI9SC5leHRlbmQoe2RhdGE6bnVsbH0pLHViPUguZXh0ZW5kKHtkYXRhOm51bGx9KSx2Yj1bOSwxMywyNywzMl0sd2I9bS5jYW5Vc2VET00mJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LHhiPW51bGw7bS5jYW5Vc2VET00mJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKHhiPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgeWI9bS5jYW5Vc2VET00mJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiF4Yix6Yj1tLmNhblVzZURPTSYmKCF3Ynx8eGImJjg8eGImJjExPj14YiksQWI9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksQmI9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0sQ2I9ITE7XG5mdW5jdGlvbiBEYihhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PXZiLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gRWIoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgRmI9ITE7ZnVuY3Rpb24gR2IoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIEViKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtDYj0hMDtyZXR1cm4gQWI7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09QWImJkNiP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIEhiKGEsYil7aWYoRmIpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IXdiJiZEYihhLGIpPyhhPW1iKCksRy5fcm9vdD1udWxsLEcuX3N0YXJ0VGV4dD1udWxsLEcuX2ZhbGxiYWNrVGV4dD1udWxsLEZiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB6Yj9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBJYj17ZXZlbnRUeXBlczpCYixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZvaWQgMDt2YXIgZj12b2lkIDA7aWYod2IpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZT1CYi5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6ZT1CYi5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmU9QmIuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1lPXZvaWQgMH1lbHNlIEZiP0RiKGEsYykmJihlPUJiLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGU9QmIuY29tcG9zaXRpb25TdGFydCk7ZT8oemImJihGYnx8ZSE9PUJiLmNvbXBvc2l0aW9uU3RhcnQ/ZT09PUJiLmNvbXBvc2l0aW9uRW5kJiZGYiYmKGY9bWIoKSk6KEcuX3Jvb3Q9ZCxHLl9zdGFydFRleHQ9bmIoKSxGYj0hMCkpLGU9dGIuZ2V0UG9vbGVkKGUsYixjLGQpLGY/ZS5kYXRhPVxuZjooZj1FYihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksWWEoZSksZj1lKTpmPW51bGw7KGE9eWI/R2IoYSxjKTpIYihhLGMpKT8oYj11Yi5nZXRQb29sZWQoQmIuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFlhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LEpiPW51bGwsS2I9e2luamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQ6ZnVuY3Rpb24oYSl7SmI9YX19LExiPW51bGwsTWI9bnVsbDtmdW5jdGlvbiBOYihhKXtpZihhPXhhKGEpKXtKYiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIEpiLnJlc3RvcmVDb250cm9sbGVkU3RhdGU/dm9pZCAwOkEoXCIxOTRcIik7dmFyIGI9d2EoYS5zdGF0ZU5vZGUpO0piLnJlc3RvcmVDb250cm9sbGVkU3RhdGUoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBPYihhKXtMYj9NYj9NYi5wdXNoKGEpOk1iPVthXTpMYj1hfVxuZnVuY3Rpb24gUGIoKXtyZXR1cm4gbnVsbCE9PUxifHxudWxsIT09TWJ9ZnVuY3Rpb24gUWIoKXtpZihMYil7dmFyIGE9TGIsYj1NYjtNYj1MYj1udWxsO05iKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylOYihiW2FdKX19dmFyIFJiPXtpbmplY3Rpb246S2IsZW5xdWV1ZVN0YXRlUmVzdG9yZTpPYixuZWVkc1N0YXRlUmVzdG9yZTpQYixyZXN0b3JlU3RhdGVJZk5lZWRlZDpRYn07ZnVuY3Rpb24gU2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBUYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBVYigpe312YXIgVmI9ITE7ZnVuY3Rpb24gV2IoYSxiKXtpZihWYilyZXR1cm4gYShiKTtWYj0hMDt0cnl7cmV0dXJuIFNiKGEsYil9ZmluYWxseXtWYj0hMSxQYigpJiYoVWIoKSxRYigpKX19XG52YXIgWGI9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gWWIoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFYYlthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gWmIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfVxuZnVuY3Rpb24gJGIoYSxiKXtpZighbS5jYW5Vc2VET018fGImJiEoXCJhZGRFdmVudExpc3RlbmVyXCJpbiBkb2N1bWVudCkpcmV0dXJuITE7YT1cIm9uXCIrYTtiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn1mdW5jdGlvbiBhYyhhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gYmMoYSl7dmFyIGI9YWMoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIGNjKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1iYyhhKSl9ZnVuY3Rpb24gZGMoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPWFjKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9XG52YXIgZWM9YmEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQuUmVhY3RDdXJyZW50T3duZXIsZmM9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixnYz1mYz9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxoYz1mYz9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGljPWZjP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxqYz1mYz9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsa2M9ZmM/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGxjPWZjP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxtYz1mYz9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxwYz1mYz9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxxYz1mYz9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscmM9ZmM/U3ltYm9sLmZvcihcInJlYWN0LnRpbWVvdXRcIik6XG42MDExMyxzYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gdGMoYSl7aWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXNjJiZhW3NjXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gdWMoYSl7dmFyIGI9YS50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBiLmRpc3BsYXlOYW1lfHxiLm5hbWU7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiKXJldHVybiBiO3N3aXRjaChiKXtjYXNlIHBjOnJldHVyblwiQXN5bmNNb2RlXCI7Y2FzZSBtYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGljOnJldHVyblwiUmVhY3RGcmFnbWVudFwiO2Nhc2UgaGM6cmV0dXJuXCJSZWFjdFBvcnRhbFwiO2Nhc2Uga2M6cmV0dXJuXCJQcm9maWxlcihcIithLnBlbmRpbmdQcm9wcy5pZCtcIilcIjtjYXNlIGxjOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgamM6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSByYzpyZXR1cm5cIlRpbWVvdXRcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXN3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHFjOnJldHVybiBhPWIucmVuZGVyLmRpc3BsYXlOYW1lfHxiLnJlbmRlci5uYW1lfHxcIlwiLFwiXCIhPT1hP1wiRm9yd2FyZFJlZihcIitcbmErXCIpXCI6XCJGb3J3YXJkUmVmXCJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdmMoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTpjYXNlIDI6Y2FzZSA1OnZhciBjPWEuX2RlYnVnT3duZXIsZD1hLl9kZWJ1Z1NvdXJjZTt2YXIgZT11YyhhKTt2YXIgZj1udWxsO2MmJihmPXVjKGMpKTtjPWQ7ZT1cIlxcbiAgICBpbiBcIisoZXx8XCJVbmtub3duXCIpKyhjP1wiIChhdCBcIitjLmZpbGVOYW1lLnJlcGxhY2UoL14uKltcXFxcXFwvXS8sXCJcIikrXCI6XCIrYy5saW5lTnVtYmVyK1wiKVwiOmY/XCIgKGNyZWF0ZWQgYnkgXCIrZitcIilcIjpcIlwiKTticmVhayBhO2RlZmF1bHQ6ZT1cIlwifWIrPWU7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbnZhciB3Yz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8seGM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSx6Yz17fSxBYz17fTtcbmZ1bmN0aW9uIEJjKGEpe2lmKHhjLmNhbGwoQWMsYSkpcmV0dXJuITA7aWYoeGMuY2FsbCh6YyxhKSlyZXR1cm4hMTtpZih3Yy50ZXN0KGEpKXJldHVybiBBY1thXT0hMDt6Y1thXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBDYyhhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIERjKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fENjKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gSShhLGIsYyxkLGUpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWJ9dmFyIEo9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0pbYV09bmV3IEkoYSwwLCExLGEsbnVsbCl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07SltiXT1uZXcgSShiLDEsITEsYVsxXSxudWxsKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0pbYV09bmV3IEkoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtKW2FdPW5ldyBJKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtKW2FdPW5ldyBJKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7SlthXT1uZXcgSShhLDMsITAsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5bXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0pbYV09bmV3IEkoYSw0LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtKW2FdPW5ldyBJKGEsNiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0pbYV09bmV3IEkoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciBFYz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIEZjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKEVjLFxuRmMpO0pbYl09bmV3IEkoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKEVjLEZjKTtKW2JdPW5ldyBJKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKEVjLEZjKTtKW2JdPW5ldyBJKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7Si50YWJJbmRleD1uZXcgSShcInRhYkluZGV4XCIsMSwhMSxcInRhYmluZGV4XCIsbnVsbCk7XG5mdW5jdGlvbiBHYyhhLGIsYyxkKXt2YXIgZT1KLmhhc093blByb3BlcnR5KGIpP0pbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChEYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/QmMoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIEhjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBwKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBJYyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1KYyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEtjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmR2MoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIExjKGEsYil7S2MoYSxiKTt2YXIgYz1KYyhiLnZhbHVlKTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1iLnR5cGUpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP01jKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJk1jKGEsYi50eXBlLEpjKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gTmMoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7dmFyIGQ9YS52YWx1ZTtjfHxiPT09ZHx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9ZnVuY3Rpb24gTWMoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfVxuZnVuY3Rpb24gSmMoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fXZhciBPYz17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiBQYyhhLGIsYyl7YT1ILmdldFBvb2xlZChPYy5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO09iKGMpO1lhKGEpO3JldHVybiBhfXZhciBRYz1udWxsLFJjPW51bGw7ZnVuY3Rpb24gU2MoYSl7SWEoYSwhMSl9ZnVuY3Rpb24gVGMoYSl7dmFyIGI9T2EoYSk7aWYoZGMoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiBVYyhhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBWYz0hMTttLmNhblVzZURPTSYmKFZjPSRiKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO2Z1bmN0aW9uIFdjKCl7UWMmJihRYy5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixYYyksUmM9UWM9bnVsbCl9ZnVuY3Rpb24gWGMoYSl7XCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJlRjKFJjKSYmKGE9UGMoUmMsYSxaYihhKSksV2IoU2MsYSkpfWZ1bmN0aW9uIFljKGEsYixjKXtcImZvY3VzXCI9PT1hPyhXYygpLFFjPWIsUmM9YyxRYy5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixYYykpOlwiYmx1clwiPT09YSYmV2MoKX1mdW5jdGlvbiBaYyhhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBUYyhSYyl9XG5mdW5jdGlvbiAkYyhhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIFRjKGIpfWZ1bmN0aW9uIGFkKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIFRjKGIpfVxudmFyIGJkPXtldmVudFR5cGVzOk9jLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6VmMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP09hKGIpOndpbmRvdyxmPXZvaWQgMCxnPXZvaWQgMCxoPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcInNlbGVjdFwiPT09aHx8XCJpbnB1dFwiPT09aCYmXCJmaWxlXCI9PT1lLnR5cGU/Zj1VYzpZYihlKT9WYz9mPWFkOihmPVpjLGc9WWMpOihoPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1oLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihmPSRjKTtpZihmJiYoZj1mKGEsYikpKXJldHVybiBQYyhmLGMsZCk7ZyYmZyhhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJk1jKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LGNkPUguZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxkZD17QWx0OlwiYWx0S2V5XCIsXG5Db250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBlZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPWRkW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gZmQoKXtyZXR1cm4gZWR9XG52YXIgZ2Q9Y2QuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmZkLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfX0pLGhkPWdkLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksaWQ9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sXG5tb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LGpkPXtldmVudFR5cGVzOmlkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZj1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFmJiYhZSlyZXR1cm4gbnVsbDtlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8XG5lLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/TmEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxrPXZvaWQgMCxuPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPWdkLGg9aWQubW91c2VMZWF2ZSxrPWlkLm1vdXNlRW50ZXIsbj1cIm1vdXNlXCI7ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpZz1oZCxoPWlkLnBvaW50ZXJMZWF2ZSxrPWlkLnBvaW50ZXJFbnRlcixuPVwicG9pbnRlclwiO2E9bnVsbD09Zj9lOk9hKGYpO2U9bnVsbD09Yj9lOk9hKGIpO2g9Zy5nZXRQb29sZWQoaCxmLGMsZCk7aC50eXBlPW4rXCJsZWF2ZVwiO2gudGFyZ2V0PWE7aC5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChrLGIsYyxkKTtjLnR5cGU9bitcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9YTtaYShoLFxuYyxmLGIpO3JldHVybltoLGNdfX07ZnVuY3Rpb24ga2QoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gbGQoYSl7MiE9PWtkKGEpP0EoXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gbWQoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9a2QoYSksMz09PWI/QShcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gbGQoZSksYTtpZihnPT09ZClyZXR1cm4gbGQoZSksYjtnPWcuc2libGluZ31BKFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6QShcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP0EoXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz9BKFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIG5kKGEpe2E9bWQoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBvZChhKXthPW1kKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQmJjQhPT1iLnRhZyliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9dmFyIHBkPUguZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxxZD1ILmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLHJkPWNkLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7XG5mdW5jdGlvbiBzZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciB0ZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sdWQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHZkPWNkLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj10ZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1zZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/dWRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOmZkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP3NkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP3NkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksd2Q9Z2QuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHhkPWNkLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmZkfSkseWQ9SC5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksemQ9Z2QuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSxBZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtmYixcImFuaW1hdGlvbkVuZFwiXSxbZ2IsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sW2hiLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbaWIsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSxCZD17fSxDZD17fTtmdW5jdGlvbiBEZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O0JkW2FdPWI7Q2RbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCJdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIl0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIl0sW1wiZHJvcFwiLFwiZHJvcFwiXSxbXCJmb2N1c1wiLFwiZm9jdXNcIl0sW1wiaW5wdXRcIixcImlucHV0XCJdLFtcImludmFsaWRcIixcImludmFsaWRcIl0sW1wia2V5ZG93blwiLFwia2V5RG93blwiXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIl0sW1wia2V5dXBcIixcImtleVVwXCJdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCJdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIl0sW1wicGFzdGVcIixcInBhc3RlXCJdLFtcInBhdXNlXCIsXCJwYXVzZVwiXSxbXCJwbGF5XCIsXCJwbGF5XCJdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIl0sW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFxuW1wicG9pbnRlcnVwXCIsXCJwb2ludGVyVXBcIl0sW1wicmF0ZWNoYW5nZVwiLFwicmF0ZUNoYW5nZVwiXSxbXCJyZXNldFwiLFwicmVzZXRcIl0sW1wic2Vla2VkXCIsXCJzZWVrZWRcIl0sW1wic3VibWl0XCIsXCJzdWJtaXRcIl0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCJdLFtcInRvdWNoZW5kXCIsXCJ0b3VjaEVuZFwiXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCJdLFtcInZvbHVtZWNoYW5nZVwiLFwidm9sdW1lQ2hhbmdlXCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RkKGEsITApfSk7QWQuZm9yRWFjaChmdW5jdGlvbihhKXtEZChhLCExKX0pO1xudmFyIEVkPXtldmVudFR5cGVzOkJkLGlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZTpmdW5jdGlvbihhKXthPUNkW2FdO3JldHVybiB2b2lkIDAhPT1hJiYhMD09PWEuaXNJbnRlcmFjdGl2ZX0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1DZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PXNkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT12ZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9cmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1nZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxud2Q7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT14ZDticmVhaztjYXNlIGZiOmNhc2UgZ2I6Y2FzZSBoYjphPXBkO2JyZWFrO2Nhc2UgaWI6YT15ZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1jZDticmVhaztjYXNlIFwid2hlZWxcIjphPXpkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9cWQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1oZDticmVhaztkZWZhdWx0OmE9SH1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1lhKGIpO3JldHVybiBifX0sRmQ9RWQuaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlLFxuR2Q9W107ZnVuY3Rpb24gSGQoYSl7dmFyIGI9YS50YXJnZXRJbnN0O2Rve2lmKCFiKXthLmFuY2VzdG9ycy5wdXNoKGIpO2JyZWFrfXZhciBjO2ZvcihjPWI7Yy5yZXR1cm47KWM9Yy5yZXR1cm47Yz0zIT09Yy50YWc/bnVsbDpjLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKCFjKWJyZWFrO2EuYW5jZXN0b3JzLnB1c2goYik7Yj1OYShjKX13aGlsZShiKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyliPWEuYW5jZXN0b3JzW2NdLEphKGEudG9wTGV2ZWxUeXBlLGIsYS5uYXRpdmVFdmVudCxaYihhLm5hdGl2ZUV2ZW50KSl9dmFyIElkPSEwO2Z1bmN0aW9uIEtkKGEpe0lkPSEhYX1mdW5jdGlvbiBLKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KEZkKGEpP0xkOk1kKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9XG5mdW5jdGlvbiBOZChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShGZChhKT9MZDpNZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApfWZ1bmN0aW9uIExkKGEsYil7VGIoTWQsYSxiKX1mdW5jdGlvbiBNZChhLGIpe2lmKElkKXt2YXIgYz1aYihiKTtjPU5hKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09a2QoYyl8fChjPW51bGwpO2lmKEdkLmxlbmd0aCl7dmFyIGQ9R2QucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7V2IoSGQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD5HZC5sZW5ndGgmJkdkLnB1c2goYSl9fX1cbnZhciBPZD17Z2V0IF9lbmFibGVkKCl7cmV0dXJuIElkfSxzZXRFbmFibGVkOktkLGlzRW5hYmxlZDpmdW5jdGlvbigpe3JldHVybiBJZH0sdHJhcEJ1YmJsZWRFdmVudDpLLHRyYXBDYXB0dXJlZEV2ZW50Ok5kLGRpc3BhdGNoRXZlbnQ6TWR9LFBkPXt9LFFkPTAsUmQ9XCJfcmVhY3RMaXN0ZW5lcnNJRFwiKyhcIlwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDIpO2Z1bmN0aW9uIFNkKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLFJkKXx8KGFbUmRdPVFkKyssUGRbYVtSZF1dPXt9KTtyZXR1cm4gUGRbYVtSZF1dfWZ1bmN0aW9uIFRkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIFVkKGEsYil7dmFyIGM9VGQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9VGQoYyl9fWZ1bmN0aW9uIFZkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgV2Q9bS5jYW5Vc2VET00mJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxYZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LFlkPW51bGwsWmQ9bnVsbCwkZD1udWxsLGFlPSExO1xuZnVuY3Rpb24gYmUoYSxiKXtpZihhZXx8bnVsbD09WWR8fFlkIT09ZGEoKSlyZXR1cm4gbnVsbDt2YXIgYz1ZZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZWZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06d2luZG93LmdldFNlbGVjdGlvbj8oYz13aW5kb3cuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk6Yz12b2lkIDA7cmV0dXJuICRkJiZlYSgkZCxjKT9udWxsOigkZD1jLGE9SC5nZXRQb29sZWQoWGQuc2VsZWN0LFpkLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9WWQsWWEoYSksYSl9XG52YXIgY2U9e2V2ZW50VHlwZXM6WGQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9U2QoZSk7Zj1zYS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP09hKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoWWIoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpWWQ9ZSxaZD1iLCRkPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjokZD1aZD1ZZD1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjphZT0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOnJldHVybiBhZT0hMSxiZShjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihXZClicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGJlKGMsZCl9cmV0dXJuIG51bGx9fTtHYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gVGFwRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3dhPVFhLmdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU7eGE9UWEuZ2V0SW5zdGFuY2VGcm9tTm9kZTt5YT1RYS5nZXROb2RlRnJvbUluc3RhbmNlO0dhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46RWQsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmpkLENoYW5nZUV2ZW50UGx1Z2luOmJkLFNlbGVjdEV2ZW50UGx1Z2luOmNlLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46SWJ9KTtcbnZhciBkZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcmVxdWVzdEFuaW1hdGlvbkZyYW1lP3JlcXVlc3RBbmltYXRpb25GcmFtZTp2b2lkIDAsZWU9RGF0ZSxmZT1zZXRUaW1lb3V0LGdlPWNsZWFyVGltZW91dCxoZT12b2lkIDA7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGllPXBlcmZvcm1hbmNlO2hlPWZ1bmN0aW9uKCl7cmV0dXJuIGllLm5vdygpfX1lbHNlIGhlPWZ1bmN0aW9uKCl7cmV0dXJuIGVlLm5vdygpfTt2YXIgamU9dm9pZCAwLGtlPXZvaWQgMDtcbmlmKG0uY2FuVXNlRE9NKXt2YXIgbGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGRlP2RlOmZ1bmN0aW9uKCl7QShcIjI3NlwiKX0sTD1udWxsLG1lPW51bGwsbmU9LTEsb2U9ITEscGU9ITEscWU9MCxyZT0zMyxzZT0zMyx0ZT17ZGlkVGltZW91dDohMSx0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7dmFyIGE9cWUtaGUoKTtyZXR1cm4gMDxhP2E6MH19LHZlPWZ1bmN0aW9uKGEsYil7dmFyIGM9YS5zY2hlZHVsZWRDYWxsYmFjayxkPSExO3RyeXtjKGIpLGQ9ITB9ZmluYWxseXtrZShhKSxkfHwob2U9ITAsd2luZG93LnBvc3RNZXNzYWdlKHVlLFwiKlwiKSl9fSx1ZT1cIl9fcmVhY3RJZGxlQ2FsbGJhY2skXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsZnVuY3Rpb24oYSl7aWYoYS5zb3VyY2U9PT13aW5kb3cmJmEuZGF0YT09PXVlJiYob2U9ITEsbnVsbCE9PUwpKXtpZihudWxsIT09TCl7dmFyIGI9aGUoKTtpZighKC0xPT09XG5uZXx8bmU+Yikpe2E9LTE7Zm9yKHZhciBjPVtdLGQ9TDtudWxsIT09ZDspe3ZhciBlPWQudGltZW91dFRpbWU7LTEhPT1lJiZlPD1iP2MucHVzaChkKTotMSE9PWUmJigtMT09PWF8fGU8YSkmJihhPWUpO2Q9ZC5uZXh0fWlmKDA8Yy5sZW5ndGgpZm9yKHRlLmRpZFRpbWVvdXQ9ITAsYj0wLGQ9Yy5sZW5ndGg7YjxkO2IrKyl2ZShjW2JdLHRlKTtuZT1hfX1mb3IoYT1oZSgpOzA8cWUtYSYmbnVsbCE9PUw7KWE9TCx0ZS5kaWRUaW1lb3V0PSExLHZlKGEsdGUpLGE9aGUoKTtudWxsPT09THx8cGV8fChwZT0hMCxsZSh3ZSkpfX0sITEpO3ZhciB3ZT1mdW5jdGlvbihhKXtwZT0hMTt2YXIgYj1hLXFlK3NlO2I8c2UmJnJlPHNlPyg4PmImJihiPTgpLHNlPWI8cmU/cmU6Yik6cmU9YjtxZT1hK3NlO29lfHwob2U9ITAsd2luZG93LnBvc3RNZXNzYWdlKHVlLFwiKlwiKSl9O2plPWZ1bmN0aW9uKGEsYil7dmFyIGM9LTE7bnVsbCE9YiYmXCJudW1iZXJcIj09PXR5cGVvZiBiLnRpbWVvdXQmJihjPWhlKCkrXG5iLnRpbWVvdXQpO2lmKC0xPT09bmV8fC0xIT09YyYmYzxuZSluZT1jO2E9e3NjaGVkdWxlZENhbGxiYWNrOmEsdGltZW91dFRpbWU6YyxwcmV2Om51bGwsbmV4dDpudWxsfTtudWxsPT09TD9MPWE6KGI9YS5wcmV2PW1lLG51bGwhPT1iJiYoYi5uZXh0PWEpKTttZT1hO3BlfHwocGU9ITAsbGUod2UpKTtyZXR1cm4gYX07a2U9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PWEucHJldnx8TD09PWEpe3ZhciBiPWEubmV4dCxjPWEucHJldjthLm5leHQ9bnVsbDthLnByZXY9bnVsbDtudWxsIT09Yj9udWxsIT09Yz8oYy5uZXh0PWIsYi5wcmV2PWMpOihiLnByZXY9bnVsbCxMPWIpOm51bGwhPT1jPyhjLm5leHQ9bnVsbCxtZT1jKTptZT1MPW51bGx9fX1lbHNle3ZhciB4ZT1uZXcgTWFwO2plPWZ1bmN0aW9uKGEpe3ZhciBiPXtzY2hlZHVsZWRDYWxsYmFjazphLHRpbWVvdXRUaW1lOjAsbmV4dDpudWxsLHByZXY6bnVsbH0sYz1mZShmdW5jdGlvbigpe2Eoe3RpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXtyZXR1cm4gSW5maW5pdHl9LFxuZGlkVGltZW91dDohMX0pfSk7eGUuc2V0KGEsYyk7cmV0dXJuIGJ9O2tlPWZ1bmN0aW9uKGEpe3ZhciBiPXhlLmdldChhLnNjaGVkdWxlZENhbGxiYWNrKTt4ZS5kZWxldGUoYSk7Z2UoYil9fWZ1bmN0aW9uIHllKGEpe3ZhciBiPVwiXCI7YmEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGw9PWF8fFwic3RyaW5nXCIhPT10eXBlb2YgYSYmXCJudW1iZXJcIiE9PXR5cGVvZiBhfHwoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiB6ZShhLGIpe2E9cCh7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPXllKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIEFlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitjO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBCZShhLGIpe3ZhciBjPWIudmFsdWU7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6bnVsbCE9Yz9jOmIuZGVmYXVsdFZhbHVlLHdhc011bHRpcGxlOiEhYi5tdWx0aXBsZX19ZnVuY3Rpb24gQ2UoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP0EoXCI5MVwiKTp2b2lkIDA7cmV0dXJuIHAoe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gRGUoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz9BKFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6QShcIjkzXCIpLGI9YlswXSksYz1cIlwiK2IpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpcIlwiK2N9fVxuZnVuY3Rpb24gRWUoYSxiKXt2YXIgYz1iLnZhbHVlO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9Yi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1iLmRlZmF1bHRWYWx1ZSl9ZnVuY3Rpb24gRmUoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIEdlPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIEhlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gSWUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP0hlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIEplPXZvaWQgMCxLZT1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1HZS5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtKZT1KZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtKZS5pbm5lckhUTUw9XCI8c3ZnPlwiK2IrXCI8L3N2Zz5cIjtmb3IoYj1KZS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBMZShhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIE1lPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxmbG9vZE9wYWNpdHk6ITAsXG5zdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LE5lPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhNZSkuZm9yRWFjaChmdW5jdGlvbihhKXtOZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO01lW2JdPU1lW2FdfSl9KTtcbmZ1bmN0aW9uIE9lKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKTt2YXIgZT1jO3ZhciBmPWJbY107ZT1udWxsPT1mfHxcImJvb2xlYW5cIj09PXR5cGVvZiBmfHxcIlwiPT09Zj9cIlwiOmR8fFwibnVtYmVyXCIhPT10eXBlb2YgZnx8MD09PWZ8fE1lLmhhc093blByb3BlcnR5KGUpJiZNZVtlXT8oXCJcIitmKS50cmltKCk6ZitcInB4XCI7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBQZT1wKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gUWUoYSxiLGMpe2ImJihQZVthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/QShcIjEzN1wiLGEsYygpKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP0EoXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6QShcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/QShcIjYyXCIsYygpKTp2b2lkIDApfVxuZnVuY3Rpb24gUmUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBTZT12LnRoYXRSZXR1cm5zKFwiXCIpO1xuZnVuY3Rpb24gVGUoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9U2QoYSk7Yj1zYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6TmQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOk5kKFwiZm9jdXNcIixhKTtOZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6JGIoZSwhMCkmJk5kKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWpiLmluZGV4T2YoZSkmJksoZSxhKX1jW2VdPSEwfX19XG5mdW5jdGlvbiBVZShhLGIsYyxkKXtjPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2Q9PT1HZS5odG1sJiYoZD1IZShhKSk7ZD09PUdlLmh0bWw/XCJzY3JpcHRcIj09PWE/KGE9Yy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOmE9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzP2MuY3JlYXRlRWxlbWVudChhLHtpczpiLmlzfSk6Yy5jcmVhdGVFbGVtZW50KGEpOmE9Yy5jcmVhdGVFbGVtZW50TlMoZCxhKTtyZXR1cm4gYX1mdW5jdGlvbiBWZShhLGIpe3JldHVybig5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoYSl9XG5mdW5jdGlvbiBXZShhLGIsYyxkKXt2YXIgZT1SZShiLGMpO3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOksoXCJsb2FkXCIsYSk7dmFyIGY9YzticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZj0wO2Y8amIubGVuZ3RoO2YrKylLKGpiW2ZdLGEpO2Y9YzticmVhaztjYXNlIFwic291cmNlXCI6SyhcImVycm9yXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOksoXCJlcnJvclwiLGEpO0soXCJsb2FkXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJmb3JtXCI6SyhcInJlc2V0XCIsYSk7SyhcInN1Ym1pdFwiLGEpO2Y9YzticmVhaztjYXNlIFwiZGV0YWlsc1wiOksoXCJ0b2dnbGVcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImlucHV0XCI6SWMoYSxjKTtmPUhjKGEsYyk7SyhcImludmFsaWRcIixhKTtUZShkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9emUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6QmUoYSxjKTtmPXAoe30sYyx7dmFsdWU6dm9pZCAwfSk7XG5LKFwiaW52YWxpZFwiLGEpO1RlKGQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpEZShhLGMpO2Y9Q2UoYSxjKTtLKFwiaW52YWxpZFwiLGEpO1RlKGQsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0OmY9Y31RZShiLGYsU2UpO3ZhciBnPWYsaDtmb3IoaCBpbiBnKWlmKGcuaGFzT3duUHJvcGVydHkoaCkpe3ZhciBrPWdbaF07XCJzdHlsZVwiPT09aD9PZShhLGssU2UpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmS2UoYSxrKSk6XCJjaGlsZHJlblwiPT09aD9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWJ8fFwiXCIhPT1rKSYmTGUoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJkxlKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYocmEuaGFzT3duUHJvcGVydHkoaCk/bnVsbCE9ayYmVGUoZCxcbmgpOm51bGwhPWsmJkdjKGEsaCxrLGUpKX1zd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Y2MoYSk7TmMoYSxjLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjYyhhKTtGZShhLGMpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1jLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsYy52YWx1ZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFjLm11bHRpcGxlO2I9Yy52YWx1ZTtudWxsIT1iP0FlKGEsISFjLm11bHRpcGxlLGIsITEpOm51bGwhPWMuZGVmYXVsdFZhbHVlJiZBZShhLCEhYy5tdWx0aXBsZSxjLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoYS5vbmNsaWNrPXYpfX1cbmZ1bmN0aW9uIFhlKGEsYixjLGQsZSl7dmFyIGY9bnVsbDtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Yz1IYyhhLGMpO2Q9SGMoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpjPXplKGEsYyk7ZD16ZShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmM9cCh7fSxjLHt2YWx1ZTp2b2lkIDB9KTtkPXAoe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjPUNlKGEsYyk7ZD1DZShhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPXYpfVFlKGIsZCxTZSk7Yj1hPXZvaWQgMDt2YXIgZz1udWxsO2ZvcihhIGluIGMpaWYoIWQuaGFzT3duUHJvcGVydHkoYSkmJmMuaGFzT3duUHJvcGVydHkoYSkmJm51bGwhPWNbYV0paWYoXCJzdHlsZVwiPT09YSl7dmFyIGg9Y1thXTtmb3IoYiBpbiBoKWguaGFzT3duUHJvcGVydHkoYikmJihnfHxcbihnPXt9KSxnW2JdPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1hJiZcImNoaWxkcmVuXCIhPT1hJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YSYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWEmJlwiYXV0b0ZvY3VzXCIhPT1hJiYocmEuaGFzT3duUHJvcGVydHkoYSk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGEsbnVsbCkpO2ZvcihhIGluIGQpe3ZhciBrPWRbYV07aD1udWxsIT1jP2NbYV06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoYSkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09YSlpZihoKXtmb3IoYiBpbiBoKSFoLmhhc093blByb3BlcnR5KGIpfHxrJiZrLmhhc093blByb3BlcnR5KGIpfHwoZ3x8KGc9e30pLGdbYl09XCJcIik7Zm9yKGIgaW4gaylrLmhhc093blByb3BlcnR5KGIpJiZoW2JdIT09a1tiXSYmKGd8fChnPXt9KSxnW2JdPWtbYl0pfWVsc2UgZ3x8KGZ8fChmPVtdKSxmLnB1c2goYSxnKSksXG5nPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWE/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2goYSxcIlwiK2spKTpcImNoaWxkcmVuXCI9PT1hP2g9PT1rfHxcInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2goYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1hJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YSYmKHJhLmhhc093blByb3BlcnR5KGEpPyhudWxsIT1rJiZUZShlLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOihmPWZ8fFtdKS5wdXNoKGEsaykpfWcmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixnKTtyZXR1cm4gZn1cbmZ1bmN0aW9uIFllKGEsYixjLGQsZSl7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJktjKGEsZSk7UmUoYyxkKTtkPVJlKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/T2UoYSxoLFNlKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP0tlKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9MZShhLGgpOkdjKGEsZyxoLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpMYyhhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkVlKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU9dm9pZCAwLGI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/QWUoYSwhIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP1xuQWUoYSwhIWUubXVsdGlwbGUsZS5kZWZhdWx0VmFsdWUsITApOkFlKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1cbmZ1bmN0aW9uIFplKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6SyhcImxvYWRcIixhKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZD0wO2Q8amIubGVuZ3RoO2QrKylLKGpiW2RdLGEpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpLKFwiZXJyb3JcIixhKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpLKFwiZXJyb3JcIixhKTtLKFwibG9hZFwiLGEpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6SyhcInJlc2V0XCIsYSk7SyhcInN1Ym1pdFwiLGEpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6SyhcInRvZ2dsZVwiLGEpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkljKGEsYyk7SyhcImludmFsaWRcIixhKTtUZShlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOkJlKGEsYyk7SyhcImludmFsaWRcIixhKTtUZShlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6RGUoYSxjKSxLKFwiaW52YWxpZFwiLGEpLFRlKGUsXCJvbkNoYW5nZVwiKX1RZShiLFxuYyxTZSk7ZD1udWxsO2Zvcih2YXIgZiBpbiBjKWlmKGMuaGFzT3duUHJvcGVydHkoZikpe3ZhciBnPWNbZl07XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGc/YS50ZXh0Q29udGVudCE9PWcmJihkPVtcImNoaWxkcmVuXCIsZ10pOlwibnVtYmVyXCI9PT10eXBlb2YgZyYmYS50ZXh0Q29udGVudCE9PVwiXCIrZyYmKGQ9W1wiY2hpbGRyZW5cIixcIlwiK2ddKTpyYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9ZyYmVGUoZSxmKX1zd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Y2MoYSk7TmMoYSxjLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjYyhhKTtGZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5vbkNsaWNrJiYoYS5vbmNsaWNrPXYpfXJldHVybiBkfWZ1bmN0aW9uICRlKGEsYil7cmV0dXJuIGEubm9kZVZhbHVlIT09Yn1cbnZhciBhZj17Y3JlYXRlRWxlbWVudDpVZSxjcmVhdGVUZXh0Tm9kZTpWZSxzZXRJbml0aWFsUHJvcGVydGllczpXZSxkaWZmUHJvcGVydGllczpYZSx1cGRhdGVQcm9wZXJ0aWVzOlllLGRpZmZIeWRyYXRlZFByb3BlcnRpZXM6WmUsZGlmZkh5ZHJhdGVkVGV4dDokZSx3YXJuRm9yVW5tYXRjaGVkVGV4dDpmdW5jdGlvbigpe30sd2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlRWxlbWVudDpmdW5jdGlvbigpe30sd2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlVGV4dDpmdW5jdGlvbigpe30sd2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50OmZ1bmN0aW9uKCl7fSx3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZFRleHQ6ZnVuY3Rpb24oKXt9LHJlc3RvcmVDb250cm9sbGVkU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpMYyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO1xuYz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1QYShkKTtlP3ZvaWQgMDpBKFwiOTBcIik7ZGMoZCk7TGMoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkVlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZBZShhLCEhYy5tdWx0aXBsZSxiLCExKX19fSxiZj1udWxsLGNmPW51bGw7ZnVuY3Rpb24gZGYoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gZWYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJzdHJpbmdcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgZmY9aGUsZ2Y9amUsaGY9a2U7ZnVuY3Rpb24gamYoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBrZihhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgbGY9W10sbWY9LTE7ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19XG5mdW5jdGlvbiBNKGEpezA+bWZ8fChhLmN1cnJlbnQ9bGZbbWZdLGxmW21mXT1udWxsLG1mLS0pfWZ1bmN0aW9uIE4oYSxiKXttZisrO2xmW21mXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIG9mPW5mKGhhKSxPPW5mKCExKSxwZj1oYTtmdW5jdGlvbiBxZihhKXtyZXR1cm4gcmYoYSk/cGY6b2YuY3VycmVudH1cbmZ1bmN0aW9uIHNmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gaGE7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gcmYoYSl7cmV0dXJuIDI9PT1hLnRhZyYmbnVsbCE9YS50eXBlLmNoaWxkQ29udGV4dFR5cGVzfWZ1bmN0aW9uIHRmKGEpe3JmKGEpJiYoTShPLGEpLE0ob2YsYSkpfWZ1bmN0aW9uIHVmKGEpe00oTyxhKTtNKG9mLGEpfVxuZnVuY3Rpb24gdmYoYSxiLGMpe29mLmN1cnJlbnQhPT1oYT9BKFwiMTY4XCIpOnZvaWQgMDtOKG9mLGIsYSk7TihPLGMsYSl9ZnVuY3Rpb24gd2YoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZSxkPWEudHlwZS5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGI7Yz1jLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBjKWUgaW4gZD92b2lkIDA6QShcIjEwOFwiLHVjKGEpfHxcIlVua25vd25cIixlKTtyZXR1cm4gcCh7fSxiLGMpfWZ1bmN0aW9uIHhmKGEpe2lmKCFyZihhKSlyZXR1cm4hMTt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fGhhO3BmPW9mLmN1cnJlbnQ7TihvZixiLGEpO04oTyxPLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiB5ZihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2M/dm9pZCAwOkEoXCIxNjlcIik7aWYoYil7dmFyIGQ9d2YoYSxwZik7Yy5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1kO00oTyxhKTtNKG9mLGEpO04ob2YsZCxhKX1lbHNlIE0oTyxhKTtOKE8sYixhKX1cbmZ1bmN0aW9uIHpmKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9XG5mdW5jdGlvbiBBZihhLGIsYyl7dmFyIGQ9YS5hbHRlcm5hdGU7bnVsbD09PWQ/KGQ9bmV3IHpmKGEudGFnLGIsYS5rZXksYS5tb2RlKSxkLnR5cGU9YS50eXBlLGQuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGQuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9ZCk6KGQucGVuZGluZ1Byb3BzPWIsZC5lZmZlY3RUYWc9MCxkLm5leHRFZmZlY3Q9bnVsbCxkLmZpcnN0RWZmZWN0PW51bGwsZC5sYXN0RWZmZWN0PW51bGwpO2QuZXhwaXJhdGlvblRpbWU9YztkLmNoaWxkPWEuY2hpbGQ7ZC5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztkLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2QudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtkLnNpYmxpbmc9YS5zaWJsaW5nO2QuaW5kZXg9YS5pbmRleDtkLnJlZj1hLnJlZjtyZXR1cm4gZH1cbmZ1bmN0aW9uIEJmKGEsYixjKXt2YXIgZD1hLnR5cGUsZT1hLmtleTthPWEucHJvcHM7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpdmFyIGY9ZC5wcm90b3R5cGUmJmQucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ/MjowO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkKWY9NTtlbHNlIHN3aXRjaChkKXtjYXNlIGljOnJldHVybiBDZihhLmNoaWxkcmVuLGIsYyxlKTtjYXNlIHBjOmY9MTE7Ynw9MzticmVhaztjYXNlIGpjOmY9MTE7Ynw9MjticmVhaztjYXNlIGtjOnJldHVybiBkPW5ldyB6ZigxNSxhLGUsYnw0KSxkLnR5cGU9a2MsZC5leHBpcmF0aW9uVGltZT1jLGQ7Y2FzZSByYzpmPTE2O2J8PTI7YnJlYWs7ZGVmYXVsdDphOntzd2l0Y2goXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZD9kLiQkdHlwZW9mOm51bGwpe2Nhc2UgbGM6Zj0xMzticmVhayBhO2Nhc2UgbWM6Zj0xMjticmVhayBhO2Nhc2UgcWM6Zj0xNDticmVhayBhO2RlZmF1bHQ6QShcIjEzMFwiLG51bGw9PWQ/XG5kOnR5cGVvZiBkLFwiXCIpfWY9dm9pZCAwfX1iPW5ldyB6ZihmLGEsZSxiKTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9ZnVuY3Rpb24gQ2YoYSxiLGMsZCl7YT1uZXcgemYoMTAsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBEZihhLGIsYyl7YT1uZXcgemYoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIEVmKGEsYixjKXtiPW5ldyB6Zig0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIEZmKGEsYixjKXtiPW5ldyB6ZigzLG51bGwsbnVsbCxiPzM6MCk7YT17Y3VycmVudDpiLGNvbnRhaW5lckluZm86YSxwZW5kaW5nQ2hpbGRyZW46bnVsbCxlYXJsaWVzdFBlbmRpbmdUaW1lOjAsbGF0ZXN0UGVuZGluZ1RpbWU6MCxlYXJsaWVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0UGluZ2VkVGltZTowLHBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTowLGZpbmlzaGVkV29yazpudWxsLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxyZW1haW5pbmdFeHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTtyZXR1cm4gYi5zdGF0ZU5vZGU9YX12YXIgR2Y9bnVsbCxIZj1udWxsO2Z1bmN0aW9uIElmKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19XG5mdW5jdGlvbiBKZihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtHZj1JZihmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7SGY9SWYoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH1mdW5jdGlvbiBLZihhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgR2YmJkdmKGEpfWZ1bmN0aW9uIExmKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBIZiYmSGYoYSl9dmFyIE1mPSExO1xuZnVuY3Rpb24gTmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOjAsYmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gT2YoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEuZXhwaXJhdGlvblRpbWUsYmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBQZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGwsbmV4dEVmZmVjdDpudWxsfX1mdW5jdGlvbiBRZihhLGIsYyl7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKTtpZigwPT09YS5leHBpcmF0aW9uVGltZXx8YS5leHBpcmF0aW9uVGltZT5jKWEuZXhwaXJhdGlvblRpbWU9Y31cbmZ1bmN0aW9uIFJmKGEsYixjKXt2YXIgZD1hLmFsdGVybmF0ZTtpZihudWxsPT09ZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt2YXIgZj1udWxsO251bGw9PT1lJiYoZT1hLnVwZGF0ZVF1ZXVlPU5mKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZT1hLnVwZGF0ZVF1ZXVlLGY9ZC51cGRhdGVRdWV1ZSxudWxsPT09ZT9udWxsPT09Zj8oZT1hLnVwZGF0ZVF1ZXVlPU5mKGEubWVtb2l6ZWRTdGF0ZSksZj1kLnVwZGF0ZVF1ZXVlPU5mKGQubWVtb2l6ZWRTdGF0ZSkpOmU9YS51cGRhdGVRdWV1ZT1PZihmKTpudWxsPT09ZiYmKGY9ZC51cGRhdGVRdWV1ZT1PZihlKSk7bnVsbD09PWZ8fGU9PT1mP1FmKGUsYixjKTpudWxsPT09ZS5sYXN0VXBkYXRlfHxudWxsPT09Zi5sYXN0VXBkYXRlPyhRZihlLGIsYyksUWYoZixiLGMpKTooUWYoZSxiLGMpLGYubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIFNmKGEsYixjKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO2Q9bnVsbD09PWQ/YS51cGRhdGVRdWV1ZT1OZihhLm1lbW9pemVkU3RhdGUpOlRmKGEsZCk7bnVsbD09PWQubGFzdENhcHR1cmVkVXBkYXRlP2QuZmlyc3RDYXB0dXJlZFVwZGF0ZT1kLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihkLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsZC5sYXN0Q2FwdHVyZWRVcGRhdGU9Yik7aWYoMD09PWQuZXhwaXJhdGlvblRpbWV8fGQuZXhwaXJhdGlvblRpbWU+YylkLmV4cGlyYXRpb25UaW1lPWN9ZnVuY3Rpb24gVGYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9T2YoYikpO3JldHVybiBifVxuZnVuY3Rpb24gVWYoYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSAzOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDY0O2Nhc2UgMDphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gcCh7fSxkLGUpO2Nhc2UgMjpNZj0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIFZmKGEsYixjLGQsZSl7TWY9ITE7aWYoISgwPT09Yi5leHBpcmF0aW9uVGltZXx8Yi5leHBpcmF0aW9uVGltZT5lKSl7Yj1UZihhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGs9Yi5maXJzdFVwZGF0ZSxuPWY7bnVsbCE9PWs7KXt2YXIgcj1rLmV4cGlyYXRpb25UaW1lO2lmKHI+ZSl7aWYobnVsbD09PWcmJihnPWssZj1uKSwwPT09aHx8aD5yKWg9cn1lbHNlIG49VWYoYSxiLGssbixjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9azooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RFZmZlY3Q9aykpO2s9ay5uZXh0fXI9bnVsbDtmb3Ioaz1iLmZpcnN0Q2FwdHVyZWRVcGRhdGU7bnVsbCE9PWs7KXt2YXIgdz1rLmV4cGlyYXRpb25UaW1lO2lmKHc+ZSl7aWYobnVsbD09PXImJihyPWssbnVsbD09PVxuZyYmKGY9bikpLDA9PT1ofHxoPncpaD13fWVsc2Ugbj1VZihhLGIsayxuLGMsZCksbnVsbCE9PWsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1rOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9aykpO2s9ay5uZXh0fW51bGw9PT1nJiYoYi5sYXN0VXBkYXRlPW51bGwpO251bGw9PT1yP2IubGFzdENhcHR1cmVkVXBkYXRlPW51bGw6YS5lZmZlY3RUYWd8PTMyO251bGw9PT1nJiZudWxsPT09ciYmKGY9bik7Yi5iYXNlU3RhdGU9ZjtiLmZpcnN0VXBkYXRlPWc7Yi5maXJzdENhcHR1cmVkVXBkYXRlPXI7Yi5leHBpcmF0aW9uVGltZT1oO2EubWVtb2l6ZWRTdGF0ZT1ufX1cbmZ1bmN0aW9uIFdmKGEsYil7XCJmdW5jdGlvblwiIT09dHlwZW9mIGE/QShcIjE5MVwiLGEpOnZvaWQgMDthLmNhbGwoYil9XG5mdW5jdGlvbiBYZihhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7YT1iLmZpcnN0RWZmZWN0O2ZvcihiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO251bGwhPT1hOyl7dmFyIGQ9YS5jYWxsYmFjaztudWxsIT09ZCYmKGEuY2FsbGJhY2s9bnVsbCxXZihkLGMpKTthPWEubmV4dEVmZmVjdH1hPWIuZmlyc3RDYXB0dXJlZEVmZmVjdDtmb3IoYi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGw7bnVsbCE9PWE7KWI9YS5jYWxsYmFjayxudWxsIT09YiYmKGEuY2FsbGJhY2s9bnVsbCxXZihiLGMpKSxhPWEubmV4dEVmZmVjdH1cbmZ1bmN0aW9uIFlmKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6dmMoYil9fXZhciBaZj1uZihudWxsKSwkZj1uZihudWxsKSxhZz1uZigwKTtmdW5jdGlvbiBiZyhhKXt2YXIgYj1hLnR5cGUuX2NvbnRleHQ7TihhZyxiLl9jaGFuZ2VkQml0cyxhKTtOKCRmLGIuX2N1cnJlbnRWYWx1ZSxhKTtOKFpmLGEsYSk7Yi5fY3VycmVudFZhbHVlPWEucGVuZGluZ1Byb3BzLnZhbHVlO2IuX2NoYW5nZWRCaXRzPWEuc3RhdGVOb2RlfWZ1bmN0aW9uIGNnKGEpe3ZhciBiPWFnLmN1cnJlbnQsYz0kZi5jdXJyZW50O00oWmYsYSk7TSgkZixhKTtNKGFnLGEpO2E9YS50eXBlLl9jb250ZXh0O2EuX2N1cnJlbnRWYWx1ZT1jO2EuX2NoYW5nZWRCaXRzPWJ9dmFyIGRnPXt9LGVnPW5mKGRnKSxmZz1uZihkZyksZ2c9bmYoZGcpO2Z1bmN0aW9uIGhnKGEpe2E9PT1kZz9BKFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIGpnKGEsYil7TihnZyxiLGEpO04oZmcsYSxhKTtOKGVnLGRnLGEpO3ZhciBjPWIubm9kZVR5cGU7c3dpdGNoKGMpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOkllKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpjPTg9PT1jP2IucGFyZW50Tm9kZTpiLGI9Yy5uYW1lc3BhY2VVUkl8fG51bGwsYz1jLnRhZ05hbWUsYj1JZShiLGMpfU0oZWcsYSk7TihlZyxiLGEpfWZ1bmN0aW9uIGtnKGEpe00oZWcsYSk7TShmZyxhKTtNKGdnLGEpfWZ1bmN0aW9uIGxnKGEpe2ZnLmN1cnJlbnQ9PT1hJiYoTShlZyxhKSxNKGZnLGEpKX1mdW5jdGlvbiBtZyhhLGIsYyl7dmFyIGQ9YS5tZW1vaXplZFN0YXRlO2I9YihjLGQpO2Q9bnVsbD09PWJ8fHZvaWQgMD09PWI/ZDpwKHt9LGQsYik7YS5tZW1vaXplZFN0YXRlPWQ7YT1hLnVwZGF0ZVF1ZXVlO251bGwhPT1hJiYwPT09YS5leHBpcmF0aW9uVGltZSYmKGEuYmFzZVN0YXRlPWQpfVxudmFyIHFnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09a2QoYSk6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9bmcoKTtkPW9nKGQsYSk7dmFyIGU9UGYoZCk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO1JmKGEsZSxkKTtwZyhhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1uZygpO2Q9b2coZCxhKTt2YXIgZT1QZihkKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtSZihhLGUsZCk7cGcoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9bmcoKTtjPW9nKGMsYSk7dmFyIGQ9UGYoYyk7ZC50YWc9Mjt2b2lkIDAhPT1cbmImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtSZihhLGQsYyk7cGcoYSxjKX19O2Z1bmN0aW9uIHJnKGEsYixjLGQsZSxmKXt2YXIgZz1hLnN0YXRlTm9kZTthPWEudHlwZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5zaG91bGRDb21wb25lbnRVcGRhdGU/Zy5zaG91bGRDb21wb25lbnRVcGRhdGUoYyxlLGYpOmEucHJvdG90eXBlJiZhLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hZWEoYixjKXx8IWVhKGQsZSk6ITB9XG5mdW5jdGlvbiBzZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmcWcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiB0ZyhhLGIpe3ZhciBjPWEudHlwZSxkPWEuc3RhdGVOb2RlLGU9YS5wZW5kaW5nUHJvcHMsZj1xZihhKTtkLnByb3BzPWU7ZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZC5yZWZzPWhhO2QuY29udGV4dD1zZihhLGYpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKFZmKGEsZixlLGQsYiksZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKG1nKGEsZixlKSxkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuY29tcG9uZW50V2lsbE1vdW50fHwoYz1kLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxNb3VudCYmXG5kLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmQuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGMhPT1kLnN0YXRlJiZxZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGQsZC5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJihWZihhLGYsZSxkLGIpLGQuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHVnPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiB2ZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigyIT09Yy50YWc/QShcIjExMFwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6QShcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcz09PWhhP2QucmVmcz17fTpkLnJlZnM7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/QShcIjE0OFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOkEoXCIyNTRcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIHdnKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZBKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiB4ZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPUFmKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9RGYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLnR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9dmcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPUJmKGMsYS5tb2RlLGQpO2QucmVmPXZnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIG4oYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVxuRWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcihhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHwxMCE9PWIudGFnKXJldHVybiBiPUNmKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiB3KGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1EZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBnYzpyZXR1cm4gYz1CZihiLGEubW9kZSxjKSxjLnJlZj12ZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgaGM6cmV0dXJuIGI9RWYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHVnKGIpfHx0YyhiKSlyZXR1cm4gYj1DZihiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPVxuYSxiO3dnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gUChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBnYzpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PWljP3IoYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSBoYzpyZXR1cm4gYy5rZXk9PT1lP24oYSxiLGMsZCk6bnVsbH1pZih1ZyhjKXx8dGMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6cihhLGIsYyxkLG51bGwpO3dnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gbmMoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7XG5pZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBnYzpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09aWM/cihiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgaGM6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLG4oYixhLGQsZSl9aWYodWcoZCl8fHRjKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLHIoYixhLGQsZSxudWxsKTt3ZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIEpkKGUsZyxoLGspe2Zvcih2YXIgdT1udWxsLHg9bnVsbCx0PWcscT1nPTAsbj1udWxsO251bGwhPT10JiZxPGgubGVuZ3RoO3ErKyl7dC5pbmRleD5xPyhuPXQsdD1udWxsKTpuPXQuc2libGluZzt2YXIgbD1QKGUsdCxoW3FdLGspO2lmKG51bGw9PT1sKXtudWxsPT09dCYmKHQ9bik7YnJlYWt9YSYmdCYmbnVsbD09PWwuYWx0ZXJuYXRlJiZiKGUsXG50KTtnPWYobCxnLHEpO251bGw9PT14P3U9bDp4LnNpYmxpbmc9bDt4PWw7dD1ufWlmKHE9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHQpLHU7aWYobnVsbD09PXQpe2Zvcig7cTxoLmxlbmd0aDtxKyspaWYodD13KGUsaFtxXSxrKSlnPWYodCxnLHEpLG51bGw9PT14P3U9dDp4LnNpYmxpbmc9dCx4PXQ7cmV0dXJuIHV9Zm9yKHQ9ZChlLHQpO3E8aC5sZW5ndGg7cSsrKWlmKG49bmModCxlLHEsaFtxXSxrKSlhJiZudWxsIT09bi5hbHRlcm5hdGUmJnQuZGVsZXRlKG51bGw9PT1uLmtleT9xOm4ua2V5KSxnPWYobixnLHEpLG51bGw9PT14P3U9bjp4LnNpYmxpbmc9bix4PW47YSYmdC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gdX1mdW5jdGlvbiBFKGUsZyxoLGspe3ZhciB1PXRjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB1P0EoXCIxNTBcIik6dm9pZCAwO2g9dS5jYWxsKGgpO251bGw9PWg/QShcIjE1MVwiKTp2b2lkIDA7Zm9yKHZhciB0PXU9bnVsbCxuPWcseD1cbmc9MCx5PW51bGwsbD1oLm5leHQoKTtudWxsIT09biYmIWwuZG9uZTt4KyssbD1oLm5leHQoKSl7bi5pbmRleD54Pyh5PW4sbj1udWxsKTp5PW4uc2libGluZzt2YXIgcj1QKGUsbixsLnZhbHVlLGspO2lmKG51bGw9PT1yKXtufHwobj15KTticmVha31hJiZuJiZudWxsPT09ci5hbHRlcm5hdGUmJmIoZSxuKTtnPWYocixnLHgpO251bGw9PT10P3U9cjp0LnNpYmxpbmc9cjt0PXI7bj15fWlmKGwuZG9uZSlyZXR1cm4gYyhlLG4pLHU7aWYobnVsbD09PW4pe2Zvcig7IWwuZG9uZTt4KyssbD1oLm5leHQoKSlsPXcoZSxsLnZhbHVlLGspLG51bGwhPT1sJiYoZz1mKGwsZyx4KSxudWxsPT09dD91PWw6dC5zaWJsaW5nPWwsdD1sKTtyZXR1cm4gdX1mb3Iobj1kKGUsbik7IWwuZG9uZTt4KyssbD1oLm5leHQoKSlsPW5jKG4sZSx4LGwudmFsdWUsayksbnVsbCE9PWwmJihhJiZudWxsIT09bC5hbHRlcm5hdGUmJm4uZGVsZXRlKG51bGw9PT1sLmtleT94Omwua2V5KSxnPWYobCxnLHgpLG51bGw9PT1cbnQ/dT1sOnQuc2libGluZz1sLHQ9bCk7YSYmbi5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gdX1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09aWMmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbj1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKG4pc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgZ2M6YTp7bj1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1uKWlmKDEwPT09ay50YWc/Zi50eXBlPT09aWM6ay50eXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnR5cGU9PT1pYz9mLnByb3BzLmNoaWxkcmVuOmYucHJvcHMsaCk7ZC5yZWY9dmcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09aWM/KGQ9Q2YoZi5wcm9wcy5jaGlsZHJlbixcbmEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9QmYoZixhLm1vZGUsaCksaC5yZWY9dmcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIGhjOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSxoKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9RWYoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49XG5hLGE9ZCk6KGMoYSxkKSxkPURmKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKHVnKGYpKXJldHVybiBKZChhLGQsZixoKTtpZih0YyhmKSlyZXR1cm4gRShhLGQsZixoKTtuJiZ3ZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDI6Y2FzZSAxOmg9YS50eXBlLEEoXCIxNTJcIixoLmRpc3BsYXlOYW1lfHxoLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciB5Zz14ZyghMCksemc9eGcoITEpLEFnPW51bGwsQmc9bnVsbCxDZz0hMTtmdW5jdGlvbiBEZyhhLGIpe3ZhciBjPW5ldyB6Zig1LG51bGwsbnVsbCwwKTtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIEVnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIEZnKGEpe2lmKENnKXt2YXIgYj1CZztpZihiKXt2YXIgYz1iO2lmKCFFZyhhLGIpKXtiPWpmKGMpO2lmKCFifHwhRWcoYSxiKSl7YS5lZmZlY3RUYWd8PTI7Q2c9ITE7QWc9YTtyZXR1cm59RGcoQWcsYyl9QWc9YTtCZz1rZihiKX1lbHNlIGEuZWZmZWN0VGFnfD0yLENnPSExLEFnPWF9fVxuZnVuY3Rpb24gR2coYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWEucmV0dXJuO0FnPWF9ZnVuY3Rpb24gSGcoYSl7aWYoYSE9PUFnKXJldHVybiExO2lmKCFDZylyZXR1cm4gR2coYSksQ2c9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFlZihiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9Qmc7YjspRGcoYSxiKSxiPWpmKGIpO0dnKGEpO0JnPUFnP2pmKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIElnKCl7Qmc9QWc9bnVsbDtDZz0hMX1mdW5jdGlvbiBRKGEsYixjKXtKZyhhLGIsYyxiLmV4cGlyYXRpb25UaW1lKX1mdW5jdGlvbiBKZyhhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP3pnKGIsbnVsbCxjLGQpOnlnKGIsYS5jaGlsZCxjLGQpfVxuZnVuY3Rpb24gS2coYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBMZyhhLGIsYyxkLGUpe0tnKGEsYik7dmFyIGY9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWMmJiFmKXJldHVybiBkJiZ5ZihiLCExKSxSKGEsYik7Yz1iLnN0YXRlTm9kZTtlYy5jdXJyZW50PWI7dmFyIGc9Zj9udWxsOmMucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7ZiYmKEpnKGEsYixudWxsLGUpLGIuY2hpbGQ9bnVsbCk7SmcoYSxiLGcsZSk7Yi5tZW1vaXplZFN0YXRlPWMuc3RhdGU7Yi5tZW1vaXplZFByb3BzPWMucHJvcHM7ZCYmeWYoYiwhMCk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBNZyhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P3ZmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJnZmKGEsYi5jb250ZXh0LCExKTtqZyhhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXt2YXIgZT1hLmNoaWxkO251bGwhPT1lJiYoZS5yZXR1cm49YSk7Zm9yKDtudWxsIT09ZTspe3N3aXRjaChlLnRhZyl7Y2FzZSAxMjp2YXIgZj1lLnN0YXRlTm9kZXwwO2lmKGUudHlwZT09PWImJjAhPT0oZiZjKSl7Zm9yKGY9ZTtudWxsIT09Zjspe3ZhciBnPWYuYWx0ZXJuYXRlO2lmKDA9PT1mLmV4cGlyYXRpb25UaW1lfHxmLmV4cGlyYXRpb25UaW1lPmQpZi5leHBpcmF0aW9uVGltZT1kLG51bGwhPT1nJiYoMD09PWcuZXhwaXJhdGlvblRpbWV8fGcuZXhwaXJhdGlvblRpbWU+ZCkmJihnLmV4cGlyYXRpb25UaW1lPWQpO2Vsc2UgaWYobnVsbCE9PWcmJigwPT09Zy5leHBpcmF0aW9uVGltZXx8Zy5leHBpcmF0aW9uVGltZT5kKSlnLmV4cGlyYXRpb25UaW1lPWQ7ZWxzZSBicmVhaztmPWYucmV0dXJufWY9bnVsbH1lbHNlIGY9ZS5jaGlsZDticmVhaztjYXNlIDEzOmY9ZS50eXBlPT09YS50eXBlP251bGw6ZS5jaGlsZDticmVhaztkZWZhdWx0OmY9XG5lLmNoaWxkfWlmKG51bGwhPT1mKWYucmV0dXJuPWU7ZWxzZSBmb3IoZj1lO251bGwhPT1mOyl7aWYoZj09PWEpe2Y9bnVsbDticmVha31lPWYuc2libGluZztpZihudWxsIT09ZSl7ZS5yZXR1cm49Zi5yZXR1cm47Zj1lO2JyZWFrfWY9Zi5yZXR1cm59ZT1mfX1cbmZ1bmN0aW9uIFJnKGEsYixjKXt2YXIgZD1iLnR5cGUuX2NvbnRleHQsZT1iLnBlbmRpbmdQcm9wcyxmPWIubWVtb2l6ZWRQcm9wcyxnPSEwO2lmKE8uY3VycmVudClnPSExO2Vsc2UgaWYoZj09PWUpcmV0dXJuIGIuc3RhdGVOb2RlPTAsYmcoYiksUihhLGIpO3ZhciBoPWUudmFsdWU7Yi5tZW1vaXplZFByb3BzPWU7aWYobnVsbD09PWYpaD0xMDczNzQxODIzO2Vsc2UgaWYoZi52YWx1ZT09PWUudmFsdWUpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiZnKXJldHVybiBiLnN0YXRlTm9kZT0wLGJnKGIpLFIoYSxiKTtoPTB9ZWxzZXt2YXIgaz1mLnZhbHVlO2lmKGs9PT1oJiYoMCE9PWt8fDEvaz09PTEvaCl8fGshPT1rJiZoIT09aCl7aWYoZi5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJmcpcmV0dXJuIGIuc3RhdGVOb2RlPTAsYmcoYiksUihhLGIpO2g9MH1lbHNlIGlmKGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGssXG5oKToxMDczNzQxODIzLGh8PTAsMD09PWgpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiZnKXJldHVybiBiLnN0YXRlTm9kZT0wLGJnKGIpLFIoYSxiKX1lbHNlIE5nKGIsZCxoLGMpfWIuc3RhdGVOb2RlPWg7YmcoYik7UShhLGIsZS5jaGlsZHJlbik7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gUihhLGIpe251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD9BKFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO3ZhciBjPUFmKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPUFmKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIFNnKGEsYixjKXtpZigwPT09Yi5leHBpcmF0aW9uVGltZXx8Yi5leHBpcmF0aW9uVGltZT5jKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzpNZyhiKTticmVhaztjYXNlIDI6eGYoYik7YnJlYWs7Y2FzZSA0OmpnKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMzpiZyhiKX1yZXR1cm4gbnVsbH1zd2l0Y2goYi50YWcpe2Nhc2UgMDpudWxsIT09YT9BKFwiMTU1XCIpOnZvaWQgMDt2YXIgZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPXFmKGIpO2Y9c2YoYixmKTtkPWQoZSxmKTtiLmVmZmVjdFRhZ3w9MTtcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5yZW5kZXImJnZvaWQgMD09PWQuJCR0eXBlb2Y/KGY9Yi50eXBlLGIudGFnPTIsYi5tZW1vaXplZFN0YXRlPW51bGwhPT1kLnN0YXRlJiZ2b2lkIDAhPT1kLnN0YXRlP2Quc3RhdGU6bnVsbCxmPWYuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGYmJm1nKGIsZixlKSxlPXhmKGIpLGQudXBkYXRlcj1xZyxiLnN0YXRlTm9kZT1kLGQuX3JlYWN0SW50ZXJuYWxGaWJlcj1iLHRnKGIsYyksYT1MZyhhLGIsITAsZSxjKSk6KGIudGFnPTEsUShhLGIsZCksYi5tZW1vaXplZFByb3BzPWUsYT1iLmNoaWxkKTtyZXR1cm4gYTtjYXNlIDE6cmV0dXJuIGU9Yi50eXBlLGM9Yi5wZW5kaW5nUHJvcHMsTy5jdXJyZW50fHxiLm1lbW9pemVkUHJvcHMhPT1jPyhkPXFmKGIpLGQ9c2YoYixkKSxlPWUoYyxkKSxiLmVmZmVjdFRhZ3w9MSxRKGEsYixlKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpOmE9UihhLGIpLGE7Y2FzZSAyOmU9eGYoYik7aWYobnVsbD09PWEpaWYobnVsbD09PWIuc3RhdGVOb2RlKXt2YXIgZz1iLnBlbmRpbmdQcm9wcyxoPWIudHlwZTtkPXFmKGIpO3ZhciBrPTI9PT1iLnRhZyYmbnVsbCE9Yi50eXBlLmNvbnRleHRUeXBlcztmPWs/c2YoYixkKTpoYTtnPW5ldyBoKGcsZik7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1cbmcuc3RhdGUmJnZvaWQgMCE9PWcuc3RhdGU/Zy5zdGF0ZTpudWxsO2cudXBkYXRlcj1xZztiLnN0YXRlTm9kZT1nO2cuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO2smJihrPWIuc3RhdGVOb2RlLGsuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1kLGsuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7dGcoYixjKTtkPSEwfWVsc2V7aD1iLnR5cGU7ZD1iLnN0YXRlTm9kZTtrPWIubWVtb2l6ZWRQcm9wcztmPWIucGVuZGluZ1Byb3BzO2QucHJvcHM9azt2YXIgbj1kLmNvbnRleHQ7Zz1xZihiKTtnPXNmKGIsZyk7dmFyIHI9aC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJ8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fFxuKGshPT1mfHxuIT09ZykmJnNnKGIsZCxmLGcpO01mPSExO3ZhciB3PWIubWVtb2l6ZWRTdGF0ZTtuPWQuc3RhdGU9dzt2YXIgUD1iLnVwZGF0ZVF1ZXVlO251bGwhPT1QJiYoVmYoYixQLGYsZCxjKSxuPWIubWVtb2l6ZWRTdGF0ZSk7ayE9PWZ8fHchPT1ufHxPLmN1cnJlbnR8fE1mPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgciYmKG1nKGIscixmKSxuPWIubWVtb2l6ZWRTdGF0ZSksKGs9TWZ8fHJnKGIsayxmLHcsbixnKSk/KGh8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxNb3VudCYmZC5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZkLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQmJlxuKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1mLGIubWVtb2l6ZWRTdGF0ZT1uKSxkLnByb3BzPWYsZC5zdGF0ZT1uLGQuY29udGV4dD1nLGQ9ayk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgaD1iLnR5cGUsZD1iLnN0YXRlTm9kZSxmPWIubWVtb2l6ZWRQcm9wcyxrPWIucGVuZGluZ1Byb3BzLGQucHJvcHM9ZixuPWQuY29udGV4dCxnPXFmKGIpLGc9c2YoYixnKSxyPWguZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHxcbihmIT09a3x8biE9PWcpJiZzZyhiLGQsayxnKSxNZj0hMSxuPWIubWVtb2l6ZWRTdGF0ZSx3PWQuc3RhdGU9bixQPWIudXBkYXRlUXVldWUsbnVsbCE9PVAmJihWZihiLFAsayxkLGMpLHc9Yi5tZW1vaXplZFN0YXRlKSxmIT09a3x8biE9PXd8fE8uY3VycmVudHx8TWY/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiByJiYobWcoYixyLGspLHc9Yi5tZW1vaXplZFN0YXRlKSwocj1NZnx8cmcoYixmLGssbix3LGcpKT8oaHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsVXBkYXRlJiZkLmNvbXBvbmVudFdpbGxVcGRhdGUoayx3LGcpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZkLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGssdyxnKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkVXBkYXRlJiZcbihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudERpZFVwZGF0ZXx8Zj09PWEubWVtb2l6ZWRQcm9wcyYmbj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8Zj09PWEubWVtb2l6ZWRQcm9wcyYmbj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1rLGIubWVtb2l6ZWRTdGF0ZT13KSxkLnByb3BzPWssZC5zdGF0ZT13LGQuY29udGV4dD1nLGQ9cik6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmNvbXBvbmVudERpZFVwZGF0ZXx8Zj09PWEubWVtb2l6ZWRQcm9wcyYmbj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XG5mPT09YS5tZW1vaXplZFByb3BzJiZuPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIExnKGEsYixkLGUsYyk7Y2FzZSAzOk1nKGIpO2U9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09ZSlpZihkPWIubWVtb2l6ZWRTdGF0ZSxkPW51bGwhPT1kP2QuZWxlbWVudDpudWxsLFZmKGIsZSxiLnBlbmRpbmdQcm9wcyxudWxsLGMpLGU9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQsZT09PWQpSWcoKSxhPVIoYSxiKTtlbHNle2Q9Yi5zdGF0ZU5vZGU7aWYoZD0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZC5oeWRyYXRlKUJnPWtmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLEFnPWIsZD1DZz0hMDtkPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPXpnKGIsbnVsbCxlLGMpKTooSWcoKSxRKGEsYixlKSk7YT1iLmNoaWxkfWVsc2UgSWcoKSxhPVIoYSxiKTtyZXR1cm4gYTtjYXNlIDU6YTp7aGcoZ2cuY3VycmVudCk7ZT1oZyhlZy5jdXJyZW50KTtkPUllKGUsXG5iLnR5cGUpO2UhPT1kJiYoTihmZyxiLGIpLE4oZWcsZCxiKSk7bnVsbD09PWEmJkZnKGIpO2U9Yi50eXBlO2s9Yi5tZW1vaXplZFByb3BzO2Q9Yi5wZW5kaW5nUHJvcHM7Zj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbDtpZighTy5jdXJyZW50JiZrPT09ZCl7aWYoaz1iLm1vZGUmMSYmISFkLmhpZGRlbiliLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7aWYoIWt8fDEwNzM3NDE4MjMhPT1jKXthPVIoYSxiKTticmVhayBhfX1rPWQuY2hpbGRyZW47ZWYoZSxkKT9rPW51bGw6ZiYmZWYoZSxmKSYmKGIuZWZmZWN0VGFnfD0xNik7S2coYSxiKTsxMDczNzQxODIzIT09YyYmYi5tb2RlJjEmJmQuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYi5tZW1vaXplZFByb3BzPWQsYT1udWxsKTooUShhLGIsayksYi5tZW1vaXplZFByb3BzPWQsYT1iLmNoaWxkKX1yZXR1cm4gYTtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZGZyhiKSxiLm1lbW9pemVkUHJvcHM9Yi5wZW5kaW5nUHJvcHMsXG5udWxsO2Nhc2UgMTY6cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBqZyhiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGU9Yi5wZW5kaW5nUHJvcHMsTy5jdXJyZW50fHxiLm1lbW9pemVkUHJvcHMhPT1lPyhudWxsPT09YT9iLmNoaWxkPXlnKGIsbnVsbCxlLGMpOlEoYSxiLGUpLGIubWVtb2l6ZWRQcm9wcz1lLGE9Yi5jaGlsZCk6YT1SKGEsYiksYTtjYXNlIDE0OnJldHVybiBlPWIudHlwZS5yZW5kZXIsYz1iLnBlbmRpbmdQcm9wcyxkPWIucmVmLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09Y3x8ZCE9PShudWxsIT09YT9hLnJlZjpudWxsKT8oZT1lKGMsZCksUShhLGIsZSksYi5tZW1vaXplZFByb3BzPWMsYT1iLmNoaWxkKTphPVIoYSxiKSxhO2Nhc2UgMTA6cmV0dXJuIGM9Yi5wZW5kaW5nUHJvcHMsTy5jdXJyZW50fHxiLm1lbW9pemVkUHJvcHMhPT1jPyhRKGEsYixjKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpOmE9UihhLGIpLGE7Y2FzZSAxMTpyZXR1cm4gYz1cbmIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLE8uY3VycmVudHx8bnVsbCE9PWMmJmIubWVtb2l6ZWRQcm9wcyE9PWM/KFEoYSxiLGMpLGIubWVtb2l6ZWRQcm9wcz1jLGE9Yi5jaGlsZCk6YT1SKGEsYiksYTtjYXNlIDE1OnJldHVybiBjPWIucGVuZGluZ1Byb3BzLGIubWVtb2l6ZWRQcm9wcz09PWM/YT1SKGEsYik6KFEoYSxiLGMuY2hpbGRyZW4pLGIubWVtb2l6ZWRQcm9wcz1jLGE9Yi5jaGlsZCksYTtjYXNlIDEzOnJldHVybiBSZyhhLGIsYyk7Y2FzZSAxMjphOmlmKGQ9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsaz1iLm1lbW9pemVkUHJvcHMsZT1kLl9jdXJyZW50VmFsdWUsZz1kLl9jaGFuZ2VkQml0cyxPLmN1cnJlbnR8fDAhPT1nfHxrIT09Zil7Yi5tZW1vaXplZFByb3BzPWY7aD1mLnVuc3RhYmxlX29ic2VydmVkQml0cztpZih2b2lkIDA9PT1ofHxudWxsPT09aCloPTEwNzM3NDE4MjM7Yi5zdGF0ZU5vZGU9aDtpZigwIT09KGcmaCkpTmcoYixkLGcsYyk7ZWxzZSBpZihrPT09Zil7YT1cblIoYSxiKTticmVhayBhfWM9Zi5jaGlsZHJlbjtjPWMoZSk7Yi5lZmZlY3RUYWd8PTE7UShhLGIsYyk7YT1iLmNoaWxkfWVsc2UgYT1SKGEsYik7cmV0dXJuIGE7ZGVmYXVsdDpBKFwiMTU2XCIpfX1mdW5jdGlvbiBUZyhhKXthLmVmZmVjdFRhZ3w9NH12YXIgVWc9dm9pZCAwLFZnPXZvaWQgMCxXZz12b2lkIDA7VWc9ZnVuY3Rpb24oKXt9O1ZnPWZ1bmN0aW9uKGEsYixjKXsoYi51cGRhdGVRdWV1ZT1jKSYmVGcoYil9O1dnPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZUZyhiKX07XG5mdW5jdGlvbiBYZyhhLGIpe3ZhciBjPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnJldHVybiBudWxsO2Nhc2UgMjpyZXR1cm4gdGYoYiksbnVsbDtjYXNlIDM6a2coYik7dWYoYik7dmFyIGQ9Yi5zdGF0ZU5vZGU7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKUhnKGIpLGIuZWZmZWN0VGFnJj0tMztVZyhiKTtyZXR1cm4gbnVsbDtjYXNlIDU6bGcoYik7ZD1oZyhnZy5jdXJyZW50KTt2YXIgZT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHMsZz1iLnN0YXRlTm9kZSxoPWhnKGVnLmN1cnJlbnQpO2c9WGUoZyxlLGYsYyxkKTtWZyhhLGIsZyxlLGYsYyxkLGgpO2EucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNle2lmKCFjKXJldHVybiBudWxsPT09Yi5zdGF0ZU5vZGU/XG5BKFwiMTY2XCIpOnZvaWQgMCxudWxsO2E9aGcoZWcuY3VycmVudCk7aWYoSGcoYikpYz1iLnN0YXRlTm9kZSxlPWIudHlwZSxmPWIubWVtb2l6ZWRQcm9wcyxjW0NdPWIsY1tNYV09ZixkPVplKGMsZSxmLGEsZCksYi51cGRhdGVRdWV1ZT1kLG51bGwhPT1kJiZUZyhiKTtlbHNle2E9VWUoZSxjLGQsYSk7YVtDXT1iO2FbTWFdPWM7YTpmb3IoZj1iLmNoaWxkO251bGwhPT1mOyl7aWYoNT09PWYudGFnfHw2PT09Zi50YWcpYS5hcHBlbmRDaGlsZChmLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Zi50YWcmJm51bGwhPT1mLmNoaWxkKXtmLmNoaWxkLnJldHVybj1mO2Y9Zi5jaGlsZDtjb250aW51ZX1pZihmPT09YilicmVhaztmb3IoO251bGw9PT1mLnNpYmxpbmc7KXtpZihudWxsPT09Zi5yZXR1cm58fGYucmV0dXJuPT09YilicmVhayBhO2Y9Zi5yZXR1cm59Zi5zaWJsaW5nLnJldHVybj1mLnJldHVybjtmPWYuc2libGluZ31XZShhLGUsYyxkKTtkZihlLGMpJiZUZyhiKTtiLnN0YXRlTm9kZT1cbmF9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKVdnKGEsYixhLm1lbW9pemVkUHJvcHMsYyk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGMpcmV0dXJuIG51bGw9PT1iLnN0YXRlTm9kZT9BKFwiMTY2XCIpOnZvaWQgMCxudWxsO2Q9aGcoZ2cuY3VycmVudCk7aGcoZWcuY3VycmVudCk7SGcoYik/KGQ9Yi5zdGF0ZU5vZGUsYz1iLm1lbW9pemVkUHJvcHMsZFtDXT1iLCRlKGQsYykmJlRnKGIpKTooZD1WZShjLGQpLGRbQ109YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTY6cmV0dXJuIG51bGw7Y2FzZSAxMDpyZXR1cm4gbnVsbDtjYXNlIDExOnJldHVybiBudWxsO2Nhc2UgMTU6cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBrZyhiKSxVZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGNnKGIpLG51bGw7Y2FzZSAxMjpyZXR1cm4gbnVsbDtjYXNlIDA6QShcIjE2N1wiKTtcbmRlZmF1bHQ6QShcIjE1NlwiKX19ZnVuY3Rpb24gWWcoYSxiKXt2YXIgYz1iLnNvdXJjZTtudWxsPT09Yi5zdGFjayYmbnVsbCE9PWMmJnZjKGMpO251bGwhPT1jJiZ1YyhjKTtiPWIudmFsdWU7bnVsbCE9PWEmJjI9PT1hLnRhZyYmdWMoYSk7dHJ5e2ImJmIuc3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZ3x8Y29uc29sZS5lcnJvcihiKX1jYXRjaChkKXtkJiZkLnN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmd8fGNvbnNvbGUuZXJyb3IoZCl9fWZ1bmN0aW9uIFpnKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpeyRnKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIGFoKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBMZiYmTGYoYSk7c3dpdGNoKGEudGFnKXtjYXNlIDI6WmcoYSk7dmFyIGI9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChjKXskZyhhLGMpfWJyZWFrO2Nhc2UgNTpaZyhhKTticmVhaztjYXNlIDQ6YmgoYSl9fWZ1bmN0aW9uIGNoKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gZGgoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoY2goYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufUEoXCIxNjBcIik7Yz12b2lkIDB9dmFyIGQ9Yj12b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtkPSExO2JyZWFrO2Nhc2UgMzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDpBKFwiMTYxXCIpfWMuZWZmZWN0VGFnJjE2JiYoTGUoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGNoKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19Zm9yKHZhciBlPWE7Oyl7aWYoNT09PWUudGFnfHw2PT09ZS50YWcpaWYoYylpZihkKXt2YXIgZj1iLGc9ZS5zdGF0ZU5vZGUsaD1jOzg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZyxoKTpmLmluc2VydEJlZm9yZShnLGgpfWVsc2UgYi5pbnNlcnRCZWZvcmUoZS5zdGF0ZU5vZGUsYyk7ZWxzZSBkPyhmPWIsZz1lLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsZik6Zi5hcHBlbmRDaGlsZChnKSk6Yi5hcHBlbmRDaGlsZChlLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09ZS50YWcmJm51bGwhPT1lLmNoaWxkKXtlLmNoaWxkLnJldHVybj1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1cbmUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gYmgoYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iLnJldHVybjthOmZvcig7Oyl7bnVsbD09PWM/QShcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6ZD1jLnN0YXRlTm9kZTtlPSExO2JyZWFrIGE7Y2FzZSAzOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGE7Y2FzZSA0OmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGF9Yz1jLnJldHVybn1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXthOmZvcih2YXIgZj1iLGc9Zjs7KWlmKGFoKGcpLG51bGwhPT1nLmNoaWxkJiY0IT09Zy50YWcpZy5jaGlsZC5yZXR1cm49ZyxnPWcuY2hpbGQ7ZWxzZXtpZihnPT09ZilicmVhaztmb3IoO251bGw9PT1nLnNpYmxpbmc7KXtpZihudWxsPT09Zy5yZXR1cm58fGcucmV0dXJuPT09ZilicmVhayBhO2c9Zy5yZXR1cm59Zy5zaWJsaW5nLnJldHVybj1nLnJldHVybjtnPWcuc2libGluZ31lP1xuKGY9ZCxnPWIuc3RhdGVOb2RlLDg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnKTpmLnJlbW92ZUNoaWxkKGcpKTpkLnJlbW92ZUNoaWxkKGIuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1iLnRhZz9kPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86YWgoYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gZWgoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMjpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJihjW01hXT1kLFllKGMsZixlLGEsZCkpfWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/QShcIjE2MlwiKTp2b2lkIDA7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6YnJlYWs7Y2FzZSAxNTpicmVhaztjYXNlIDE2OmJyZWFrO2RlZmF1bHQ6QShcIjE2M1wiKX19ZnVuY3Rpb24gZmgoYSxiLGMpe2M9UGYoYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7Z2goZCk7WWcoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBoaChhLGIsYyl7Yz1QZihjKTtjLnRhZz0zO3ZhciBkPWEuc3RhdGVOb2RlO251bGwhPT1kJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtudWxsPT09aWg/aWg9bmV3IFNldChbdGhpc10pOmloLmFkZCh0aGlzKTt2YXIgYz1iLnZhbHVlLGQ9Yi5zdGFjaztZZyhhLGIpO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYyx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWQ/ZDpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIGpoKGEsYixjLGQsZSxmKXtjLmVmZmVjdFRhZ3w9NTEyO2MuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGw7ZD1ZZihkLGMpO2E9Yjtkb3tzd2l0Y2goYS50YWcpe2Nhc2UgMzphLmVmZmVjdFRhZ3w9MTAyNDtkPWZoKGEsZCxmKTtTZihhLGQsZik7cmV0dXJuO2Nhc2UgMjppZihiPWQsYz1hLnN0YXRlTm9kZSwwPT09KGEuZWZmZWN0VGFnJjY0KSYmbnVsbCE9PWMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWlofHwhaWguaGFzKGMpKSl7YS5lZmZlY3RUYWd8PTEwMjQ7ZD1oaChhLGIsZik7U2YoYSxkLGYpO3JldHVybn19YT1hLnJldHVybn13aGlsZShudWxsIT09YSl9XG5mdW5jdGlvbiBraChhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMjp0ZihhKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiYxMDI0PyhhLmVmZmVjdFRhZz1iJi0xMDI1fDY0LGEpOm51bGw7Y2FzZSAzOnJldHVybiBrZyhhKSx1ZihhKSxiPWEuZWZmZWN0VGFnLGImMTAyND8oYS5lZmZlY3RUYWc9YiYtMTAyNXw2NCxhKTpudWxsO2Nhc2UgNTpyZXR1cm4gbGcoYSksbnVsbDtjYXNlIDE2OnJldHVybiBiPWEuZWZmZWN0VGFnLGImMTAyND8oYS5lZmZlY3RUYWc9YiYtMTAyNXw2NCxhKTpudWxsO2Nhc2UgNDpyZXR1cm4ga2coYSksbnVsbDtjYXNlIDEzOnJldHVybiBjZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fXZhciBsaD1mZigpLG1oPTIsbmg9bGgsb2g9MCxwaD0wLHFoPSExLFM9bnVsbCxyaD1udWxsLFQ9MCxzaD0tMSx0aD0hMSxVPW51bGwsdWg9ITEsdmg9ITEsaWg9bnVsbDtcbmZ1bmN0aW9uIHdoKCl7aWYobnVsbCE9PVMpZm9yKHZhciBhPVMucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMjp0ZihiKTticmVhaztjYXNlIDM6a2coYik7dWYoYik7YnJlYWs7Y2FzZSA1OmxnKGIpO2JyZWFrO2Nhc2UgNDprZyhiKTticmVhaztjYXNlIDEzOmNnKGIpfWE9YS5yZXR1cm59cmg9bnVsbDtUPTA7c2g9LTE7dGg9ITE7Uz1udWxsO3ZoPSExfVxuZnVuY3Rpb24geGgoYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmNTEyKSl7Yj1YZyhiLGEsVCk7dmFyIGU9YTtpZigxMDczNzQxODIzPT09VHx8MTA3Mzc0MTgyMyE9PWUuZXhwaXJhdGlvblRpbWUpe3ZhciBmPTA7c3dpdGNoKGUudGFnKXtjYXNlIDM6Y2FzZSAyOnZhciBnPWUudXBkYXRlUXVldWU7bnVsbCE9PWcmJihmPWcuZXhwaXJhdGlvblRpbWUpfWZvcihnPWUuY2hpbGQ7bnVsbCE9PWc7KTAhPT1nLmV4cGlyYXRpb25UaW1lJiYoMD09PWZ8fGY+Zy5leHBpcmF0aW9uVGltZSkmJihmPWcuZXhwaXJhdGlvblRpbWUpLGc9Zy5zaWJsaW5nO2UuZXhwaXJhdGlvblRpbWU9Zn1pZihudWxsIT09YilyZXR1cm4gYjtudWxsIT09YyYmMD09PShjLmVmZmVjdFRhZyY1MTIpJiYobnVsbD09PWMuZmlyc3RFZmZlY3QmJihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJlxuKG51bGwhPT1jLmxhc3RFZmZlY3QmJihjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxjLmxhc3RFZmZlY3Q9YS5sYXN0RWZmZWN0KSwxPGEuZWZmZWN0VGFnJiYobnVsbCE9PWMubGFzdEVmZmVjdD9jLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hOmMuZmlyc3RFZmZlY3Q9YSxjLmxhc3RFZmZlY3Q9YSkpO2lmKG51bGwhPT1kKXJldHVybiBkO2lmKG51bGwhPT1jKWE9YztlbHNle3ZoPSEwO2JyZWFrfX1lbHNle2E9a2goYSx0aCxUKTtpZihudWxsIT09YSlyZXR1cm4gYS5lZmZlY3RUYWcmPTUxMSxhO251bGwhPT1jJiYoYy5maXJzdEVmZmVjdD1jLmxhc3RFZmZlY3Q9bnVsbCxjLmVmZmVjdFRhZ3w9NTEyKTtpZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiB5aChhKXt2YXIgYj1TZyhhLmFsdGVybmF0ZSxhLFQpO251bGw9PT1iJiYoYj14aChhKSk7ZWMuY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gemgoYSxiLGMpe3FoP0EoXCIyNDNcIik6dm9pZCAwO3FoPSEwO2lmKGIhPT1UfHxhIT09cmh8fG51bGw9PT1TKXdoKCkscmg9YSxUPWIsc2g9LTEsUz1BZihyaC5jdXJyZW50LG51bGwsVCksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZD0hMTt0aD0hY3x8VDw9bWg7ZG97dHJ5e2lmKGMpZm9yKDtudWxsIT09UyYmIUFoKCk7KVM9eWgoUyk7ZWxzZSBmb3IoO251bGwhPT1TOylTPXloKFMpfWNhdGNoKGYpe2lmKG51bGw9PT1TKWQ9ITAsZ2goZik7ZWxzZXtudWxsPT09Uz9BKFwiMjcxXCIpOnZvaWQgMDtjPVM7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpe2Q9ITA7Z2goZik7YnJlYWt9amgoYSxlLGMsZix0aCxULG5oKTtTPXhoKGMpfX1icmVha313aGlsZSgxKTtxaD0hMTtpZihkKXJldHVybiBudWxsO2lmKG51bGw9PT1TKXtpZih2aClyZXR1cm4gYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YixhLmN1cnJlbnQuYWx0ZXJuYXRlO3RoP0EoXCIyNjJcIik6XG52b2lkIDA7MDw9c2gmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgYj1hLmN1cnJlbnQuZXhwaXJhdGlvblRpbWU7MCE9PWImJigwPT09YS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZXx8YS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZTxiKSYmQmgoYSxiKX0sc2gpO0NoKGEuY3VycmVudC5leHBpcmF0aW9uVGltZSl9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiAkZyhhLGIpe3ZhciBjO2E6e3FoJiYhdWg/QShcIjI2M1wiKTp2b2lkIDA7Zm9yKGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMjp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21DYXRjaHx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09aWh8fCFpaC5oYXMoZCkpKXthPVlmKGIsYSk7YT1oaChjLGEsMSk7UmYoYyxhLDEpO3BnKGMsMSk7Yz12b2lkIDA7YnJlYWsgYX1icmVhaztjYXNlIDM6YT1ZZihiLGEpO2E9ZmgoYyxhLDEpO1JmKGMsYSwxKTtwZyhjLDEpO2M9dm9pZCAwO2JyZWFrIGF9Yz1jLnJldHVybn0zPT09YS50YWcmJihjPVlmKGIsYSksYz1maChhLGMsMSksUmYoYSxjLDEpLHBnKGEsMSkpO2M9dm9pZCAwfXJldHVybiBjfVxuZnVuY3Rpb24gRGgoKXt2YXIgYT0yKzI1KigoKG5nKCktMis1MDApLzI1fDApKzEpO2E8PW9oJiYoYT1vaCsxKTtyZXR1cm4gb2g9YX1mdW5jdGlvbiBvZyhhLGIpe2E9MCE9PXBoP3BoOnFoP3VoPzE6VDpiLm1vZGUmMT9FaD8yKzEwKigoKGEtMisxNSkvMTB8MCkrMSk6MisyNSooKChhLTIrNTAwKS8yNXwwKSsxKToxO0VoJiYoMD09PUZofHxhPkZoKSYmKEZoPWEpO3JldHVybiBhfVxuZnVuY3Rpb24gcGcoYSxiKXtmb3IoO251bGwhPT1hOyl7aWYoMD09PWEuZXhwaXJhdGlvblRpbWV8fGEuZXhwaXJhdGlvblRpbWU+YilhLmV4cGlyYXRpb25UaW1lPWI7bnVsbCE9PWEuYWx0ZXJuYXRlJiYoMD09PWEuYWx0ZXJuYXRlLmV4cGlyYXRpb25UaW1lfHxhLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZT5iKSYmKGEuYWx0ZXJuYXRlLmV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1hLnJldHVybilpZigzPT09YS50YWcpe3ZhciBjPWEuc3RhdGVOb2RlOyFxaCYmMCE9PVQmJmI8VCYmd2goKTt2YXIgZD1jLmN1cnJlbnQuZXhwaXJhdGlvblRpbWU7cWgmJiF1aCYmcmg9PT1jfHxCaChjLGQpO0doPkhoJiZBKFwiMTg1XCIpfWVsc2UgYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gbmcoKXtuaD1mZigpLWxoO3JldHVybiBtaD0obmgvMTB8MCkrMn1cbmZ1bmN0aW9uIEloKGEpe3ZhciBiPXBoO3BoPTIrMjUqKCgobmcoKS0yKzUwMCkvMjV8MCkrMSk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtwaD1ifX1mdW5jdGlvbiBKaChhLGIsYyxkLGUpe3ZhciBmPXBoO3BoPTE7dHJ5e3JldHVybiBhKGIsYyxkLGUpfWZpbmFsbHl7cGg9Zn19dmFyIEtoPW51bGwsVj1udWxsLExoPTAsTWg9dm9pZCAwLFc9ITEsWD1udWxsLFk9MCxGaD0wLE5oPSExLE9oPSExLFBoPW51bGwsUWg9bnVsbCxaPSExLFJoPSExLEVoPSExLFNoPW51bGwsSGg9MUUzLEdoPTAsVGg9MTtmdW5jdGlvbiBVaChhKXtpZigwIT09TGgpe2lmKGE+TGgpcmV0dXJuO251bGwhPT1NaCYmaGYoTWgpfXZhciBiPWZmKCktbGg7TGg9YTtNaD1nZihWaCx7dGltZW91dDoxMCooYS0yKS1ifSl9XG5mdW5jdGlvbiBCaChhLGIpe2lmKG51bGw9PT1hLm5leHRTY2hlZHVsZWRSb290KWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YixudWxsPT09Vj8oS2g9Vj1hLGEubmV4dFNjaGVkdWxlZFJvb3Q9YSk6KFY9Vi5uZXh0U2NoZWR1bGVkUm9vdD1hLFYubmV4dFNjaGVkdWxlZFJvb3Q9S2gpO2Vsc2V7dmFyIGM9YS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZTtpZigwPT09Y3x8YjxjKWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9Yn1XfHwoWj9SaCYmKFg9YSxZPTEsV2goYSwxLCExKSk6MT09PWI/WGgoKTpVaChiKSl9XG5mdW5jdGlvbiBZaCgpe3ZhciBhPTAsYj1udWxsO2lmKG51bGwhPT1WKWZvcih2YXIgYz1WLGQ9S2g7bnVsbCE9PWQ7KXt2YXIgZT1kLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lO2lmKDA9PT1lKXtudWxsPT09Y3x8bnVsbD09PVY/QShcIjI0NFwiKTp2b2lkIDA7aWYoZD09PWQubmV4dFNjaGVkdWxlZFJvb3Qpe0toPVY9ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgaWYoZD09PUtoKUtoPWU9ZC5uZXh0U2NoZWR1bGVkUm9vdCxWLm5leHRTY2hlZHVsZWRSb290PWUsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Vsc2UgaWYoZD09PVYpe1Y9YztWLm5leHRTY2hlZHVsZWRSb290PUtoO2QubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGMubmV4dFNjaGVkdWxlZFJvb3Q9ZC5uZXh0U2NoZWR1bGVkUm9vdCxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZD1jLm5leHRTY2hlZHVsZWRSb290fWVsc2V7aWYoMD09PWF8fGU8YSlhPWUsYj1kO2lmKGQ9PT1WKWJyZWFrO1xuYz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19Yz1YO251bGwhPT1jJiZjPT09YiYmMT09PWE/R2grKzpHaD0wO1g9YjtZPWF9ZnVuY3Rpb24gVmgoYSl7WmgoMCwhMCxhKX1mdW5jdGlvbiBYaCgpe1poKDEsITEsbnVsbCl9ZnVuY3Rpb24gWmgoYSxiLGMpe1FoPWM7WWgoKTtpZihiKWZvcig7bnVsbCE9PVgmJjAhPT1ZJiYoMD09PWF8fGE+PVkpJiYoIU5ofHxuZygpPj1ZKTspbmcoKSxXaChYLFksIU5oKSxZaCgpO2Vsc2UgZm9yKDtudWxsIT09WCYmMCE9PVkmJigwPT09YXx8YT49WSk7KVdoKFgsWSwhMSksWWgoKTtudWxsIT09UWgmJihMaD0wLE1oPW51bGwpOzAhPT1ZJiZVaChZKTtRaD1udWxsO05oPSExOyRoKCl9ZnVuY3Rpb24gYWkoYSxiKXtXP0EoXCIyNTNcIik6dm9pZCAwO1g9YTtZPWI7V2goYSxiLCExKTtYaCgpOyRoKCl9XG5mdW5jdGlvbiAkaCgpe0doPTA7aWYobnVsbCE9PVNoKXt2YXIgYT1TaDtTaD1udWxsO2Zvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7T2h8fChPaD0hMCxQaD1kKX19fWlmKE9oKXRocm93IGE9UGgsUGg9bnVsbCxPaD0hMSxhO31mdW5jdGlvbiBXaChhLGIsYyl7Vz9BKFwiMjQ1XCIpOnZvaWQgMDtXPSEwO2M/KGM9YS5maW5pc2hlZFdvcmssbnVsbCE9PWM/YmkoYSxjLGIpOihjPXpoKGEsYiwhMCksbnVsbCE9PWMmJihBaCgpP2EuZmluaXNoZWRXb3JrPWM6YmkoYSxjLGIpKSkpOihjPWEuZmluaXNoZWRXb3JrLG51bGwhPT1jP2JpKGEsYyxiKTooYz16aChhLGIsITEpLG51bGwhPT1jJiZiaShhLGMsYikpKTtXPSExfVxuZnVuY3Rpb24gYmkoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU8PWMmJihudWxsPT09U2g/U2g9W2RdOlNoLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDt1aD1xaD0hMDtjPWIuc3RhdGVOb2RlO2MuY3VycmVudD09PWI/QShcIjE3N1wiKTp2b2lkIDA7ZD1jLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTswPT09ZD9BKFwiMjYxXCIpOnZvaWQgMDtjLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO25nKCk7ZWMuY3VycmVudD1udWxsO2lmKDE8Yi5lZmZlY3RUYWcpaWYobnVsbCE9PWIubGFzdEVmZmVjdCl7Yi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yjt2YXIgZT1iLmZpcnN0RWZmZWN0fWVsc2UgZT1iO2Vsc2UgZT1iLmZpcnN0RWZmZWN0O2JmPUlkO3ZhciBmPWRhKCk7aWYoVmQoZikpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluXG5mKXZhciBnPXtzdGFydDpmLnNlbGVjdGlvblN0YXJ0LGVuZDpmLnNlbGVjdGlvbkVuZH07ZWxzZSBhOnt2YXIgaD13aW5kb3cuZ2V0U2VsZWN0aW9uJiZ3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7aWYoaCYmMCE9PWgucmFuZ2VDb3VudCl7Zz1oLmFuY2hvck5vZGU7dmFyIGs9aC5hbmNob3JPZmZzZXQsbj1oLmZvY3VzTm9kZTtoPWguZm9jdXNPZmZzZXQ7dHJ5e2cubm9kZVR5cGUsbi5ub2RlVHlwZX1jYXRjaChXYSl7Zz1udWxsO2JyZWFrIGF9dmFyIHI9MCx3PS0xLFA9LTEsbmM9MCxKZD0wLEU9Zix0PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgeDs7KXtFIT09Z3x8MCE9PWsmJjMhPT1FLm5vZGVUeXBlfHwodz1yK2spO0UhPT1ufHwwIT09aCYmMyE9PUUubm9kZVR5cGV8fChQPXIraCk7Mz09PUUubm9kZVR5cGUmJihyKz1FLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oeD1FLmZpcnN0Q2hpbGQpKWJyZWFrO3Q9RTtFPXh9Zm9yKDs7KXtpZihFPT09ZilicmVhayBiO3Q9PT1nJiZcbisrbmM9PT1rJiYodz1yKTt0PT09biYmKytKZD09PWgmJihQPXIpO2lmKG51bGwhPT0oeD1FLm5leHRTaWJsaW5nKSlicmVhaztFPXQ7dD1FLnBhcmVudE5vZGV9RT14fWc9LTE9PT13fHwtMT09PVA/bnVsbDp7c3RhcnQ6dyxlbmQ6UH19ZWxzZSBnPW51bGx9Zz1nfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBnPW51bGw7Y2Y9e2ZvY3VzZWRFbGVtOmYsc2VsZWN0aW9uUmFuZ2U6Z307S2QoITEpO2ZvcihVPWU7bnVsbCE9PVU7KXtmPSExO2c9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1VOyl7aWYoVS5lZmZlY3RUYWcmMjU2KXt2YXIgdT1VLmFsdGVybmF0ZTtrPVU7c3dpdGNoKGsudGFnKXtjYXNlIDI6aWYoay5lZmZlY3RUYWcmMjU2JiZudWxsIT09dSl7dmFyIHk9dS5tZW1vaXplZFByb3BzLEQ9dS5tZW1vaXplZFN0YXRlLGphPWsuc3RhdGVOb2RlO2phLnByb3BzPWsubWVtb2l6ZWRQcm9wcztqYS5zdGF0ZT1rLm1lbW9pemVkU3RhdGU7dmFyIG5pPWphLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKHksXG5EKTtqYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1uaX1icmVhaztjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6YnJlYWs7ZGVmYXVsdDpBKFwiMTYzXCIpfX1VPVUubmV4dEVmZmVjdH19Y2F0Y2goV2Epe2Y9ITAsZz1XYX1mJiYobnVsbD09PVU/QShcIjE3OFwiKTp2b2lkIDAsJGcoVSxnKSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9Zm9yKFU9ZTtudWxsIT09VTspe3U9ITE7eT12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVU7KXt2YXIgcT1VLmVmZmVjdFRhZztxJjE2JiZMZShVLnN0YXRlTm9kZSxcIlwiKTtpZihxJjEyOCl7dmFyIHo9VS5hbHRlcm5hdGU7aWYobnVsbCE9PXope3ZhciBsPXoucmVmO251bGwhPT1sJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGw/bChudWxsKTpsLmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChxJjE0KXtjYXNlIDI6ZGgoVSk7VS5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpkaChVKTtVLmVmZmVjdFRhZyY9LTM7ZWgoVS5hbHRlcm5hdGUsXG5VKTticmVhaztjYXNlIDQ6ZWgoVS5hbHRlcm5hdGUsVSk7YnJlYWs7Y2FzZSA4OkQ9VSxiaChEKSxELnJldHVybj1udWxsLEQuY2hpbGQ9bnVsbCxELmFsdGVybmF0ZSYmKEQuYWx0ZXJuYXRlLmNoaWxkPW51bGwsRC5hbHRlcm5hdGUucmV0dXJuPW51bGwpfVU9VS5uZXh0RWZmZWN0fX1jYXRjaChXYSl7dT0hMCx5PVdhfXUmJihudWxsPT09VT9BKFwiMTc4XCIpOnZvaWQgMCwkZyhVLHkpLG51bGwhPT1VJiYoVT1VLm5leHRFZmZlY3QpKX1sPWNmO3o9ZGEoKTtxPWwuZm9jdXNlZEVsZW07dT1sLnNlbGVjdGlvblJhbmdlO2lmKHohPT1xJiZmYShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscSkpe251bGwhPT11JiZWZChxKSYmKHo9dS5zdGFydCxsPXUuZW5kLHZvaWQgMD09PWwmJihsPXopLFwic2VsZWN0aW9uU3RhcnRcImluIHE/KHEuc2VsZWN0aW9uU3RhcnQ9eixxLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihsLHEudmFsdWUubGVuZ3RoKSk6d2luZG93LmdldFNlbGVjdGlvbiYmKHo9d2luZG93LmdldFNlbGVjdGlvbigpLFxueT1xW2xiKCldLmxlbmd0aCxsPU1hdGgubWluKHUuc3RhcnQseSksdT12b2lkIDA9PT11LmVuZD9sOk1hdGgubWluKHUuZW5kLHkpLCF6LmV4dGVuZCYmbD51JiYoeT11LHU9bCxsPXkpLHk9VWQocSxsKSxEPVVkKHEsdSkseSYmRCYmKDEhPT16LnJhbmdlQ291bnR8fHouYW5jaG9yTm9kZSE9PXkubm9kZXx8ei5hbmNob3JPZmZzZXQhPT15Lm9mZnNldHx8ei5mb2N1c05vZGUhPT1ELm5vZGV8fHouZm9jdXNPZmZzZXQhPT1ELm9mZnNldCkmJihqYT1kb2N1bWVudC5jcmVhdGVSYW5nZSgpLGphLnNldFN0YXJ0KHkubm9kZSx5Lm9mZnNldCksei5yZW1vdmVBbGxSYW5nZXMoKSxsPnU/KHouYWRkUmFuZ2UoamEpLHouZXh0ZW5kKEQubm9kZSxELm9mZnNldCkpOihqYS5zZXRFbmQoRC5ub2RlLEQub2Zmc2V0KSx6LmFkZFJhbmdlKGphKSkpKSk7ej1bXTtmb3IobD1xO2w9bC5wYXJlbnROb2RlOykxPT09bC5ub2RlVHlwZSYmei5wdXNoKHtlbGVtZW50OmwsbGVmdDpsLnNjcm9sbExlZnQsXG50b3A6bC5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgcS5mb2N1cyYmcS5mb2N1cygpO2ZvcihxPTA7cTx6Lmxlbmd0aDtxKyspbD16W3FdLGwuZWxlbWVudC5zY3JvbGxMZWZ0PWwubGVmdCxsLmVsZW1lbnQuc2Nyb2xsVG9wPWwudG9wfWNmPW51bGw7S2QoYmYpO2JmPW51bGw7Yy5jdXJyZW50PWI7Zm9yKFU9ZTtudWxsIT09VTspe2U9ITE7cT12b2lkIDA7dHJ5e2Zvcih6PWQ7bnVsbCE9PVU7KXt2YXIgaWc9VS5lZmZlY3RUYWc7aWYoaWcmMzYpe3ZhciBvYz1VLmFsdGVybmF0ZTtsPVU7dT16O3N3aXRjaChsLnRhZyl7Y2FzZSAyOnZhciBjYT1sLnN0YXRlTm9kZTtpZihsLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1vYyljYS5wcm9wcz1sLm1lbW9pemVkUHJvcHMsY2Euc3RhdGU9bC5tZW1vaXplZFN0YXRlLGNhLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgeGk9b2MubWVtb2l6ZWRQcm9wcyx5aT1vYy5tZW1vaXplZFN0YXRlO2NhLnByb3BzPWwubWVtb2l6ZWRQcm9wcztcbmNhLnN0YXRlPWwubWVtb2l6ZWRTdGF0ZTtjYS5jb21wb25lbnREaWRVcGRhdGUoeGkseWksY2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfXZhciBPZz1sLnVwZGF0ZVF1ZXVlO251bGwhPT1PZyYmKGNhLnByb3BzPWwubWVtb2l6ZWRQcm9wcyxjYS5zdGF0ZT1sLm1lbW9pemVkU3RhdGUsWGYobCxPZyxjYSx1KSk7YnJlYWs7Y2FzZSAzOnZhciBQZz1sLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1QZyl7eT1udWxsO2lmKG51bGwhPT1sLmNoaWxkKXN3aXRjaChsLmNoaWxkLnRhZyl7Y2FzZSA1Onk9bC5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAyOnk9bC5jaGlsZC5zdGF0ZU5vZGV9WGYobCxQZyx5LHUpfWJyZWFrO2Nhc2UgNTp2YXIgemk9bC5zdGF0ZU5vZGU7bnVsbD09PW9jJiZsLmVmZmVjdFRhZyY0JiZkZihsLnR5cGUsbC5tZW1vaXplZFByb3BzKSYmemkuZm9jdXMoKTticmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2Nhc2UgMTU6YnJlYWs7Y2FzZSAxNjpicmVhaztcbmRlZmF1bHQ6QShcIjE2M1wiKX19aWYoaWcmMTI4KXtsPXZvaWQgMDt2YXIgeWM9VS5yZWY7aWYobnVsbCE9PXljKXt2YXIgUWc9VS5zdGF0ZU5vZGU7c3dpdGNoKFUudGFnKXtjYXNlIDU6bD1RZzticmVhaztkZWZhdWx0Omw9UWd9XCJmdW5jdGlvblwiPT09dHlwZW9mIHljP3ljKGwpOnljLmN1cnJlbnQ9bH19dmFyIEFpPVUubmV4dEVmZmVjdDtVLm5leHRFZmZlY3Q9bnVsbDtVPUFpfX1jYXRjaChXYSl7ZT0hMCxxPVdhfWUmJihudWxsPT09VT9BKFwiMTc4XCIpOnZvaWQgMCwkZyhVLHEpLG51bGwhPT1VJiYoVT1VLm5leHRFZmZlY3QpKX1xaD11aD0hMTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgS2YmJktmKGIuc3RhdGVOb2RlKTtiPWMuY3VycmVudC5leHBpcmF0aW9uVGltZTswPT09YiYmKGloPW51bGwpO2EucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9Yn1mdW5jdGlvbiBBaCgpe3JldHVybiBudWxsPT09UWh8fFFoLnRpbWVSZW1haW5pbmcoKT5UaD8hMTpOaD0hMH1cbmZ1bmN0aW9uIGdoKGEpe251bGw9PT1YP0EoXCIyNDZcIik6dm9pZCAwO1gucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9MDtPaHx8KE9oPSEwLFBoPWEpfWZ1bmN0aW9uIENoKGEpe251bGw9PT1YP0EoXCIyNDZcIik6dm9pZCAwO1gucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YX1mdW5jdGlvbiBjaShhLGIpe3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXsoWj1jKXx8V3x8WGgoKX19ZnVuY3Rpb24gZGkoYSxiKXtpZihaJiYhUmgpe1JoPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1JoPSExfX1yZXR1cm4gYShiKX1mdW5jdGlvbiBlaShhLGIpe1c/QShcIjE4N1wiKTp2b2lkIDA7dmFyIGM9WjtaPSEwO3RyeXtyZXR1cm4gSmgoYSxiKX1maW5hbGx5e1o9YyxYaCgpfX1cbmZ1bmN0aW9uIGZpKGEsYixjKXtpZihFaClyZXR1cm4gYShiLGMpO1p8fFd8fDA9PT1GaHx8KFpoKEZoLCExLG51bGwpLEZoPTApO3ZhciBkPUVoLGU9WjtaPUVoPSEwO3RyeXtyZXR1cm4gYShiLGMpfWZpbmFsbHl7RWg9ZCwoWj1lKXx8V3x8WGgoKX19ZnVuY3Rpb24gZ2koYSl7dmFyIGI9WjtaPSEwO3RyeXtKaChhKX1maW5hbGx5eyhaPWIpfHxXfHxaaCgxLCExLG51bGwpfX1cbmZ1bmN0aW9uIGhpKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2lmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBnO2I6ezI9PT1rZChjKSYmMj09PWMudGFnP3ZvaWQgMDpBKFwiMTcwXCIpO2ZvcihnPWM7MyE9PWcudGFnOyl7aWYocmYoZykpe2c9Zy5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn0oZz1nLnJldHVybik/dm9pZCAwOkEoXCIxNzFcIil9Zz1nLnN0YXRlTm9kZS5jb250ZXh0fWM9cmYoYyk/d2YoYyxnKTpnfWVsc2UgYz1oYTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1QZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7UmYoZixlLGQpO3BnKGYsZCk7cmV0dXJuIGR9XG5mdW5jdGlvbiBpaShhKXt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj9BKFwiMTg4XCIpOkEoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9bmQoYik7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9ZnVuY3Rpb24gamkoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9bmcoKTtlPW9nKGYsZSk7cmV0dXJuIGhpKGEsYixjLGUsZCl9ZnVuY3Rpb24ga2koYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1cbmZ1bmN0aW9uIGxpKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIEpmKHAoe30sYSx7ZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1uZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfX0pKX1cbnZhciBtaT17dXBkYXRlQ29udGFpbmVyQXRFeHBpcmF0aW9uVGltZTpoaSxjcmVhdGVDb250YWluZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBGZihhLGIsYyl9LHVwZGF0ZUNvbnRhaW5lcjpqaSxmbHVzaFJvb3Q6YWkscmVxdWVzdFdvcms6QmgsY29tcHV0ZVVuaXF1ZUFzeW5jRXhwaXJhdGlvbjpEaCxiYXRjaGVkVXBkYXRlczpjaSx1bmJhdGNoZWRVcGRhdGVzOmRpLGRlZmVycmVkVXBkYXRlczpJaCxzeW5jVXBkYXRlczpKaCxpbnRlcmFjdGl2ZVVwZGF0ZXM6ZmksZmx1c2hJbnRlcmFjdGl2ZVVwZGF0ZXM6ZnVuY3Rpb24oKXtXfHwwPT09Rmh8fChaaChGaCwhMSxudWxsKSxGaD0wKX0sZmx1c2hDb250cm9sbGVkOmdpLGZsdXNoU3luYzplaSxnZXRQdWJsaWNSb290SW5zdGFuY2U6a2ksZmluZEhvc3RJbnN0YW5jZTppaSxmaW5kSG9zdEluc3RhbmNlV2l0aE5vUG9ydGFsczpmdW5jdGlvbihhKXthPW9kKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxpbmplY3RJbnRvRGV2VG9vbHM6bGl9O1xuZnVuY3Rpb24gb2koYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpoYyxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1LYi5pbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50KGFmKTtmdW5jdGlvbiBwaShhKXt0aGlzLl9leHBpcmF0aW9uVGltZT1EaCgpO3RoaXMuX3Jvb3Q9YTt0aGlzLl9jYWxsYmFja3M9dGhpcy5fbmV4dD1udWxsO3RoaXMuX2hhc0NoaWxkcmVuPXRoaXMuX2RpZENvbXBsZXRlPSExO3RoaXMuX2NoaWxkcmVuPW51bGw7dGhpcy5fZGVmZXI9ITB9XG5waS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDpBKFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcgcWk7aGkoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O3BpLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbXBsZXRlKWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbnBpLnByb3RvdHlwZS5jb21taXQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYj1hLmZpcnN0QmF0Y2g7dGhpcy5fZGVmZXImJm51bGwhPT1iP3ZvaWQgMDpBKFwiMjUxXCIpO2lmKHRoaXMuX2hhc0NoaWxkcmVuKXt2YXIgYz10aGlzLl9leHBpcmF0aW9uVGltZTtpZihiIT09dGhpcyl7dGhpcy5faGFzQ2hpbGRyZW4mJihjPXRoaXMuX2V4cGlyYXRpb25UaW1lPWIuX2V4cGlyYXRpb25UaW1lLHRoaXMucmVuZGVyKHRoaXMuX2NoaWxkcmVuKSk7Zm9yKHZhciBkPW51bGwsZT1iO2UhPT10aGlzOylkPWUsZT1lLl9uZXh0O251bGw9PT1kP0EoXCIyNTFcIik6dm9pZCAwO2QuX25leHQ9ZS5fbmV4dDt0aGlzLl9uZXh0PWI7YS5maXJzdEJhdGNoPXRoaXN9dGhpcy5fZGVmZXI9ITE7YWkoYSxjKTtiPXRoaXMuX25leHQ7dGhpcy5fbmV4dD1udWxsO2I9YS5maXJzdEJhdGNoPWI7bnVsbCE9PWImJmIuX2hhc0NoaWxkcmVuJiZiLnJlbmRlcihiLl9jaGlsZHJlbil9ZWxzZSB0aGlzLl9uZXh0PVxubnVsbCx0aGlzLl9kZWZlcj0hMX07cGkucHJvdG90eXBlLl9vbkNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbXBsZXRlKXt0aGlzLl9kaWRDb21wbGV0ZT0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspKDAsYVtiXSkoKX19O2Z1bmN0aW9uIHFpKCl7dGhpcy5fY2FsbGJhY2tzPW51bGw7dGhpcy5fZGlkQ29tbWl0PSExO3RoaXMuX29uQ29tbWl0PXRoaXMuX29uQ29tbWl0LmJpbmQodGhpcyl9cWkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tbWl0KWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbnFpLnByb3RvdHlwZS5fb25Db21taXQ9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tbWl0KXt0aGlzLl9kaWRDb21taXQ9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP0EoXCIxOTFcIixjKTp2b2lkIDA7YygpfX19O2Z1bmN0aW9uIHJpKGEsYixjKXt0aGlzLl9pbnRlcm5hbFJvb3Q9RmYoYSxiLGMpfXJpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcgcWk7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO2ppKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5yaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgcWk7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO2ppKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307cmkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IHFpO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtqaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xucmkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IHBpKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU8PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gc2koYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfVNiPW1pLmJhdGNoZWRVcGRhdGVzO1RiPW1pLmludGVyYWN0aXZlVXBkYXRlcztVYj1taS5mbHVzaEludGVyYWN0aXZlVXBkYXRlcztcbmZ1bmN0aW9uIHRpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgcmkoYSwhMSxiKX1cbmZ1bmN0aW9uIHVpKGEsYixjLGQsZSl7c2koYyk/dm9pZCAwOkEoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1raShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPXRpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWtpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1kaShmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4ga2koZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIHZpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7c2koYik/dm9pZCAwOkEoXCIyMDBcIik7cmV0dXJuIG9pKGEsYixudWxsLGMpfVxudmFyIHdpPXtjcmVhdGVQb3J0YWw6dmksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/bnVsbDoxPT09YS5ub2RlVHlwZT9hOmlpKGEpfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gdWkobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHVpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/QShcIjM4XCIpOnZvaWQgMDtyZXR1cm4gdWkoYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7c2koYSk/dm9pZCAwOkEoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhkaShmdW5jdGlvbigpe3VpKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIHZpLmFwcGx5KHZvaWQgMCxcbmFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOmNpLHVuc3RhYmxlX2RlZmVycmVkVXBkYXRlczpJaCx1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXM6ZmksZmx1c2hTeW5jOmVpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpnaSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRQbHVnaW5IdWI6S2EsRXZlbnRQbHVnaW5SZWdpc3RyeTp2YSxFdmVudFByb3BhZ2F0b3JzOiRhLFJlYWN0Q29udHJvbGxlZENvbXBvbmVudDpSYixSZWFjdERPTUNvbXBvbmVudFRyZWU6UWEsUmVhY3RET01FdmVudExpc3RlbmVyOk9kfSx1bnN0YWJsZV9jcmVhdGVSb290OmZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyByaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX19O2xpKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpOYSxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjQuMlwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO1xudmFyIEJpPXtkZWZhdWx0OndpfSxDaT1CaSYmd2l8fEJpO21vZHVsZS5leHBvcnRzPUNpLmRlZmF1bHQ/Q2kuZGVmYXVsdDpDaTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbi8qKlxuICogU2ltcGxlLCBsaWdodHdlaWdodCBtb2R1bGUgYXNzaXN0aW5nIHdpdGggdGhlIGRldGVjdGlvbiBhbmQgY29udGV4dCBvZlxuICogV29ya2VyLiBIZWxwcyBhdm9pZCBjaXJjdWxhciBkZXBlbmRlbmNpZXMgYW5kIGFsbG93cyBjb2RlIHRvIHJlYXNvbiBhYm91dFxuICogd2hldGhlciBvciBub3QgdGhleSBhcmUgaW4gYSBXb3JrZXIsIGV2ZW4gaWYgdGhleSBuZXZlciBpbmNsdWRlIHRoZSBtYWluXG4gKiBgUmVhY3RXb3JrZXJgIGRlcGVuZGVuY3kuXG4gKi9cbnZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHtcblxuICBjYW5Vc2VET006IGNhblVzZURPTSxcblxuICBjYW5Vc2VXb3JrZXJzOiB0eXBlb2YgV29ya2VyICE9PSAndW5kZWZpbmVkJyxcblxuICBjYW5Vc2VFdmVudExpc3RlbmVyczogY2FuVXNlRE9NICYmICEhKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyIHx8IHdpbmRvdy5hdHRhY2hFdmVudCksXG5cbiAgY2FuVXNlVmlld3BvcnQ6IGNhblVzZURPTSAmJiAhIXdpbmRvdy5zY3JlZW4sXG5cbiAgaXNJbldvcmtlcjogIWNhblVzZURPTSAvLyBGb3Igbm93LCB0aGlzIGlzIHRydWUgLSBtaWdodCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZS5cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFeGVjdXRpb25FbnZpcm9ubWVudDsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBmYi13d3cvdHlwZW9mLXVuZGVmaW5lZCAqL1xuXG4vKipcbiAqIFNhbWUgYXMgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBidXQgd3JhcHMgaW4gYSB0cnktY2F0Y2ggYmxvY2suIEluIElFIGl0IGlzXG4gKiBub3Qgc2FmZSB0byBjYWxsIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgaWYgdGhlcmUgaXMgbm90aGluZyBmb2N1c2VkLlxuICpcbiAqIFRoZSBhY3RpdmVFbGVtZW50IHdpbGwgYmUgbnVsbCBvbmx5IGlmIHRoZSBkb2N1bWVudCBvciBkb2N1bWVudCBib2R5IGlzIG5vdFxuICogeWV0IGRlZmluZWQuXG4gKlxuICogQHBhcmFtIHs/RE9NRG9jdW1lbnR9IGRvYyBEZWZhdWx0cyB0byBjdXJyZW50IGRvY3VtZW50LlxuICogQHJldHVybiB7P0RPTUVsZW1lbnR9XG4gKi9cbmZ1bmN0aW9uIGdldEFjdGl2ZUVsZW1lbnQoZG9jKSAvKj9ET01FbGVtZW50Ki97XG4gIGRvYyA9IGRvYyB8fCAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogdW5kZWZpbmVkKTtcbiAgaWYgKHR5cGVvZiBkb2MgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdHJ5IHtcbiAgICByZXR1cm4gZG9jLmFjdGl2ZUVsZW1lbnQgfHwgZG9jLmJvZHk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZG9jLmJvZHk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRBY3RpdmVFbGVtZW50OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqIFxuICovXG5cbi8qZXNsaW50LWRpc2FibGUgbm8tc2VsZi1jb21wYXJlICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBpbmxpbmVkIE9iamVjdC5pcyBwb2x5ZmlsbCB0byBhdm9pZCByZXF1aXJpbmcgY29uc3VtZXJzIHNoaXAgdGhlaXIgb3duXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbiAqL1xuZnVuY3Rpb24gaXMoeCwgeSkge1xuICAvLyBTYW1lVmFsdWUgYWxnb3JpdGhtXG4gIGlmICh4ID09PSB5KSB7XG4gICAgLy8gU3RlcHMgMS01LCA3LTEwXG4gICAgLy8gU3RlcHMgNi5iLTYuZTogKzAgIT0gLTBcbiAgICAvLyBBZGRlZCB0aGUgbm9uemVybyB5IGNoZWNrIHRvIG1ha2UgRmxvdyBoYXBweSwgYnV0IGl0IGlzIHJlZHVuZGFudFxuICAgIHJldHVybiB4ICE9PSAwIHx8IHkgIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIC8vIFN0ZXAgNi5hOiBOYU4gPT0gTmFOXG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG4vKipcbiAqIFBlcmZvcm1zIGVxdWFsaXR5IGJ5IGl0ZXJhdGluZyB0aHJvdWdoIGtleXMgb24gYW4gb2JqZWN0IGFuZCByZXR1cm5pbmcgZmFsc2VcbiAqIHdoZW4gYW55IGtleSBoYXMgdmFsdWVzIHdoaWNoIGFyZSBub3Qgc3RyaWN0bHkgZXF1YWwgYmV0d2VlbiB0aGUgYXJndW1lbnRzLlxuICogUmV0dXJucyB0cnVlIHdoZW4gdGhlIHZhbHVlcyBvZiBhbGwga2V5cyBhcmUgc3RyaWN0bHkgZXF1YWwuXG4gKi9cbmZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIFRlc3QgZm9yIEEncyBrZXlzIGRpZmZlcmVudCBmcm9tIEIuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIWhhc093blByb3BlcnR5LmNhbGwob2JqQiwga2V5c0FbaV0pIHx8ICFpcyhvYmpBW2tleXNBW2ldXSwgb2JqQltrZXlzQVtpXV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hhbGxvd0VxdWFsOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG52YXIgaXNUZXh0Tm9kZSA9IHJlcXVpcmUoJy4vaXNUZXh0Tm9kZScpO1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBnaXZlbiBET00gbm9kZSBjb250YWlucyBvciBpcyBhbm90aGVyIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUpIHtcbiAgaWYgKCFvdXRlck5vZGUgfHwgIWlubmVyTm9kZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChvdXRlck5vZGUgPT09IGlubmVyTm9kZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUob3V0ZXJOb2RlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChpc1RleHROb2RlKGlubmVyTm9kZSkpIHtcbiAgICByZXR1cm4gY29udGFpbnNOb2RlKG91dGVyTm9kZSwgaW5uZXJOb2RlLnBhcmVudE5vZGUpO1xuICB9IGVsc2UgaWYgKCdjb250YWlucycgaW4gb3V0ZXJOb2RlKSB7XG4gICAgcmV0dXJuIG91dGVyTm9kZS5jb250YWlucyhpbm5lck5vZGUpO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbikge1xuICAgIHJldHVybiAhIShvdXRlck5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24oaW5uZXJOb2RlKSAmIDE2KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250YWluc05vZGU7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxudmFyIGlzTm9kZSA9IHJlcXVpcmUoJy4vaXNOb2RlJyk7XG5cbi8qKlxuICogQHBhcmFtIHsqfSBvYmplY3QgVGhlIG9iamVjdCB0byBjaGVjay5cbiAqIEByZXR1cm4ge2Jvb2xlYW59IFdoZXRoZXIgb3Igbm90IHRoZSBvYmplY3QgaXMgYSBET00gdGV4dCBub2RlLlxuICovXG5mdW5jdGlvbiBpc1RleHROb2RlKG9iamVjdCkge1xuICByZXR1cm4gaXNOb2RlKG9iamVjdCkgJiYgb2JqZWN0Lm5vZGVUeXBlID09IDM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNUZXh0Tm9kZTsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZShvYmplY3QpIHtcbiAgdmFyIGRvYyA9IG9iamVjdCA/IG9iamVjdC5vd25lckRvY3VtZW50IHx8IG9iamVjdCA6IGRvY3VtZW50O1xuICB2YXIgZGVmYXVsdFZpZXcgPSBkb2MuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xuICByZXR1cm4gISEob2JqZWN0ICYmICh0eXBlb2YgZGVmYXVsdFZpZXcuTm9kZSA9PT0gJ2Z1bmN0aW9uJyA/IG9iamVjdCBpbnN0YW5jZW9mIGRlZmF1bHRWaWV3Lk5vZGUgOiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVUeXBlID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVOYW1lID09PSAnc3RyaW5nJykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzTm9kZTsiLCJpbXBvcnQgJCRvYnNlcnZhYmxlIGZyb20gJ3N5bWJvbC1vYnNlcnZhYmxlJztcblxuLyoqXG4gKiBUaGVzZSBhcmUgcHJpdmF0ZSBhY3Rpb24gdHlwZXMgcmVzZXJ2ZWQgYnkgUmVkdXguXG4gKiBGb3IgYW55IHVua25vd24gYWN0aW9ucywgeW91IG11c3QgcmV0dXJuIHRoZSBjdXJyZW50IHN0YXRlLlxuICogSWYgdGhlIGN1cnJlbnQgc3RhdGUgaXMgdW5kZWZpbmVkLCB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUuXG4gKiBEbyBub3QgcmVmZXJlbmNlIHRoZXNlIGFjdGlvbiB0eXBlcyBkaXJlY3RseSBpbiB5b3VyIGNvZGUuXG4gKi9cbnZhciBBY3Rpb25UeXBlcyA9IHtcbiAgSU5JVDogJ0BAcmVkdXgvSU5JVCcgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNykuc3BsaXQoJycpLmpvaW4oJy4nKSxcbiAgUkVQTEFDRTogJ0BAcmVkdXgvUkVQTEFDRScgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNykuc3BsaXQoJycpLmpvaW4oJy4nKVxufTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmo7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbn07XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7YW55fSBvYmogVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIGFyZ3VtZW50IGFwcGVhcnMgdG8gYmUgYSBwbGFpbiBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gIGlmICgodHlwZW9mIG9iaiA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2Yob2JqKSkgIT09ICdvYmplY3QnIHx8IG9iaiA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIHZhciBwcm90byA9IG9iajtcbiAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaikgPT09IHByb3RvO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBSZWR1eCBzdG9yZSB0aGF0IGhvbGRzIHRoZSBzdGF0ZSB0cmVlLlxuICogVGhlIG9ubHkgd2F5IHRvIGNoYW5nZSB0aGUgZGF0YSBpbiB0aGUgc3RvcmUgaXMgdG8gY2FsbCBgZGlzcGF0Y2goKWAgb24gaXQuXG4gKlxuICogVGhlcmUgc2hvdWxkIG9ubHkgYmUgYSBzaW5nbGUgc3RvcmUgaW4geW91ciBhcHAuIFRvIHNwZWNpZnkgaG93IGRpZmZlcmVudFxuICogcGFydHMgb2YgdGhlIHN0YXRlIHRyZWUgcmVzcG9uZCB0byBhY3Rpb25zLCB5b3UgbWF5IGNvbWJpbmUgc2V2ZXJhbCByZWR1Y2Vyc1xuICogaW50byBhIHNpbmdsZSByZWR1Y2VyIGZ1bmN0aW9uIGJ5IHVzaW5nIGBjb21iaW5lUmVkdWNlcnNgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlZHVjZXIgQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIG5leHQgc3RhdGUgdHJlZSwgZ2l2ZW5cbiAqIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBhY3Rpb24gdG8gaGFuZGxlLlxuICpcbiAqIEBwYXJhbSB7YW55fSBbcHJlbG9hZGVkU3RhdGVdIFRoZSBpbml0aWFsIHN0YXRlLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gaHlkcmF0ZSB0aGUgc3RhdGUgZnJvbSB0aGUgc2VydmVyIGluIHVuaXZlcnNhbCBhcHBzLCBvciB0byByZXN0b3JlIGFcbiAqIHByZXZpb3VzbHkgc2VyaWFsaXplZCB1c2VyIHNlc3Npb24uXG4gKiBJZiB5b3UgdXNlIGBjb21iaW5lUmVkdWNlcnNgIHRvIHByb2R1Y2UgdGhlIHJvb3QgcmVkdWNlciBmdW5jdGlvbiwgdGhpcyBtdXN0IGJlXG4gKiBhbiBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZSBhcyBgY29tYmluZVJlZHVjZXJzYCBrZXlzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtlbmhhbmNlcl0gVGhlIHN0b3JlIGVuaGFuY2VyLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gZW5oYW5jZSB0aGUgc3RvcmUgd2l0aCB0aGlyZC1wYXJ0eSBjYXBhYmlsaXRpZXMgc3VjaCBhcyBtaWRkbGV3YXJlLFxuICogdGltZSB0cmF2ZWwsIHBlcnNpc3RlbmNlLCBldGMuIFRoZSBvbmx5IHN0b3JlIGVuaGFuY2VyIHRoYXQgc2hpcHMgd2l0aCBSZWR1eFxuICogaXMgYGFwcGx5TWlkZGxld2FyZSgpYC5cbiAqXG4gKiBAcmV0dXJucyB7U3RvcmV9IEEgUmVkdXggc3RvcmUgdGhhdCBsZXRzIHlvdSByZWFkIHRoZSBzdGF0ZSwgZGlzcGF0Y2ggYWN0aW9uc1xuICogYW5kIHN1YnNjcmliZSB0byBjaGFuZ2VzLlxuICovXG5mdW5jdGlvbiBjcmVhdGVTdG9yZShyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSwgZW5oYW5jZXIpIHtcbiAgdmFyIF9yZWYyO1xuXG4gIGlmICh0eXBlb2YgcHJlbG9hZGVkU3RhdGUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGVuaGFuY2VyID09PSAndW5kZWZpbmVkJykge1xuICAgIGVuaGFuY2VyID0gcHJlbG9hZGVkU3RhdGU7XG4gICAgcHJlbG9hZGVkU3RhdGUgPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAndW5kZWZpbmVkJykge1xuICAgIGlmICh0eXBlb2YgZW5oYW5jZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIGVuaGFuY2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVuaGFuY2VyKGNyZWF0ZVN0b3JlKShyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSk7XG4gIH1cblxuICBpZiAodHlwZW9mIHJlZHVjZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSByZWR1Y2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgY3VycmVudFJlZHVjZXIgPSByZWR1Y2VyO1xuICB2YXIgY3VycmVudFN0YXRlID0gcHJlbG9hZGVkU3RhdGU7XG4gIHZhciBjdXJyZW50TGlzdGVuZXJzID0gW107XG4gIHZhciBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycztcbiAgdmFyIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZWFkcyB0aGUgc3RhdGUgdHJlZSBtYW5hZ2VkIGJ5IHRoZSBzdG9yZS5cbiAgICpcbiAgICogQHJldHVybnMge2FueX0gVGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBvZiB5b3VyIGFwcGxpY2F0aW9uLlxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0U3RhdGUoKSB7XG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG1heSBub3QgY2FsbCBzdG9yZS5nZXRTdGF0ZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdUaGUgcmVkdWNlciBoYXMgYWxyZWFkeSByZWNlaXZlZCB0aGUgc3RhdGUgYXMgYW4gYXJndW1lbnQuICcgKyAnUGFzcyBpdCBkb3duIGZyb20gdGhlIHRvcCByZWR1Y2VyIGluc3RlYWQgb2YgcmVhZGluZyBpdCBmcm9tIHRoZSBzdG9yZS4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYSBjaGFuZ2UgbGlzdGVuZXIuIEl0IHdpbGwgYmUgY2FsbGVkIGFueSB0aW1lIGFuIGFjdGlvbiBpcyBkaXNwYXRjaGVkLFxuICAgKiBhbmQgc29tZSBwYXJ0IG9mIHRoZSBzdGF0ZSB0cmVlIG1heSBwb3RlbnRpYWxseSBoYXZlIGNoYW5nZWQuIFlvdSBtYXkgdGhlblxuICAgKiBjYWxsIGBnZXRTdGF0ZSgpYCB0byByZWFkIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgaW5zaWRlIHRoZSBjYWxsYmFjay5cbiAgICpcbiAgICogWW91IG1heSBjYWxsIGBkaXNwYXRjaCgpYCBmcm9tIGEgY2hhbmdlIGxpc3RlbmVyLCB3aXRoIHRoZSBmb2xsb3dpbmdcbiAgICogY2F2ZWF0czpcbiAgICpcbiAgICogMS4gVGhlIHN1YnNjcmlwdGlvbnMgYXJlIHNuYXBzaG90dGVkIGp1c3QgYmVmb3JlIGV2ZXJ5IGBkaXNwYXRjaCgpYCBjYWxsLlxuICAgKiBJZiB5b3Ugc3Vic2NyaWJlIG9yIHVuc3Vic2NyaWJlIHdoaWxlIHRoZSBsaXN0ZW5lcnMgYXJlIGJlaW5nIGludm9rZWQsIHRoaXNcbiAgICogd2lsbCBub3QgaGF2ZSBhbnkgZWZmZWN0IG9uIHRoZSBgZGlzcGF0Y2goKWAgdGhhdCBpcyBjdXJyZW50bHkgaW4gcHJvZ3Jlc3MuXG4gICAqIEhvd2V2ZXIsIHRoZSBuZXh0IGBkaXNwYXRjaCgpYCBjYWxsLCB3aGV0aGVyIG5lc3RlZCBvciBub3QsIHdpbGwgdXNlIGEgbW9yZVxuICAgKiByZWNlbnQgc25hcHNob3Qgb2YgdGhlIHN1YnNjcmlwdGlvbiBsaXN0LlxuICAgKlxuICAgKiAyLiBUaGUgbGlzdGVuZXIgc2hvdWxkIG5vdCBleHBlY3QgdG8gc2VlIGFsbCBzdGF0ZSBjaGFuZ2VzLCBhcyB0aGUgc3RhdGVcbiAgICogbWlnaHQgaGF2ZSBiZWVuIHVwZGF0ZWQgbXVsdGlwbGUgdGltZXMgZHVyaW5nIGEgbmVzdGVkIGBkaXNwYXRjaCgpYCBiZWZvcmVcbiAgICogdGhlIGxpc3RlbmVyIGlzIGNhbGxlZC4gSXQgaXMsIGhvd2V2ZXIsIGd1YXJhbnRlZWQgdGhhdCBhbGwgc3Vic2NyaWJlcnNcbiAgICogcmVnaXN0ZXJlZCBiZWZvcmUgdGhlIGBkaXNwYXRjaCgpYCBzdGFydGVkIHdpbGwgYmUgY2FsbGVkIHdpdGggdGhlIGxhdGVzdFxuICAgKiBzdGF0ZSBieSB0aGUgdGltZSBpdCBleGl0cy5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbGlzdGVuZXIgQSBjYWxsYmFjayB0byBiZSBpbnZva2VkIG9uIGV2ZXJ5IGRpc3BhdGNoLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gdG8gcmVtb3ZlIHRoaXMgY2hhbmdlIGxpc3RlbmVyLlxuICAgKi9cbiAgZnVuY3Rpb24gc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgaWYgKHR5cGVvZiBsaXN0ZW5lciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgbGlzdGVuZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLnN1YnNjcmliZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdJZiB5b3Ugd291bGQgbGlrZSB0byBiZSBub3RpZmllZCBhZnRlciB0aGUgc3RvcmUgaGFzIGJlZW4gdXBkYXRlZCwgc3Vic2NyaWJlIGZyb20gYSAnICsgJ2NvbXBvbmVudCBhbmQgaW52b2tlIHN0b3JlLmdldFN0YXRlKCkgaW4gdGhlIGNhbGxiYWNrIHRvIGFjY2VzcyB0aGUgbGF0ZXN0IHN0YXRlLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGktcmVmZXJlbmNlL3N0b3JlI3N1YnNjcmliZShsaXN0ZW5lcikgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICB9XG5cbiAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcblxuICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICBuZXh0TGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCkge1xuICAgICAgaWYgKCFpc1N1YnNjcmliZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtYXkgbm90IHVuc3Vic2NyaWJlIGZyb20gYSBzdG9yZSBsaXN0ZW5lciB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS1yZWZlcmVuY2Uvc3RvcmUjc3Vic2NyaWJlKGxpc3RlbmVyKSBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcblxuICAgICAgZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycygpO1xuICAgICAgdmFyIGluZGV4ID0gbmV4dExpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgICAgIG5leHRMaXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIERpc3BhdGNoZXMgYW4gYWN0aW9uLiBJdCBpcyB0aGUgb25seSB3YXkgdG8gdHJpZ2dlciBhIHN0YXRlIGNoYW5nZS5cbiAgICpcbiAgICogVGhlIGByZWR1Y2VyYCBmdW5jdGlvbiwgdXNlZCB0byBjcmVhdGUgdGhlIHN0b3JlLCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZVxuICAgKiBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBnaXZlbiBgYWN0aW9uYC4gSXRzIHJldHVybiB2YWx1ZSB3aWxsXG4gICAqIGJlIGNvbnNpZGVyZWQgdGhlICoqbmV4dCoqIHN0YXRlIG9mIHRoZSB0cmVlLCBhbmQgdGhlIGNoYW5nZSBsaXN0ZW5lcnNcbiAgICogd2lsbCBiZSBub3RpZmllZC5cbiAgICpcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb25seSBzdXBwb3J0cyBwbGFpbiBvYmplY3QgYWN0aW9ucy4gSWYgeW91IHdhbnQgdG9cbiAgICogZGlzcGF0Y2ggYSBQcm9taXNlLCBhbiBPYnNlcnZhYmxlLCBhIHRodW5rLCBvciBzb21ldGhpbmcgZWxzZSwgeW91IG5lZWQgdG9cbiAgICogd3JhcCB5b3VyIHN0b3JlIGNyZWF0aW5nIGZ1bmN0aW9uIGludG8gdGhlIGNvcnJlc3BvbmRpbmcgbWlkZGxld2FyZS4gRm9yXG4gICAqIGV4YW1wbGUsIHNlZSB0aGUgZG9jdW1lbnRhdGlvbiBmb3IgdGhlIGByZWR1eC10aHVua2AgcGFja2FnZS4gRXZlbiB0aGVcbiAgICogbWlkZGxld2FyZSB3aWxsIGV2ZW50dWFsbHkgZGlzcGF0Y2ggcGxhaW4gb2JqZWN0IGFjdGlvbnMgdXNpbmcgdGhpcyBtZXRob2QuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBhY3Rpb24gQSBwbGFpbiBvYmplY3QgcmVwcmVzZW50aW5nIOKAnHdoYXQgY2hhbmdlZOKAnS4gSXQgaXNcbiAgICogYSBnb29kIGlkZWEgdG8ga2VlcCBhY3Rpb25zIHNlcmlhbGl6YWJsZSBzbyB5b3UgY2FuIHJlY29yZCBhbmQgcmVwbGF5IHVzZXJcbiAgICogc2Vzc2lvbnMsIG9yIHVzZSB0aGUgdGltZSB0cmF2ZWxsaW5nIGByZWR1eC1kZXZ0b29sc2AuIEFuIGFjdGlvbiBtdXN0IGhhdmVcbiAgICogYSBgdHlwZWAgcHJvcGVydHkgd2hpY2ggbWF5IG5vdCBiZSBgdW5kZWZpbmVkYC4gSXQgaXMgYSBnb29kIGlkZWEgdG8gdXNlXG4gICAqIHN0cmluZyBjb25zdGFudHMgZm9yIGFjdGlvbiB0eXBlcy5cbiAgICpcbiAgICogQHJldHVybnMge09iamVjdH0gRm9yIGNvbnZlbmllbmNlLCB0aGUgc2FtZSBhY3Rpb24gb2JqZWN0IHlvdSBkaXNwYXRjaGVkLlxuICAgKlxuICAgKiBOb3RlIHRoYXQsIGlmIHlvdSB1c2UgYSBjdXN0b20gbWlkZGxld2FyZSwgaXQgbWF5IHdyYXAgYGRpc3BhdGNoKClgIHRvXG4gICAqIHJldHVybiBzb21ldGhpbmcgZWxzZSAoZm9yIGV4YW1wbGUsIGEgUHJvbWlzZSB5b3UgY2FuIGF3YWl0KS5cbiAgICovXG4gIGZ1bmN0aW9uIGRpc3BhdGNoKGFjdGlvbikge1xuICAgIGlmICghaXNQbGFpbk9iamVjdChhY3Rpb24pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FjdGlvbnMgbXVzdCBiZSBwbGFpbiBvYmplY3RzLiAnICsgJ1VzZSBjdXN0b20gbWlkZGxld2FyZSBmb3IgYXN5bmMgYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbi50eXBlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBY3Rpb25zIG1heSBub3QgaGF2ZSBhbiB1bmRlZmluZWQgXCJ0eXBlXCIgcHJvcGVydHkuICcgKyAnSGF2ZSB5b3UgbWlzc3BlbGxlZCBhIGNvbnN0YW50PycpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlZHVjZXJzIG1heSBub3QgZGlzcGF0Y2ggYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IHRydWU7XG4gICAgICBjdXJyZW50U3RhdGUgPSBjdXJyZW50UmVkdWNlcihjdXJyZW50U3RhdGUsIGFjdGlvbik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgbGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycyA9IG5leHRMaXN0ZW5lcnM7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXTtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjdGlvbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXBsYWNlcyB0aGUgcmVkdWNlciBjdXJyZW50bHkgdXNlZCBieSB0aGUgc3RvcmUgdG8gY2FsY3VsYXRlIHRoZSBzdGF0ZS5cbiAgICpcbiAgICogWW91IG1pZ2h0IG5lZWQgdGhpcyBpZiB5b3VyIGFwcCBpbXBsZW1lbnRzIGNvZGUgc3BsaXR0aW5nIGFuZCB5b3Ugd2FudCB0b1xuICAgKiBsb2FkIHNvbWUgb2YgdGhlIHJlZHVjZXJzIGR5bmFtaWNhbGx5LiBZb3UgbWlnaHQgYWxzbyBuZWVkIHRoaXMgaWYgeW91XG4gICAqIGltcGxlbWVudCBhIGhvdCByZWxvYWRpbmcgbWVjaGFuaXNtIGZvciBSZWR1eC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbmV4dFJlZHVjZXIgVGhlIHJlZHVjZXIgZm9yIHRoZSBzdG9yZSB0byB1c2UgaW5zdGVhZC5cbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBmdW5jdGlvbiByZXBsYWNlUmVkdWNlcihuZXh0UmVkdWNlcikge1xuICAgIGlmICh0eXBlb2YgbmV4dFJlZHVjZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIG5leHRSZWR1Y2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgY3VycmVudFJlZHVjZXIgPSBuZXh0UmVkdWNlcjtcbiAgICBkaXNwYXRjaCh7IHR5cGU6IEFjdGlvblR5cGVzLlJFUExBQ0UgfSk7XG4gIH1cblxuICAvKipcbiAgICogSW50ZXJvcGVyYWJpbGl0eSBwb2ludCBmb3Igb2JzZXJ2YWJsZS9yZWFjdGl2ZSBsaWJyYXJpZXMuXG4gICAqIEByZXR1cm5zIHtvYnNlcnZhYmxlfSBBIG1pbmltYWwgb2JzZXJ2YWJsZSBvZiBzdGF0ZSBjaGFuZ2VzLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBvYnNlcnZhYmxlIHByb3Bvc2FsOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYnNlcnZhYmxlXG4gICAqL1xuICBmdW5jdGlvbiBvYnNlcnZhYmxlKCkge1xuICAgIHZhciBfcmVmO1xuXG4gICAgdmFyIG91dGVyU3Vic2NyaWJlID0gc3Vic2NyaWJlO1xuICAgIHJldHVybiBfcmVmID0ge1xuICAgICAgLyoqXG4gICAgICAgKiBUaGUgbWluaW1hbCBvYnNlcnZhYmxlIHN1YnNjcmlwdGlvbiBtZXRob2QuXG4gICAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JzZXJ2ZXIgQW55IG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIGFzIGFuIG9ic2VydmVyLlxuICAgICAgICogVGhlIG9ic2VydmVyIG9iamVjdCBzaG91bGQgaGF2ZSBhIGBuZXh0YCBtZXRob2QuXG4gICAgICAgKiBAcmV0dXJucyB7c3Vic2NyaXB0aW9ufSBBbiBvYmplY3Qgd2l0aCBhbiBgdW5zdWJzY3JpYmVgIG1ldGhvZCB0aGF0IGNhblxuICAgICAgICogYmUgdXNlZCB0byB1bnN1YnNjcmliZSB0aGUgb2JzZXJ2YWJsZSBmcm9tIHRoZSBzdG9yZSwgYW5kIHByZXZlbnQgZnVydGhlclxuICAgICAgICogZW1pc3Npb24gb2YgdmFsdWVzIGZyb20gdGhlIG9ic2VydmFibGUuXG4gICAgICAgKi9cbiAgICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKG9ic2VydmVyKSB7XG4gICAgICAgIGlmICgodHlwZW9mIG9ic2VydmVyID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihvYnNlcnZlcikpICE9PSAnb2JqZWN0JyB8fCBvYnNlcnZlciA9PT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIHRoZSBvYnNlcnZlciB0byBiZSBhbiBvYmplY3QuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7IHVuc3Vic2NyaWJlOiB1bnN1YnNjcmliZSB9O1xuICAgICAgfVxuICAgIH0sIF9yZWZbJCRvYnNlcnZhYmxlXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sIF9yZWY7XG4gIH1cblxuICAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cbiAgZGlzcGF0Y2goeyB0eXBlOiBBY3Rpb25UeXBlcy5JTklUIH0pO1xuXG4gIHJldHVybiBfcmVmMiA9IHtcbiAgICBkaXNwYXRjaDogZGlzcGF0Y2gsXG4gICAgc3Vic2NyaWJlOiBzdWJzY3JpYmUsXG4gICAgZ2V0U3RhdGU6IGdldFN0YXRlLFxuICAgIHJlcGxhY2VSZWR1Y2VyOiByZXBsYWNlUmVkdWNlclxuICB9LCBfcmVmMlskJG9ic2VydmFibGVdID0gb2JzZXJ2YWJsZSwgX3JlZjI7XG59XG5cbi8qKlxuICogUHJpbnRzIGEgd2FybmluZyBpbiB0aGUgY29uc29sZSBpZiBpdCBleGlzdHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIHdhcm5pbmcgbWVzc2FnZS5cbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiB3YXJuaW5nKG1lc3NhZ2UpIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBjb25zb2xlLmVycm9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgdHJ5IHtcbiAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IGlmIHlvdSBlbmFibGVcbiAgICAvLyBcImJyZWFrIG9uIGFsbCBleGNlcHRpb25zXCIgaW4geW91ciBjb25zb2xlLFxuICAgIC8vIGl0IHdvdWxkIHBhdXNlIHRoZSBleGVjdXRpb24gYXQgdGhpcyBsaW5lLlxuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgfSBjYXRjaCAoZSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxufVxuXG5mdW5jdGlvbiBnZXRVbmRlZmluZWRTdGF0ZUVycm9yTWVzc2FnZShrZXksIGFjdGlvbikge1xuICB2YXIgYWN0aW9uVHlwZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZTtcbiAgdmFyIGFjdGlvbkRlc2NyaXB0aW9uID0gYWN0aW9uVHlwZSAmJiAnYWN0aW9uIFwiJyArIFN0cmluZyhhY3Rpb25UeXBlKSArICdcIicgfHwgJ2FuIGFjdGlvbic7XG5cbiAgcmV0dXJuICdHaXZlbiAnICsgYWN0aW9uRGVzY3JpcHRpb24gKyAnLCByZWR1Y2VyIFwiJyArIGtleSArICdcIiByZXR1cm5lZCB1bmRlZmluZWQuICcgKyAnVG8gaWdub3JlIGFuIGFjdGlvbiwgeW91IG11c3QgZXhwbGljaXRseSByZXR1cm4gdGhlIHByZXZpb3VzIHN0YXRlLiAnICsgJ0lmIHlvdSB3YW50IHRoaXMgcmVkdWNlciB0byBob2xkIG5vIHZhbHVlLCB5b3UgY2FuIHJldHVybiBudWxsIGluc3RlYWQgb2YgdW5kZWZpbmVkLic7XG59XG5cbmZ1bmN0aW9uIGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2UoaW5wdXRTdGF0ZSwgcmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGFyZ3VtZW50TmFtZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuSU5JVCA/ICdwcmVsb2FkZWRTdGF0ZSBhcmd1bWVudCBwYXNzZWQgdG8gY3JlYXRlU3RvcmUnIDogJ3ByZXZpb3VzIHN0YXRlIHJlY2VpdmVkIGJ5IHRoZSByZWR1Y2VyJztcblxuICBpZiAocmVkdWNlcktleXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuICdTdG9yZSBkb2VzIG5vdCBoYXZlIGEgdmFsaWQgcmVkdWNlci4gTWFrZSBzdXJlIHRoZSBhcmd1bWVudCBwYXNzZWQgJyArICd0byBjb21iaW5lUmVkdWNlcnMgaXMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgcmVkdWNlcnMuJztcbiAgfVxuXG4gIGlmICghaXNQbGFpbk9iamVjdChpbnB1dFN0YXRlKSkge1xuICAgIHJldHVybiAnVGhlICcgKyBhcmd1bWVudE5hbWUgKyAnIGhhcyB1bmV4cGVjdGVkIHR5cGUgb2YgXCInICsge30udG9TdHJpbmcuY2FsbChpbnB1dFN0YXRlKS5tYXRjaCgvXFxzKFthLXp8QS1aXSspLylbMV0gKyAnXCIuIEV4cGVjdGVkIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgJyArICgna2V5czogXCInICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyAnXCInKTtcbiAgfVxuXG4gIHZhciB1bmV4cGVjdGVkS2V5cyA9IE9iamVjdC5rZXlzKGlucHV0U3RhdGUpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuICFyZWR1Y2Vycy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICF1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XTtcbiAgfSk7XG5cbiAgdW5leHBlY3RlZEtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlW2tleV0gPSB0cnVlO1xuICB9KTtcblxuICBpZiAoYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5SRVBMQUNFKSByZXR1cm47XG5cbiAgaWYgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gJ1VuZXhwZWN0ZWQgJyArICh1bmV4cGVjdGVkS2V5cy5sZW5ndGggPiAxID8gJ2tleXMnIDogJ2tleScpICsgJyAnICsgKCdcIicgKyB1bmV4cGVjdGVkS2V5cy5qb2luKCdcIiwgXCInKSArICdcIiBmb3VuZCBpbiAnICsgYXJndW1lbnROYW1lICsgJy4gJykgKyAnRXhwZWN0ZWQgdG8gZmluZCBvbmUgb2YgdGhlIGtub3duIHJlZHVjZXIga2V5cyBpbnN0ZWFkOiAnICsgKCdcIicgKyByZWR1Y2VyS2V5cy5qb2luKCdcIiwgXCInKSArICdcIi4gVW5leHBlY3RlZCBrZXlzIHdpbGwgYmUgaWdub3JlZC4nKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhc3NlcnRSZWR1Y2VyU2hhcGUocmVkdWNlcnMpIHtcbiAgT2JqZWN0LmtleXMocmVkdWNlcnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciByZWR1Y2VyID0gcmVkdWNlcnNba2V5XTtcbiAgICB2YXIgaW5pdGlhbFN0YXRlID0gcmVkdWNlcih1bmRlZmluZWQsIHsgdHlwZTogQWN0aW9uVHlwZXMuSU5JVCB9KTtcblxuICAgIGlmICh0eXBlb2YgaW5pdGlhbFN0YXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZWR1Y2VyIFwiJyArIGtleSArICdcIiByZXR1cm5lZCB1bmRlZmluZWQgZHVyaW5nIGluaXRpYWxpemF0aW9uLiAnICsgJ0lmIHRoZSBzdGF0ZSBwYXNzZWQgdG8gdGhlIHJlZHVjZXIgaXMgdW5kZWZpbmVkLCB5b3UgbXVzdCAnICsgJ2V4cGxpY2l0bHkgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgJyArICdub3QgYmUgdW5kZWZpbmVkLiBJZiB5b3UgZG9uXFwndCB3YW50IHRvIHNldCBhIHZhbHVlIGZvciB0aGlzIHJlZHVjZXIsICcgKyAneW91IGNhbiB1c2UgbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC4nKTtcbiAgICB9XG5cbiAgICB2YXIgdHlwZSA9ICdAQHJlZHV4L1BST0JFX1VOS05PV05fQUNUSU9OXycgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNykuc3BsaXQoJycpLmpvaW4oJy4nKTtcbiAgICBpZiAodHlwZW9mIHJlZHVjZXIodW5kZWZpbmVkLCB7IHR5cGU6IHR5cGUgfSkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlZHVjZXIgXCInICsga2V5ICsgJ1wiIHJldHVybmVkIHVuZGVmaW5lZCB3aGVuIHByb2JlZCB3aXRoIGEgcmFuZG9tIHR5cGUuICcgKyAoJ0RvblxcJ3QgdHJ5IHRvIGhhbmRsZSAnICsgQWN0aW9uVHlwZXMuSU5JVCArICcgb3Igb3RoZXIgYWN0aW9ucyBpbiBcInJlZHV4LypcIiAnKSArICduYW1lc3BhY2UuIFRoZXkgYXJlIGNvbnNpZGVyZWQgcHJpdmF0ZS4gSW5zdGVhZCwgeW91IG11c3QgcmV0dXJuIHRoZSAnICsgJ2N1cnJlbnQgc3RhdGUgZm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHVubGVzcyBpdCBpcyB1bmRlZmluZWQsICcgKyAnaW4gd2hpY2ggY2FzZSB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUsIHJlZ2FyZGxlc3Mgb2YgdGhlICcgKyAnYWN0aW9uIHR5cGUuIFRoZSBpbml0aWFsIHN0YXRlIG1heSBub3QgYmUgdW5kZWZpbmVkLCBidXQgY2FuIGJlIG51bGwuJyk7XG4gICAgfVxuICB9KTtcbn1cblxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBkaWZmZXJlbnQgcmVkdWNlciBmdW5jdGlvbnMsIGludG8gYSBzaW5nbGVcbiAqIHJlZHVjZXIgZnVuY3Rpb24uIEl0IHdpbGwgY2FsbCBldmVyeSBjaGlsZCByZWR1Y2VyLCBhbmQgZ2F0aGVyIHRoZWlyIHJlc3VsdHNcbiAqIGludG8gYSBzaW5nbGUgc3RhdGUgb2JqZWN0LCB3aG9zZSBrZXlzIGNvcnJlc3BvbmQgdG8gdGhlIGtleXMgb2YgdGhlIHBhc3NlZFxuICogcmVkdWNlciBmdW5jdGlvbnMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlZHVjZXJzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgY29ycmVzcG9uZCB0byBkaWZmZXJlbnRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zIHRoYXQgbmVlZCB0byBiZSBjb21iaW5lZCBpbnRvIG9uZS4gT25lIGhhbmR5IHdheSB0byBvYnRhaW5cbiAqIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzIHJlZHVjZXJzYCBzeW50YXguIFRoZSByZWR1Y2VycyBtYXkgbmV2ZXIgcmV0dXJuXG4gKiB1bmRlZmluZWQgZm9yIGFueSBhY3Rpb24uIEluc3RlYWQsIHRoZXkgc2hvdWxkIHJldHVybiB0aGVpciBpbml0aWFsIHN0YXRlXG4gKiBpZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZW0gd2FzIHVuZGVmaW5lZCwgYW5kIHRoZSBjdXJyZW50IHN0YXRlIGZvciBhbnlcbiAqIHVucmVjb2duaXplZCBhY3Rpb24uXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHJlZHVjZXIgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGV2ZXJ5IHJlZHVjZXIgaW5zaWRlIHRoZVxuICogcGFzc2VkIG9iamVjdCwgYW5kIGJ1aWxkcyBhIHN0YXRlIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlLlxuICovXG5mdW5jdGlvbiBjb21iaW5lUmVkdWNlcnMocmVkdWNlcnMpIHtcbiAgdmFyIHJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMocmVkdWNlcnMpO1xuICB2YXIgZmluYWxSZWR1Y2VycyA9IHt9O1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlZHVjZXJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IHJlZHVjZXJLZXlzW2ldO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgd2FybmluZygnTm8gcmVkdWNlciBwcm92aWRlZCBmb3Iga2V5IFwiJyArIGtleSArICdcIicpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZmluYWxSZWR1Y2Vyc1trZXldID0gcmVkdWNlcnNba2V5XTtcbiAgICB9XG4gIH1cbiAgdmFyIGZpbmFsUmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhmaW5hbFJlZHVjZXJzKTtcblxuICB2YXIgdW5leHBlY3RlZEtleUNhY2hlID0gdm9pZCAwO1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHVuZXhwZWN0ZWRLZXlDYWNoZSA9IHt9O1xuICB9XG5cbiAgdmFyIHNoYXBlQXNzZXJ0aW9uRXJyb3IgPSB2b2lkIDA7XG4gIHRyeSB7XG4gICAgYXNzZXJ0UmVkdWNlclNoYXBlKGZpbmFsUmVkdWNlcnMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgc2hhcGVBc3NlcnRpb25FcnJvciA9IGU7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gY29tYmluYXRpb24oKSB7XG4gICAgdmFyIHN0YXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgICB2YXIgYWN0aW9uID0gYXJndW1lbnRzWzFdO1xuXG4gICAgaWYgKHNoYXBlQXNzZXJ0aW9uRXJyb3IpIHtcbiAgICAgIHRocm93IHNoYXBlQXNzZXJ0aW9uRXJyb3I7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHZhciB3YXJuaW5nTWVzc2FnZSA9IGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2Uoc3RhdGUsIGZpbmFsUmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKTtcbiAgICAgIGlmICh3YXJuaW5nTWVzc2FnZSkge1xuICAgICAgICB3YXJuaW5nKHdhcm5pbmdNZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgaGFzQ2hhbmdlZCA9IGZhbHNlO1xuICAgIHZhciBuZXh0U3RhdGUgPSB7fTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfa2V5ID0gZmluYWxSZWR1Y2VyS2V5c1tfaV07XG4gICAgICB2YXIgcmVkdWNlciA9IGZpbmFsUmVkdWNlcnNbX2tleV07XG4gICAgICB2YXIgcHJldmlvdXNTdGF0ZUZvcktleSA9IHN0YXRlW19rZXldO1xuICAgICAgdmFyIG5leHRTdGF0ZUZvcktleSA9IHJlZHVjZXIocHJldmlvdXNTdGF0ZUZvcktleSwgYWN0aW9uKTtcbiAgICAgIGlmICh0eXBlb2YgbmV4dFN0YXRlRm9yS2V5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB2YXIgZXJyb3JNZXNzYWdlID0gZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2UoX2tleSwgYWN0aW9uKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yTWVzc2FnZSk7XG4gICAgICB9XG4gICAgICBuZXh0U3RhdGVbX2tleV0gPSBuZXh0U3RhdGVGb3JLZXk7XG4gICAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBuZXh0U3RhdGVGb3JLZXkgIT09IHByZXZpb3VzU3RhdGVGb3JLZXk7XG4gICAgfVxuICAgIHJldHVybiBoYXNDaGFuZ2VkID8gbmV4dFN0YXRlIDogc3RhdGU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3IsIGRpc3BhdGNoKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGRpc3BhdGNoKGFjdGlvbkNyZWF0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH07XG59XG5cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24gYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGZ1bmN0aW9uIGluIHJldHVybi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdH0gYWN0aW9uQ3JlYXRvcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uXG4gKiBjcmVhdG9yIGZ1bmN0aW9ucy4gT25lIGhhbmR5IHdheSB0byBvYnRhaW4gaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXNgXG4gKiBzeW50YXguIFlvdSBtYXkgYWxzbyBwYXNzIGEgc2luZ2xlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGRpc3BhdGNoIFRoZSBgZGlzcGF0Y2hgIGZ1bmN0aW9uIGF2YWlsYWJsZSBvbiB5b3VyIFJlZHV4XG4gKiBzdG9yZS5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb258T2JqZWN0fSBUaGUgb2JqZWN0IG1pbWlja2luZyB0aGUgb3JpZ2luYWwgb2JqZWN0LCBidXQgd2l0aFxuICogZXZlcnkgYWN0aW9uIGNyZWF0b3Igd3JhcHBlZCBpbnRvIHRoZSBgZGlzcGF0Y2hgIGNhbGwuIElmIHlvdSBwYXNzZWQgYVxuICogZnVuY3Rpb24gYXMgYGFjdGlvbkNyZWF0b3JzYCwgdGhlIHJldHVybiB2YWx1ZSB3aWxsIGFsc28gYmUgYSBzaW5nbGVcbiAqIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICgodHlwZW9mIGFjdGlvbkNyZWF0b3JzID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihhY3Rpb25DcmVhdG9ycykpICE9PSAnb2JqZWN0JyB8fCBhY3Rpb25DcmVhdG9ycyA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcignYmluZEFjdGlvbkNyZWF0b3JzIGV4cGVjdGVkIGFuIG9iamVjdCBvciBhIGZ1bmN0aW9uLCBpbnN0ZWFkIHJlY2VpdmVkICcgKyAoYWN0aW9uQ3JlYXRvcnMgPT09IG51bGwgPyAnbnVsbCcgOiB0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGFjdGlvbkNyZWF0b3JzKSkgKyAnLiAnICsgJ0RpZCB5b3Ugd3JpdGUgXCJpbXBvcnQgQWN0aW9uQ3JlYXRvcnMgZnJvbVwiIGluc3RlYWQgb2YgXCJpbXBvcnQgKiBhcyBBY3Rpb25DcmVhdG9ycyBmcm9tXCI/Jyk7XG4gIH1cblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGFjdGlvbkNyZWF0b3JzKTtcbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBhY3Rpb25DcmVhdG9yc1trZXldO1xuICAgIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYm91bmRBY3Rpb25DcmVhdG9yc1trZXldID0gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn1cblxuLyoqXG4gKiBDb21wb3NlcyBzaW5nbGUtYXJndW1lbnQgZnVuY3Rpb25zIGZyb20gcmlnaHQgdG8gbGVmdC4gVGhlIHJpZ2h0bW9zdFxuICogZnVuY3Rpb24gY2FuIHRha2UgbXVsdGlwbGUgYXJndW1lbnRzIGFzIGl0IHByb3ZpZGVzIHRoZSBzaWduYXR1cmUgZm9yXG4gKiB0aGUgcmVzdWx0aW5nIGNvbXBvc2l0ZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBmdW5jcyBUaGUgZnVuY3Rpb25zIHRvIGNvbXBvc2UuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gb2J0YWluZWQgYnkgY29tcG9zaW5nIHRoZSBhcmd1bWVudCBmdW5jdGlvbnNcbiAqIGZyb20gcmlnaHQgdG8gbGVmdC4gRm9yIGV4YW1wbGUsIGNvbXBvc2UoZiwgZywgaCkgaXMgaWRlbnRpY2FsIHRvIGRvaW5nXG4gKiAoLi4uYXJncykgPT4gZihnKGgoLi4uYXJncykpKS5cbiAqL1xuXG5mdW5jdGlvbiBjb21wb3NlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgZnVuY3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBmdW5jc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGlmIChmdW5jcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgICAgcmV0dXJuIGFyZztcbiAgICB9O1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiBmdW5jc1swXTtcbiAgfVxuXG4gIHJldHVybiBmdW5jcy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGEoYi5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cykpO1xuICAgIH07XG4gIH0pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBzdG9yZSBlbmhhbmNlciB0aGF0IGFwcGxpZXMgbWlkZGxld2FyZSB0byB0aGUgZGlzcGF0Y2ggbWV0aG9kXG4gKiBvZiB0aGUgUmVkdXggc3RvcmUuIFRoaXMgaXMgaGFuZHkgZm9yIGEgdmFyaWV0eSBvZiB0YXNrcywgc3VjaCBhcyBleHByZXNzaW5nXG4gKiBhc3luY2hyb25vdXMgYWN0aW9ucyBpbiBhIGNvbmNpc2UgbWFubmVyLCBvciBsb2dnaW5nIGV2ZXJ5IGFjdGlvbiBwYXlsb2FkLlxuICpcbiAqIFNlZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UgYXMgYW4gZXhhbXBsZSBvZiB0aGUgUmVkdXggbWlkZGxld2FyZS5cbiAqXG4gKiBCZWNhdXNlIG1pZGRsZXdhcmUgaXMgcG90ZW50aWFsbHkgYXN5bmNocm9ub3VzLCB0aGlzIHNob3VsZCBiZSB0aGUgZmlyc3RcbiAqIHN0b3JlIGVuaGFuY2VyIGluIHRoZSBjb21wb3NpdGlvbiBjaGFpbi5cbiAqXG4gKiBOb3RlIHRoYXQgZWFjaCBtaWRkbGV3YXJlIHdpbGwgYmUgZ2l2ZW4gdGhlIGBkaXNwYXRjaGAgYW5kIGBnZXRTdGF0ZWAgZnVuY3Rpb25zXG4gKiBhcyBuYW1lZCBhcmd1bWVudHMuXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gbWlkZGxld2FyZXMgVGhlIG1pZGRsZXdhcmUgY2hhaW4gdG8gYmUgYXBwbGllZC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBzdG9yZSBlbmhhbmNlciBhcHBseWluZyB0aGUgbWlkZGxld2FyZS5cbiAqL1xuZnVuY3Rpb24gYXBwbHlNaWRkbGV3YXJlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgbWlkZGxld2FyZXMgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBtaWRkbGV3YXJlc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoY3JlYXRlU3RvcmUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuXG4gICAgICB2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZS5hcHBseSh1bmRlZmluZWQsIGFyZ3MpO1xuICAgICAgdmFyIF9kaXNwYXRjaCA9IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Rpc3BhdGNoaW5nIHdoaWxlIGNvbnN0cnVjdGluZyB5b3VyIG1pZGRsZXdhcmUgaXMgbm90IGFsbG93ZWQuICcgKyAnT3RoZXIgbWlkZGxld2FyZSB3b3VsZCBub3QgYmUgYXBwbGllZCB0byB0aGlzIGRpc3BhdGNoLicpO1xuICAgICAgfTtcblxuICAgICAgdmFyIG1pZGRsZXdhcmVBUEkgPSB7XG4gICAgICAgIGdldFN0YXRlOiBzdG9yZS5nZXRTdGF0ZSxcbiAgICAgICAgZGlzcGF0Y2g6IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICAgIHJldHVybiBfZGlzcGF0Y2guYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIGNoYWluID0gbWlkZGxld2FyZXMubWFwKGZ1bmN0aW9uIChtaWRkbGV3YXJlKSB7XG4gICAgICAgIHJldHVybiBtaWRkbGV3YXJlKG1pZGRsZXdhcmVBUEkpO1xuICAgICAgfSk7XG4gICAgICBfZGlzcGF0Y2ggPSBjb21wb3NlLmFwcGx5KHVuZGVmaW5lZCwgY2hhaW4pKHN0b3JlLmRpc3BhdGNoKTtcblxuICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBzdG9yZSwge1xuICAgICAgICBkaXNwYXRjaDogX2Rpc3BhdGNoXG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xufVxuXG4vKlxuICogVGhpcyBpcyBhIGR1bW15IGZ1bmN0aW9uIHRvIGNoZWNrIGlmIHRoZSBmdW5jdGlvbiBuYW1lIGhhcyBiZWVuIGFsdGVyZWQgYnkgbWluaWZpY2F0aW9uLlxuICogSWYgdGhlIGZ1bmN0aW9uIGhhcyBiZWVuIG1pbmlmaWVkIGFuZCBOT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nLCB3YXJuIHRoZSB1c2VyLlxuICovXG5mdW5jdGlvbiBpc0NydXNoZWQoKSB7fVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgaXNDcnVzaGVkLm5hbWUgPT09ICdzdHJpbmcnICYmIGlzQ3J1c2hlZC5uYW1lICE9PSAnaXNDcnVzaGVkJykge1xuICB3YXJuaW5nKFwiWW91IGFyZSBjdXJyZW50bHkgdXNpbmcgbWluaWZpZWQgY29kZSBvdXRzaWRlIG9mIE5PREVfRU5WID09PSAncHJvZHVjdGlvbicuIFwiICsgJ1RoaXMgbWVhbnMgdGhhdCB5b3UgYXJlIHJ1bm5pbmcgYSBzbG93ZXIgZGV2ZWxvcG1lbnQgYnVpbGQgb2YgUmVkdXguICcgKyAnWW91IGNhbiB1c2UgbG9vc2UtZW52aWZ5IChodHRwczovL2dpdGh1Yi5jb20vemVydG9zaC9sb29zZS1lbnZpZnkpIGZvciBicm93c2VyaWZ5ICcgKyAnb3IgRGVmaW5lUGx1Z2luIGZvciB3ZWJwYWNrIChodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzMwMDMwMDMxKSAnICsgJ3RvIGVuc3VyZSB5b3UgaGF2ZSB0aGUgY29ycmVjdCBjb2RlIGZvciB5b3VyIHByb2R1Y3Rpb24gYnVpbGQuJyk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVN0b3JlLCBjb21iaW5lUmVkdWNlcnMsIGJpbmRBY3Rpb25DcmVhdG9ycywgYXBwbHlNaWRkbGV3YXJlLCBjb21wb3NlLCBBY3Rpb25UeXBlcyBhcyBfX0RPX05PVF9VU0VfX0FjdGlvblR5cGVzIH07XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSwgZXZhbCkoXCJ0aGlzXCIpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbE1vZHVsZSkge1xuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWVcblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xyXG5cclxuY2xhc3MgRm9ybSBleHRlbmRzIENvbXBvbmVudHtcclxuICByZW5kZXIoKXtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybUNvbnRhaW5lclwiPlxyXG4gICAgICAgIDxmb3JtIG9uU3VibWl0PXsoZSkgPT4gdGhpcy5wcm9wcy5oYW5kbGVTdWJtaXQoZSl9PlxyXG4gICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB0aGlzLnByb3BzLmhhbmRsZUNoYW5nZShlKX1cclxuICAgICAgICAgICAgdmFsdWU9e3RoaXMucHJvcHMuaW5wdXRWYWx1ZX1cclxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciB5b3VyIHRhc2sgaGVyZSAuLi4uLi5cIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwic3VibWl0XCIgdmFsdWU9XCLvvItcIi8+XHJcbiAgICAgICAgPC9mb3JtPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5Gb3JtLnByb3BUeXBlcyA9e1xyXG4gIGlucHV0VmFsdWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICBoYW5kbGVDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXHJcbiAgaGFuZGxlU3VibWl0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtO1xyXG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcclxuXHJcbmltcG9ydCBUYXNrIGZyb20gXCIuL1Rhc2suanNcIjtcclxuXHJcbmNsYXNzIExpc3QgZXh0ZW5kcyBDb21wb25lbnR7ICBcclxuICByZW5kZXIoKXtcclxuICAgIGZ1bmN0aW9uIGNyZWF0ZVRhc2soaW5kZXgsIGhhbmRsZUZpbmlzaCwgdG9kbywgaGFuZGxlRGVsZXRlKXtcclxuICAgICAgcmV0dXJuIChcclxuICAgICAgICA8VGFza1xyXG4gICAgICAgICAga2V5PXtpbmRleH1cclxuICAgICAgICAgIGluZGV4PXtpbmRleH1cclxuICAgICAgICAgIGhhbmRsZUZpbmlzaD17aGFuZGxlRmluaXNofVxyXG4gICAgICAgICAgdG9kbz17dG9kb31cclxuICAgICAgICAgIGhhbmRsZURlbGV0ZT17aGFuZGxlRGVsZXRlfVxyXG4gICAgICAgIC8+XHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImxpc3RDb250YWluZXJcIj5cclxuICAgICAgICB7dGhpcy5wcm9wcy50b2Rvcy5tYXAoKHRvZG8saW5kZXgpID0+IHtcclxuICAgICAgICAgIGlmKHRoaXMucHJvcHMudGFicyA9PT0gXCJBbGxcIil7XHJcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVUYXNrKGluZGV4LCB0aGlzLnByb3BzLmhhbmRsZUZpbmlzaCwgdG9kbywgdGhpcy5wcm9wcy5oYW5kbGVEZWxldGUpOyAgICAgICAgICAgIFxyXG4gICAgICAgICAgfSAgICAgICAgIFxyXG4gICAgICAgICAgZWxzZSBpZih0b2RvLmRvbmUgPT09ICh0aGlzLnByb3BzLnRhYnMgPT09IFwiRG9uZVwiID8gdHJ1ZSA6IGZhbHNlKSl7XHJcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVUYXNrKGluZGV4LCB0aGlzLnByb3BzLmhhbmRsZUZpbmlzaCwgdG9kbywgdGhpcy5wcm9wcy5oYW5kbGVEZWxldGUpOyAgICAgIFxyXG4gICAgICAgICAgfSAgICAgICAgICBcclxuICAgICAgICB9KX1cclxuICAgICAgPC9kaXY+ICAgICBcclxuICAgICk7ICAgIFxyXG4gIH1cclxufVxyXG5cclxuTGlzdC5wcm9wVHlwZXMgPSB7XHJcbiAgdG9kb3M6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxyXG4gIGhhbmRsZUZpbmlzaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcclxuICBoYW5kbGVEZWxldGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXHJcbiAgdGFiczogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMaXN0O1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcclxuXHJcbmNsYXNzIFRhc2sgZXh0ZW5kcyBDb21wb25lbnR7ICBcclxuICByZW5kZXIoKXtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGFza0NvbnRhaW5lclwiPlxyXG4gICAgICAgIDxpbnB1dCBcclxuICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiIFxyXG4gICAgICAgICAgY2hlY2tlZD17dGhpcy5wcm9wcy50b2RvLmRvbmV9IFxyXG4gICAgICAgICAgb25DaGFuZ2U9eygpID0+IHRoaXMucHJvcHMuaGFuZGxlRmluaXNoKHRoaXMucHJvcHMuaW5kZXgpfT5cclxuICAgICAgICA8L2lucHV0PlxyXG4gICAgICAgIDxzcGFuIHN0eWxlPXt7dGV4dERlY29yYXRpb246IHRoaXMucHJvcHMudG9kby5kb25lID8gXCJsaW5lLXRocm91Z2hcIiA6IFwibm9uZVwifX0+XHJcbiAgICAgICAgICB7dGhpcy5wcm9wcy50b2RvLnZhbHVlfVxyXG4gICAgICAgIDwvc3Bhbj4gICAgIFxyXG4gICAgICAgIDxidXR0b24gb25DbGljaz17KGUpID0+IHRoaXMucHJvcHMuaGFuZGxlRGVsZXRlKGUsIHRoaXMucHJvcHMuaW5kZXgpfT5EZWxldGU8L2J1dHRvbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuVGFzay5wcm9wVHlwZXMgPSB7XHJcbiAgdG9kbzogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxyXG4gIGhhbmRsZUZpbmlzaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcclxuICBpbmRleDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxyXG4gIGhhbmRsZURlbGV0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGFzaztcclxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XHJcblxyXG5jbGFzcyBUYWIgZXh0ZW5kcyBDb21wb25lbnR7XHJcbiAgcmVuZGVyKCl7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17KGUpID0+IHRoaXMucHJvcHMuaGFuZGxlVGFicyhlKX0gdmFsdWU9XCJBbGxcIiAvPlxyXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17KGUpID0+IHRoaXMucHJvcHMuaGFuZGxlVGFicyhlKX0gdmFsdWU9XCJVbmRvbmVcIiAvPlxyXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17KGUpID0+IHRoaXMucHJvcHMuaGFuZGxlVGFicyhlKX0gdmFsdWU9XCJEb25lXCIgLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuVGFiLnByb3BUeXBlcyA9IHtcclxuICB0YWJzOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgaGFuZGxlVGFiczogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGFiO1xyXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vc3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJ2YXIgZXNjYXBlID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi91cmwvZXNjYXBlLmpzXCIpO1xuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuYXBwQ29udGFpbmVyIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AgbGVmdCwgIzk1N0ZFRiwgI0UwOTZGQywgI0Y2QzBGQywgcGluayk7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBoZWlnaHQ6IDkwMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uYXBwQ29udGFpbmVyID4gZGl2IHtcXHJcXG4gIGZsZXg6IG5vbmU7XFxyXFxuICB3aWR0aDogODAwcHg7XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuXFxyXFxuLmFwcENvbnRhaW5lciA+IGRpdiA+IGRpdiB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXHJcXG4gIGZvbnQtc2l6ZTogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLmFwcENvbnRhaW5lciA+IGRpdiA+IGRpdiA+IHNwYW57IGZsZXg6IG5vbmU7IHdpZHRoOiAzMCU7fVxcclxcblxcclxcbi5hcHBDb250YWluZXIgPiBkaXYgPiBkaXYgPiBoMXsgZmxleDogbm9uZTsgIHdpZHRoOiA3MCU7fVxcclxcblxcclxcbi5mb3JtQ29udGFpbmVye1xcclxcbiAgZmxleDogbm9uZTtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgbWFyZ2luOiAzJTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5mb3JtQ29udGFpbmVyID4gZm9ybSB7XFxyXFxuICBmbGV4OiBub25lO1xcclxcbiAgd2lkdGg6IDcwJTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uZm9ybUNvbnRhaW5lciA+IGZvcm0gPiBpbnB1dFt0eXBlPVxcXCJ0ZXh0XFxcIl17XFxyXFxuICB3aWR0aDogNTAwcHg7XFxyXFxuICBsaW5lLWhlaWdodDogMztcXHJcXG4gIGZvbnQtc2l6ZTogMThweDtcXHJcXG4gIHBhZGRpbmctbGVmdDogMTBweDtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDUlO1xcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTpub25lO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjpyZ2JhKCAyNTUsIDI1NSwgMjU1LCAuMSk7XFxyXFxuICAtd2Via2l0LWJveC1zaGFkb3c6IG5vbmU7XFxyXFxuICAtbW96LWJveC1zaGFkb3c6IG5vbmU7XFxyXFxuICBib3gtc2hhZG93OiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4uZm9ybUNvbnRhaW5lciA+IGZvcm0gPiBpbnB1dFt0eXBlPVxcXCJzdWJtaXRcXFwiXXtcXHJcXG4gIHdpZHRoOiA0MHB4O1xcclxcbiAgaGVpZ2h0OiA0MHB4O1xcclxcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7IFxcclxcbiAgZm9udC1zaXplOiAyNXB4O1xcclxcbiAgY29sb3I6IHdoaXRlO1xcclxcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxyXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICBib3JkZXI6IG5vbmU7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4vaW1nL2FkZC5wbmdcIikpICsgXCIpO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGOUM2QTtcXHJcXG4gIC13ZWJraXQtYm94LXNoYWRvdzogbm9uZTtcXHJcXG4gIC1tb3otYm94LXNoYWRvdzogbm9uZTtcXHJcXG4gIGJveC1zaGFkb3c6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbi5saXN0Q29udGFpbmVyIHtcXHJcXG4gIGZsZXg6IG5vbmU7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIGhlaWdodDogNjAwcHg7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcclxcbn1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVzY2FwZSh1cmwpIHtcbiAgICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHVybFxuICAgIH1cbiAgICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICAgICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgICB9XG4gICAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAgIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gICAgaWYgKC9bXCInKCkgXFx0XFxuXS8udGVzdCh1cmwpKSB7XG4gICAgICAgIHJldHVybiAnXCInICsgdXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgJ1xcXFxuJykgKyAnXCInXG4gICAgfVxuXG4gICAgcmV0dXJuIHVybFxufVxuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cblxudmFyIHN0eWxlc0luRG9tID0ge307XG5cbnZhclx0bWVtb2l6ZSA9IGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbztcblxuXHRyZXR1cm4gZnVuY3Rpb24gKCkge1xuXHRcdGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikgbWVtbyA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0cmV0dXJuIG1lbW87XG5cdH07XG59O1xuXG52YXIgaXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xuXHQvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuXHQvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG5cdC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcblx0Ly8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG5cdC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuXHRyZXR1cm4gd2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7XG59KTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uICh0YXJnZXQsIHBhcmVudCkge1xuICBpZiAocGFyZW50KXtcbiAgICByZXR1cm4gcGFyZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbiAgfVxuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xufTtcblxudmFyIGdldEVsZW1lbnQgPSAoZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vID0ge307XG5cblx0cmV0dXJuIGZ1bmN0aW9uKHRhcmdldCwgcGFyZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgcGFzc2luZyBmdW5jdGlvbiBpbiBvcHRpb25zLCB0aGVuIHVzZSBpdCBmb3IgcmVzb2x2ZSBcImhlYWRcIiBlbGVtZW50LlxuICAgICAgICAgICAgICAgIC8vIFVzZWZ1bCBmb3IgU2hhZG93IFJvb3Qgc3R5bGUgaS5lXG4gICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICAgICAgICAgIC8vICAgaW5zZXJ0SW50bzogZnVuY3Rpb24gKCkgeyByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb29cIikuc2hhZG93Um9vdCB9XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR2YXIgc3R5bGVUYXJnZXQgPSBnZXRUYXJnZXQuY2FsbCh0aGlzLCB0YXJnZXQsIHBhcmVudCk7XG5cdFx0XHQvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXHRcdFx0aWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG5cdFx0XHRcdFx0Ly8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuXHRcdFx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1t0YXJnZXRdXG5cdH07XG59KSgpO1xuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhclx0c2luZ2xldG9uQ291bnRlciA9IDA7XG52YXJcdHN0eWxlc0luc2VydGVkQXRUb3AgPSBbXTtcblxudmFyXHRmaXhVcmxzID0gcmVxdWlyZShcIi4vdXJsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09IFwiYm9vbGVhblwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSA8aGVhZD4gZWxlbWVudFxuICAgICAgICBpZiAoIW9wdGlvbnMuaW5zZXJ0SW50bykgb3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCI7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIHRoZSB0YXJnZXRcblx0aWYgKCFvcHRpb25zLmluc2VydEF0KSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpO1xuXG5cdGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XG5cdFx0fVxuXG5cdFx0aWYobmV3TGlzdCkge1xuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0LCBvcHRpb25zKTtcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcblxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xuXG5cdFx0XHRcdGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIHBhcnRzID0gW107XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzfTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzIChsaXN0LCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xuXHRcdHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdO1xuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcblxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKSBzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xuXHRcdGVsc2UgbmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50IChvcHRpb25zLCBzdHlsZSkge1xuXHR2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pXG5cblx0aWYgKCF0YXJnZXQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcblx0fVxuXG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlc0luc2VydGVkQXRUb3Bbc3R5bGVzSW5zZXJ0ZWRBdFRvcC5sZW5ndGggLSAxXTtcblxuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmICghbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3ApIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIHRhcmdldC5maXJzdENoaWxkKTtcblx0XHR9IGVsc2UgaWYgKGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdFx0fVxuXHRcdHN0eWxlc0luc2VydGVkQXRUb3AucHVzaChzdHlsZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJib3R0b21cIikge1xuXHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwib2JqZWN0XCIgJiYgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpIHtcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlLCB0YXJnZXQpO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIG5leHRTaWJsaW5nKTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXG5cdGlmKG9wdGlvbnMuYXR0cnMubm9uY2UgPT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBub25jZSA9IGdldE5vbmNlKCk7XG5cdFx0aWYgKG5vbmNlKSB7XG5cdFx0XHRvcHRpb25zLmF0dHJzLm5vbmNlID0gbm9uY2U7XG5cdFx0fVxuXHR9XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXHRvcHRpb25zLmF0dHJzLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXG5cdGFkZEF0dHJzKGxpbmssIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGluayk7XG5cblx0cmV0dXJuIGxpbms7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJzIChlbCwgYXR0cnMpIHtcblx0T2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gZ2V0Tm9uY2UoKSB7XG5cdGlmICh0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHRyZXR1cm4gX193ZWJwYWNrX25vbmNlX187XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmosIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xuXG5cdC8vIElmIGEgdHJhbnNmb3JtIGZ1bmN0aW9uIHdhcyBkZWZpbmVkLCBydW4gaXQgb24gdGhlIGNzc1xuXHRpZiAob3B0aW9ucy50cmFuc2Zvcm0gJiYgb2JqLmNzcykge1xuXHQgICAgcmVzdWx0ID0gb3B0aW9ucy50cmFuc2Zvcm0ob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=